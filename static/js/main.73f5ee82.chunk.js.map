{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Utils/validateFabricator.js","BarotraumaCalc/Utils/validateSkill.js","BarotraumaCalc/Utils/validateUpgrades.js","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","BarotraumaCalc/Components/AdditionalFilters.js","App.js","index.js"],"names":["rawItems","aggregatedOptions","gameData","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","TEXTURE_DIMENTIONS","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","offsetMargin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","customProvided","option","provided","padding","control","borderColor","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexGrow","marginTop","maxMenuHeight","OUTPOST_OPTIONS","outpost","city","research","military","mine","DEFAULT_OUTPOST_OPTION","DEFAULT_SKILL_LEVEL","FABRICATOR_OPTIONS","all","fabricator","medicalfabricator","DEFAULT_FABRICATOR_OPTION","ENGLISH_SKILL_NAMES","helm","weapons","mechanical","electrical","medical","initiative","courage","validateReputation","min","parseInt","validateOutpost","validateFabricator","validateSkill","parsed","isNaN","getRGB","positive","negative","ClickableItem","onClick","cursor","backgroundColor","rating","item","rnd","price","floor","compareItems","a","b","InlineItem","additionalRating","prefix","postfix","RatedItems","items","className","header","explanation","display","alignItems","justifyContent","flexWrap","sort","obj","calculateItem","reputation","destoutpost","destreputation","fabricatortypes","skills","upgrades","getOutpostData","modified","getOutpostMultiplier","multiplier","hasPriceData","default","getBuyingPrice","outpostData","soldeverywhere","sold","isSoldThere","getSellingPrice","getFabricationProfit","sellingprice","fabricate","reduce","sum","id","amt","Infinity","getDeconstructionProfit","buyingprice","deconstruct","getSellFabricationProfit","getSellDeconstructionProfit","getRealFabricationTime","fabricate_time","degreeOfSuccess","skill","level","keys","t","getRealDeconstructionTime","deconstruct_time","deconstructor","trade","fabr","sellFabr","dec","sellDec","usefulMats","updateUsefulMaterials","ingredients","ingredientId","ingredient","tradeProfit","round","fabrProfit","fabricator_types","decProfit","homepageResults","values","fabricateTime","deconstructTime","minAmt","min_amt","tradingProfit","fabricationProfit","deconstructionProfit","sellFabricationProfit","sellDeconstructionProfit","outpostmultiplier","destoutpostmultiplier","usedIn","used_in","usedInId","amount","scrappedFrom","scrapped_from","scrappedFromId","ProfitText","profit","profitable","color","children","BlockWithItems","itemsObj","mainText","colorCoded","TableData","missingValue","InfoTable","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","fabricatorTypes","PageContents","calculatorResults","getParams","validateUpgrades","fabrlvl","declvl","calcData","noItem","displayName","name","i","k","v","marginBottom","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","useCalculator","Row","Col","md","OutpostSelect","getParamName","minWidth","flexBasis","isSearchable","ReputationInput","inputRef","useRef","type","paddingLeft","paddingTop","paddingBottom","onInput","target","step","ref","onWheel","current","blur","BrandNavLogo","returnHomeGetParams","Navbar","Brand","to","textDecoration","OutpostSwapper","Button","SkillPicker","previousValue","changeValue","UpgradesPicker","getparam","FabricatorPicker","AdditionalFilters","Accordion","Card","Header","Toggle","as","eventKey","Collapse","Body","App","hideAlert","setHideAlert","basename","bg","expand","defaultExpanded","aria-controls","flexDirection","Container","Alert","onClose","dismissible","href","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73f5ee82.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","const TEXTURE_DIMENTIONS = {\r\n    \"AlienArtifact1.png\": [512, 512],\r\n    \"AlienMaterials.png\": [512, 512],\r\n    \"AlienPowerCell.png\": [128, 128],\r\n    \"alientools.png\": [128, 128],\r\n    \"button.png\": [128, 128],\r\n    \"containers.png\": [1024, 1024],\r\n    \"CreatureLoot.png\": [512, 256],\r\n    \"GrowablePlants_Temp.png\": [1024, 1024],\r\n    \"headgears.png\": [512, 512],\r\n    \"InventoryIconAtlas.png\": [1024, 1024],\r\n    \"InventoryIconAtlas2.png\": [512, 512],\r\n    \"LootablePlants.png\": [256, 512],\r\n    \"MiscJobGear.png\": [1024, 1024],\r\n    \"OutfitIcons.png\": [512, 512],\r\n    \"pets.png\": [512, 512],\r\n    \"weapons_new.png\": [512, 512],\r\n}\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, offsetMargin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...TEXTURE_DIMENTIONS[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                (offsetMargin || 0) + margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                (offsetMargin || 0) + margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (customProvided) => {\r\n    return {\r\n        option: provided => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n        }),\r\n        control: provided => ({\r\n            ...provided,\r\n            borderColor: \"gray\",\r\n        }),\r\n        container: provided => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...customProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <Option {...props}>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n      offsetMargin={-18}\r\n    />\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexGrow: 1, marginTop: 34})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export const DEFAULT_REPUTATION = 0\r\nexport const OUTPOST_OPTIONS = {\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    city: { value: 'city', label: 'Colony' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n}\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.outpost\r\nexport const DEFAULT_SKILL_LEVEL = 20\r\nexport const FABRICATOR_OPTIONS = {\r\n    all: { value: 'all', label: 'All' },\r\n    fabricator: { value: 'fabricator', label: 'Fabricator' },\r\n    medicalfabricator: { value: 'medicalfabricator', label: 'Medical Fabricator' },\r\n}\r\nexport const DEFAULT_FABRICATOR_OPTION = FABRICATOR_OPTIONS.all\r\nexport const ENGLISH_SKILL_NAMES = {\r\n    helm: \"Helm\",\r\n    weapons: \"Weapons\",\r\n    mechanical: \"Mechanical Engineering\",\r\n    electrical: \"Electrical Engineering\",\r\n    medical: \"Medical\",\r\n    initiative: \"Initiative\",\r\n    courage: \"Courage\",\r\n}\r\nexport const DEFAULT_UPGRADE_LEVELS = 0\r\n","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import { FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION } from '../globals'\r\n\r\nexport default function validateFabricator (input) {\r\n    return FABRICATOR_OPTIONS[input] || DEFAULT_FABRICATOR_OPTION\r\n}\r\n","import { DEFAULT_SKILL_LEVEL } from '../globals'\r\n\r\nexport default function validateSkill (input) {\r\n    let parsed = parseInt(input)\r\n    return Math.max(Math.min(isNaN(parsed) ? DEFAULT_SKILL_LEVEL : parsed, 200), 0)\r\n}\r\n","import { DEFAULT_UPGRADE_LEVELS } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_UPGRADE_LEVELS, 10), 0)\r\n}\r\n","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nconst getRGB = value => {\r\n    const positive = Math.min(value > 0 ? value : 0, 200)\r\n    const negative = Math.min(value < 0 ? -value : 0, 200)\r\n    return `rgb(${255-positive}, ${255-negative}, ${255-negative-positive})`\r\n}\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const pushGetParams = useGetParams()[1]\r\n    const size = 60 || props.size\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({ identifier: props.identifier })\r\n    }\r\n\r\n    return <div\r\n        onClick={handleClick}\r\n        style={{ cursor: 'pointer', height: size, backgroundColor: props.rating && getRGB(props.rating)}}\r\n    >\r\n        <TextureLoader\r\n            size={size}\r\n            file={props.item.texture}\r\n            sourcerect={props.item.sourcerect}\r\n            margin={0}\r\n        />\r\n    </div>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport data from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport ClickableItem from '../Components/ClickableItem'\r\nimport { ENGLISH_SKILL_NAMES, FABRICATOR_OPTIONS } from '../globals'\r\n\r\nconst rnd = price => Math.floor(price)\r\nconst compareItems = (a, b) => a.rating < b.rating ? 1 : a.rating === b.rating ? 0 : -1\r\n\r\nconst InlineItem = props => {\r\n    return <div>\r\n        <ClickableItem\r\n            item={props.item}\r\n            identifier={props.identifier}\r\n            rating={props.additionalRating}\r\n        /><b>{(props.prefix || \"\") + props.rating + (props.postfix || \"\")}</b></div>\r\n}\r\n\r\nconst RatedItems = props => {\r\n    return props.items.length ? <>\r\n        <h5 className=\"mb-0\">{props.header}</h5><small>{props.explanation}</small>\r\n        <div className=\"py-4\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {props.items.sort(compareItems).map(\r\n                obj => <InlineItem key={obj.identifier} identifier={obj.identifier} item={obj.item} rating={obj.rating} postfix={props.postfix} />\r\n            )}\r\n        </div></> : <></>\r\n}\r\n\r\nconst calculateItem = (item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades) => {\r\n\r\n    const getOutpostData = (item, location) => item.price?.modified?.[location]\r\n\r\n    const getOutpostMultiplier = (item, location) => getOutpostData(item, location)?.multiplier || 1\r\n\r\n    const hasPriceData = item => item.price?.default !== undefined\r\n\r\n    const isSoldThere = item => {\r\n        const outpostData = getOutpostData(item, outpost)\r\n        return hasPriceData(item) && (\r\n            (item.price.soldeverywhere !== \"false\") ||\r\n            (outpostData && (outpostData.sold !== \"false\"))\r\n        )\r\n    }\r\n\r\n    const getBuyingPrice = item => {\r\n        if (isSoldThere(item)) return Math.max(rnd(\r\n            rnd(\r\n                item.price.default * getOutpostMultiplier(item, outpost)\r\n            ) * (1 - reputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getSellingPrice = item => {\r\n        if (hasPriceData(item)) return Math.max(rnd(\r\n            rnd(\r\n                rnd(item.price.default * getOutpostMultiplier(item, destoutpost)) * .8\r\n            ) * (1 + destreputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getBuyingPrice(data[id])) || Infinity) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getDeconstructionProfit = (item, buyingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (buyingprice || Infinity)\r\n\r\n    const getSellFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getSellDeconstructionProfit = (item, sellingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (sellingprice || 0)\r\n\r\n    const getRealFabricationTime = item => {\r\n        if (item.skills === undefined) return item.fabricate_time / 2\r\n        const degreeOfSuccess = (Object.entries(item.skills).reduce(\r\n            (sum, [skill, level]) =>\r\n                sum + skills[skill] - level, 0\r\n        ) / Object.keys(item.skills).length + 100) / 200\r\n        const t = degreeOfSuccess < .5 ? degreeOfSuccess * degreeOfSuccess : degreeOfSuccess * 2\r\n        return item.fabricate_time / (1 + upgrades.fabricator * .05) / Math.max(Math.min(t, 2), .01)\r\n    }\r\n\r\n    const getRealDeconstructionTime = item => item.deconstruct_time / (1 + upgrades.deconstructor * .05)\r\n\r\n    if (item === undefined) {\r\n        const [trade, fabr, sellFabr, dec, sellDec] = [[], [], [], [], []]\r\n\r\n        const usefulMats = {}\r\n\r\n        const updateUsefulMaterials = ingredients => {\r\n            for (const ingredientId in ingredients) {\r\n                let ingredient = data[ingredientId]\r\n                if (getBuyingPrice(ingredient)) {\r\n                    if (ingredientId in usefulMats) {\r\n                        usefulMats[ingredientId].rating += 1\r\n                    } else {\r\n                        usefulMats[ingredientId] = { item: ingredient, identifier: ingredientId, rating: 1 }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [identifier, item] of Object.entries(data)) {\r\n\r\n            let buyingprice = getBuyingPrice(item)\r\n            let sellingprice = getSellingPrice(item)\r\n            let tradeProfit = sellingprice - buyingprice\r\n\r\n            if (tradeProfit > 0) {\r\n                trade.push({ item, identifier, rating: Math.round(1000 * tradeProfit / buyingprice) / 10 })\r\n            }\r\n\r\n            let fabrProfit = item.fabricate ? Math.round(100 *\r\n                getFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (fabricatortypes.value === \"all\" || (item.fabricator_types || \"\").split(\",\").includes(fabricatortypes.value)) {\r\n                if (fabrProfit > 0) {\r\n                    fabr.push({ item, identifier, rating: fabrProfit })\r\n                    updateUsefulMaterials(item.fabricate)\r\n\r\n                } else if (fabrProfit === -Infinity) {\r\n                    fabrProfit = item.fabricate ? Math.round(100 *\r\n                        getSellFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n                    ) / 100 : 0\r\n                    if (fabrProfit > 0) {\r\n                        sellFabr.push({ item, identifier, rating: fabrProfit })\r\n                        updateUsefulMaterials(item.fabricate)\r\n                    }\r\n                }\r\n            }\r\n\r\n            let decProfit = item.deconstruct ? Math.round(100 *\r\n                getDeconstructionProfit(item, buyingprice) / getRealDeconstructionTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (decProfit > 0) {\r\n                dec.push({ item, identifier, rating: decProfit })\r\n\r\n            } else if (decProfit === -Infinity) {\r\n                decProfit = item.deconstruct ? Math.round(100 *\r\n                    getSellDeconstructionProfit(item, sellingprice) / getRealDeconstructionTime(item)\r\n                ) / 100 : 0\r\n                if (decProfit > 0) {\r\n                    sellDec.push({ item, identifier, rating: decProfit })\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            homepageResults: <>\r\n                <RatedItems\r\n                    items={trade}\r\n                    postfix=\"%\"\r\n                    header=\"Trading investment returns\"\r\n                    explanation=\"(with no crafting involved)\" />\r\n                <RatedItems\r\n                    items={Object.values(usefulMats)}\r\n                    header=\"Useful crafting materials\"\r\n                    explanation=\"(involved in N profitable recipes and sold here)\" />\r\n                <RatedItems\r\n                    items={fabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Fabrication profits per fabrication time\"\r\n                    explanation=\"(departure sells ingredients)\" />\r\n                <RatedItems\r\n                    items={sellFabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Other fabrication profits\"\r\n                    explanation=\"(you have to acquire the ingredients through means other than trading)\" />\r\n                <RatedItems\r\n                    items={dec}\r\n                    postfix=\"/s\"\r\n                    header=\"Deconstruction profits per deconstruction time\"\r\n                    explanation=\"(departure sells those items)\" />\r\n                <RatedItems\r\n                    items={sellDec}\r\n                    postfix=\"/s\"\r\n                    header=\"Other deconstruction profits\"\r\n                    explanation=\"(you have to acquire the item through means other than trading)\" />\r\n            </>\r\n        }\r\n    }\r\n\r\n    const buyingprice = getBuyingPrice(item)\r\n    const sellingprice = getSellingPrice(item)\r\n\r\n    const getColorCodedUsedIn = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.used_in || {}).map(\r\n                ([usedInId, amount]) =>\r\n                ([usedInId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellFabricationProfit(\r\n                        data[usedInId], getSellingPrice(data[usedInId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const getColorCodedScrappedFrom = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.scrapped_from || {}).map(\r\n                ([scrappedFromId, amount]) =>\r\n                ([scrappedFromId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellDeconstructionProfit(\r\n                        data[scrappedFromId], getSellingPrice(data[scrappedFromId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    return {\r\n        buyingprice, sellingprice,\r\n        fabricateTime: (Math.round(100 * getRealFabricationTime(item)) / 100) || undefined,\r\n        deconstructTime: (Math.round(100 * getRealDeconstructionTime(item)) / 100) || undefined,\r\n        minAmt: getOutpostData(item, outpost)?.min_amt,\r\n        tradingProfit: (sellingprice === undefined || buyingprice === undefined) ?\r\n            undefined : sellingprice - buyingprice,\r\n        fabricationProfit: getFabricationProfit(item, sellingprice),\r\n        deconstructionProfit: getDeconstructionProfit(item, buyingprice),\r\n        sellFabricationProfit: getSellFabricationProfit(item, sellingprice),\r\n        sellDeconstructionProfit: getSellDeconstructionProfit(item, sellingprice),\r\n        outpostmultiplier: getOutpostMultiplier(item, outpost),\r\n        destoutpostmultiplier: getOutpostMultiplier(item, destoutpost),\r\n        usedIn: getColorCodedUsedIn(),\r\n        scrappedFrom: getColorCodedScrappedFrom(),\r\n    }\r\n}\r\n\r\nconst ProfitText = props => {\r\n    if (props.profit === -Infinity) return <small>Source item(s) cannot be bought at departure</small>\r\n    const profitable = props.profit >= 0\r\n    return <span>{profitable ? \"Profit\" : \"Loss\"}: <b style={{\r\n        color: profitable ? \"green\" : \"red\"\r\n    }}>{profitable ? props.profit : -props.profit}</b> {props.children}</span>\r\n}\r\n\r\nconst BlockWithItems = props => {\r\n    return Object.keys(props.itemsObj || {}).length ? (\r\n        <div className=\"mt-2\">\r\n            <h5>{props.mainText}</h5>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n                {Object.entries(props.itemsObj).map(\r\n                    ([identifier, value]) =>\r\n                        <InlineItem\r\n                            key={identifier}\r\n                            item={data[identifier]}\r\n                            identifier={identifier}\r\n                            rating={props.colorCoded ? value.amount : value}\r\n                            additionalRating={props.colorCoded && value.additionalRating}\r\n                            prefix=\"x \" />\r\n                )}\r\n            </div>\r\n            {props.children}\r\n        </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const destoutpost = validateOutpost(getParams.destoutpost).value\r\n    const destreputation = validateReputation(getParams.destreputation)\r\n    const fabricatortypes = validateFabricator(getParams.fabricator)\r\n    const skills = {\r\n        helm: validateSkill(getParams.helm),\r\n        weapons: validateSkill(getParams.weapons),\r\n        mechanical: validateSkill(getParams.mechanical),\r\n        electrical: validateSkill(getParams.electrical),\r\n        medical: validateSkill(getParams.medical),\r\n    }\r\n    const upgrades = {\r\n        fabricator: validateUpgrades(getParams.fabrlvl),\r\n        deconstructor: validateUpgrades(getParams.declvl),\r\n    }\r\n\r\n    const calcData = calculateItem(item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades)\r\n\r\n    if (item === undefined) return {\r\n        noItem: true,\r\n        ...calcData,\r\n    }\r\n    return {\r\n        displayName: item.display_name,\r\n        fabricatorTypes: item.fabricator_types?.split(\",\").map(name => FABRICATOR_OPTIONS[name]?.label || name).join(\", \"),\r\n        skills: Object.entries(item.skills || {}).map(\r\n            ([k, v], i) => <div key={i} style={{marginBottom: 5}}>{`${ENGLISH_SKILL_NAMES[k] || k}: ${v}`}</div>\r\n        ),\r\n        ...calcData,\r\n        fabricationBlock: <BlockWithItems itemsObj={item.fabricate} mainText=\"Fabricated from\">\r\n            <ProfitText profit={calcData.fabricationProfit}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellFabricationProfit}><br />\r\n                <small className=\"text-muted\">(when you find the ingredients en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        deconstuctionBlock: <BlockWithItems itemsObj={item.deconstruct} mainText=\"Deconstructed to\">\r\n            <ProfitText profit={calcData.deconstructionProfit}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellDeconstructionProfit}><br />\r\n                <small className=\"text-muted\">(when you find the item en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        usedinBlock: <BlockWithItems itemsObj={calcData.usedIn} mainText=\"Used in\" colorCoded />,\r\n        scrappedfromBlock: <BlockWithItems itemsObj={calcData.scrappedFrom} mainText=\"Scrapped from\" colorCoded />,\r\n        image: <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />,\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst TableData = props => {\r\n    return props.value !== props.missingValue ?\r\n        <tr>\r\n            <td>{props.children}</td>\r\n            <td>{props.value}</td>\r\n        </tr> : <></>\r\n}\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n            <tr>\r\n                <th colSpan=\"2\">\r\n                    <div style={{\r\n                        border: \"1.5px solid #454d55\",\r\n                        borderRadius: \"10px\",\r\n                        display: \"inline-block\",\r\n                        padding: \"9px 8px 10px 10px\",\r\n                    }}>{props.calculator.image}</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <TableData value={props.calculator.tradingProfit}>Trading margin</TableData>\r\n            <TableData value={props.calculator.buyingprice}>Buying price</TableData>\r\n            <TableData value={props.calculator.sellingprice}>Selling price</TableData>\r\n            <TableData value={props.calculator.minAmt}>Minimal amount sold at departure</TableData>\r\n            <TableData value={props.calculator.outpostmultiplier} missingValue={1}>Departure multiplier</TableData>\r\n            <TableData value={props.calculator.destoutpostmultiplier} missingValue={1}>Destination multiplier</TableData>\r\n            <TableData value={props.calculator.fabricateTime}>Fabrication time</TableData>\r\n            <TableData value={props.calculator.fabricatorTypes}>Fabricator type(s)</TableData>\r\n            <TableData value={props.calculator.deconstructTime}>Deconstruction time</TableData>\r\n            <TableData value={props.calculator.skills?.length ? props.calculator.skills : undefined }>Fabrication skills</TableData>\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.noItem) return calculatorResults.homepageResults\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"outpost\"\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ [getParamName]: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams[getParamName])}\r\n    styles={generateStyles({flexGrow: 1, minWidth: 120, flexBasis: 120})}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport { useRef } from \"react\"\r\n\r\nexport default function ReputationInput(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n  const inputRef = useRef()\r\n\r\n  const getParamName = props.getParamName || \"reputation\"\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ [getParamName]: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  const onWheel = () => {\r\n    inputRef.current.blur()\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    minWidth: 120,\r\n    flexGrow: 1,\r\n    flexBasis: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams[getParamName]) || \"\"}\r\n      step={5}\r\n      ref={inputRef}\r\n      onWheel={onWheel}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand className=\"mt-3\">\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { useState } from 'react'\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { DEFAULT_SKILL_LEVEL, FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION, ENGLISH_SKILL_NAMES, DEFAULT_UPGRADE_LEVELS } from '../globals'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { useRef } from \"react\"\r\n\r\nconst OutpostSwapper = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            outpost: getParams.destoutpost,\r\n            destoutpost: getParams.outpost,\r\n            reputation: getParams.destreputation,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Swap outposts\r\n    </Button>\r\n}\r\n\r\nconst SkillPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const [previousValue, changeValue] = useState(validateSkill(getParams[props.skill]))\r\n    const inputRef = useRef()\r\n\r\n    const getParamName = props.skill\r\n\r\n    const updateSkill = e => {\r\n        if (parseInt(previousValue) === DEFAULT_SKILL_LEVEL && (e.target.value === \"10\" || e.target.value === \"-10\")) {\r\n            e.target.value = DEFAULT_SKILL_LEVEL + parseInt(e.target.value)\r\n        }\r\n        e.target.value = validateSkill(e.target.value)\r\n        changeValue(e.target.value)\r\n        pushGetParams({ [props.skill]: parseInt(e.target.value) === DEFAULT_SKILL_LEVEL ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            step={10}\r\n            onInput={updateSkill}\r\n            placeholder={ENGLISH_SKILL_NAMES[props.skill] || props.skill}\r\n            value={validateSkill(getParams[getParamName]) === DEFAULT_SKILL_LEVEL ? \"\" : getParams[getParamName]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst UpgradesPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const updateUpgrades = e => {\r\n        e.target.value = validateUpgrades(e.target.value)\r\n        pushGetParams({ [props.getparam]: e.target.value === \"0\" ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={updateUpgrades}\r\n            placeholder={props.label}\r\n            value={validateUpgrades(getParams[props.getparam]) === DEFAULT_UPGRADE_LEVELS ? \"\" : getParams[props.getparam]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst FabricatorPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleChange = e => {\r\n        pushGetParams({ fabricator: e.value === DEFAULT_FABRICATOR_OPTION.value ? undefined : e.value })\r\n    }\r\n\r\n    return <Select\r\n        value={validateFabricator(getParams.fabricator)}\r\n        styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n        theme={customThemeOverrides}\r\n        options={Object.values(FABRICATOR_OPTIONS)}\r\n        isSearchable={false}\r\n        onChange={handleChange} />\r\n}\r\n\r\nexport default function AdditionalFilters(props) {\r\n\r\n    return <Accordion>\r\n        <Card>\r\n            <Card.Header style={{ padding: 5 }}>\r\n                <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"dark\"\r\n                    eventKey=\"additional-filters\"\r\n                    style={{ padding: \"1px 5px\", borderRadius: 0 }}>\r\n                    Toggle additional options\r\n                </Accordion.Toggle>\r\n                <OutpostSwapper />\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"additional-filters\">\r\n                <Card.Body>\r\n                    <b>Allowed fabricators</b>\r\n                    <FabricatorPicker />\r\n                    <b>Skills (default is {DEFAULT_SKILL_LEVEL})</b>\r\n                    <SkillPicker skill=\"helm\" />\r\n                    <SkillPicker skill=\"weapons\" />\r\n                    <SkillPicker skill=\"mechanical\" />\r\n                    <SkillPicker skill=\"electrical\" />\r\n                    <SkillPicker skill=\"medical\" />\r\n                    <b>Fabrication speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"fabrlvl\" />\r\n                    <b>Deconstruction speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"declvl\" />\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    </Accordion>\r\n}","import { useState } from 'react'\nimport { Container, Row, Col, Navbar, Alert } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo, AdditionalFilters } from './BarotraumaCalc'\nimport './App.css';\n\nexport default function App() {\n\n  const [hideAlert, setHideAlert] = useState(false)\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" defaultExpanded className=\"pb-4\" >\n        <BrandNavLogo />\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mt-3\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <SearchBar />\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\n            <div><b style={{ color: \"white\" }}>\n              Departure\n          </b></div>\n            <div style={{ display: 'flex', flexGrow: 1 }}>\n              <OutpostSelect />\n              <ReputationInput />\n            </div></div>\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\n            <div><b style={{ color: \"white\" }}>\n              Destination\n          </b></div>\n            <div style={{ display: 'flex', flexGrow: 1 }}>\n              <OutpostSelect getParamName=\"destoutpost\" />\n              <ReputationInput getParamName=\"destreputation\" />\n            </div></div>\n        </Navbar.Collapse>\n      </Navbar>\n      <AdditionalFilters />\n      <Container className=\"pt-4 bg-white\">\n        <Row>\n          <Col>\n            {hideAlert ? <></> : <Alert onClose={() => setHideAlert(true)} variant=\"danger\" dismissible>\n              There is currently a bug in Barotrauma where buying prices would not update after moving to another location.\n              At the moment it can be solved by reloading you save file after entering an outpost. You can follow the progress of this\n              issue <a href=\"https://github.com/Regalis11/Barotrauma/issues/4803\">here</a>.\n            </Alert>}\n            <Route path=\"/\" children={<PageContents />}></Route>\n          </Col>\n        </Row>\n        <Row className=\"footer\">\n          <Col className=\"text-muted py-4\"><hr />I do not claim any rights to images and data used.\n            This is simply a convenience tool for the game called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.11.0.10).<br />\n            If you have found a bug or have a suggestion for me, you can <a href=\"https://github.com/lifearoundfreaks/barotrauma-calc/issues/new\">start an issue</a>.</Col>\n        </Row>\n      </Container>\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(\n    <div className=\"App\"><App/></div>,\n  document.getElementById('root')\n);"],"sourceRoot":""}