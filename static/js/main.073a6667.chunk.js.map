{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Utils/validateFabricator.js","BarotraumaCalc/Utils/validateSkill.js","BarotraumaCalc/Utils/validateUpgrades.js","BarotraumaCalc/Utils/validateStoreBalance.js","BarotraumaCalc/Utils/validateDifficultyLevel.js","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","BarotraumaCalc/Components/AdditionalFilters.js","App.js","index.js"],"names":["rawItems","aggregatedOptions","gameData","items","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","offsetMargin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","textures","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","containerProvided","optionProvided","option","provided","padding","control","borderColor","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexGrow","marginTop","maxMenuHeight","STORE_BALANCE_MULTIPLIERS","full","numeric","half","quarter","DEFAULT_STORE_BALANCE_MULTIPLIER","OUTPOST_OPTIONS","city","outpost","research","military","mine","base","lowest","highest","DEFAULT_OUTPOST_OPTION","BASE_MULTIPLIER_OPTION","LOWEST_MULTIPLIER_OPTION","HIGHEST_MULTIPLIER_OPTION","DEFAULT_SKILL_LEVEL","FABRICATOR_OPTIONS","all","fabricator","medicalfabricator","DEFAULT_FABRICATOR_OPTION","ENGLISH_SKILL_NAMES","helm","weapons","mechanical","electrical","medical","initiative","courage","validateReputation","min","parseInt","validateOutpost","validateFabricator","validateSkill","parsed","isNaN","validateStoreBalance","validateDifficultyLevel","getRGB","positive","negative","ClickableItem","getParams","to","newParams","keys","getLink","backgroundColor","rating","item","rnd","price","floor","compareItems","a","b","InlineItem","additionalRating","prefix","postfix","RatedItems","className","header","explanation","display","alignItems","justifyContent","flexWrap","sort","obj","calculateItem","reputation","destoutpost","destreputation","fabricatortypes","skills","upgrades","sellmultiplier","leveldifficulty","getOutpostData","modified","getOutpostMultiplier","price_data","min_multiplier","max_multiplier","multiplier","hasPriceData","default","getBuyingPrice","soldsomewhere","outpostData","minleveldifficulty","soldeverywhere","sold","isSoldThere","getSellingPrice","getFabricationProfit","sellingprice","fabricate","reduce","sum","id","amt","Infinity","getDeconstructionProfit","buyingprice","deconstruct","getSellFabricationProfit","getSellDeconstructionProfit","getRealFabricationTime","fabricate_time","degreeOfSuccess","skill","level","t","pow","getRealDeconstructionTime","deconstruct_time","deconstructor","trade","fabr","sellFabr","dec","sellDec","usefulMats","updateUsefulMaterials","ingredients","ingredientId","ingredient","tradeProfit","round","fabrProfit","fabricator_types","decProfit","homepageResults","values","fabricateTime","fabricationBatch","fabrication_batch","deconstructTime","randomDeconstruction","random_deconstruction","minAmt","min_amt","tradingProfit","fabricationProfit","deconstructionProfit","sellFabricationProfit","sellDeconstructionProfit","outpostmultiplier","destoutpostmultiplier","usedIn","used_in","usedInId","amount","scrappedFrom","scrapped_from","scrappedFromId","ProfitText","profit","profitable","color","time","children","BlockWithItems","itemsObj","mainText","colorCoded","TableData","missingValue","InfoTable","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","fabricatorTypes","PageContents","calculatorResults","validateUpgrades","fabrlvl","declvl","balance","difficulty","calcData","noItem","displayName","name","i","k","v","marginBottom","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","refilledWithBlock","refilled_with","useCalculator","Row","Col","md","OutpostSelect","getParamName","minWidth","flexBasis","isSearchable","ReputationInput","inputRef","useRef","type","paddingLeft","paddingTop","paddingBottom","onInput","target","step","ref","onWheel","current","blur","BrandNavLogo","returnHomeGetParams","Navbar","Brand","textDecoration","OutpostSwapper","Button","onClick","OutpostRepeater","SellingPriceMultPicker","SkillPicker","previousValue","changeValue","position","top","left","UpgradesPicker","getparam","FabricatorPicker","LevelDifficultyPicker","AdditionalFilters","ShowOptionsToggle","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","Accordion","Card","Header","Collapse","Body","App","basename","bg","expand","defaultExpanded","Toggle","aria-controls","flexDirection","Container","path","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.073a6667.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData.items)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","import gameData from \"../parsed_data.json\"\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, offsetMargin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...gameData.textures[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                (offsetMargin || 0) + margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                (offsetMargin || 0) + margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (containerProvided, optionProvided) => {\r\n    return {\r\n        option: provided => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n            ...optionProvided,\r\n        }),\r\n        control: provided => ({\r\n            ...provided,\r\n            borderColor: \"gray\",\r\n        }),\r\n        container: provided => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...containerProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <Option {...props}>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n      offsetMargin={-18}\r\n    />\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexGrow: 1, marginTop: 34})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export const DEFAULT_REPUTATION = 0\r\nexport const STORE_BALANCE_MULTIPLIERS = {\r\n    full: { value: 'full', label: 'Initial store multiplier (*100%)', numeric: 1. },\r\n    half: { value: 'half', label: 'Below half of initial balance (*75%)', numeric: .75 },\r\n    quarter: { value: 'quarter', label: 'Below quarter of initial balance (*20%)', numeric: .2 },\r\n}\r\nexport const DEFAULT_STORE_BALANCE_MULTIPLIER = STORE_BALANCE_MULTIPLIERS.full\r\nexport const OUTPOST_OPTIONS = {\r\n    city: { value: 'city', label: 'Colony' },\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n    base: { value: 'base', label: 'Default price' },\r\n    lowest: { value: 'lowest', label: 'Lowest price' },\r\n    highest: { value: 'highest', label: 'Highest price' },\r\n}\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.city\r\nexport const BASE_MULTIPLIER_OPTION = OUTPOST_OPTIONS.base\r\nexport const LOWEST_MULTIPLIER_OPTION = OUTPOST_OPTIONS.lowest\r\nexport const HIGHEST_MULTIPLIER_OPTION = OUTPOST_OPTIONS.highest\r\nexport const DEFAULT_SKILL_LEVEL = 100\r\nexport const MAX_SKILL_LEVEL = 100\r\nexport const FABRICATOR_OPTIONS = {\r\n    all: { value: 'all', label: 'All' },\r\n    fabricator: { value: 'fabricator', label: 'Fabricator' },\r\n    medicalfabricator: { value: 'medicalfabricator', label: 'Medical Fabricator' },\r\n}\r\nexport const DEFAULT_FABRICATOR_OPTION = FABRICATOR_OPTIONS.all\r\nexport const ENGLISH_SKILL_NAMES = {\r\n    helm: \"Helm\",\r\n    weapons: \"Weapons\",\r\n    mechanical: \"Mechanical Engineering\",\r\n    electrical: \"Electrical Engineering\",\r\n    medical: \"Medical\",\r\n    initiative: \"Initiative\",\r\n    courage: \"Courage\",\r\n}\r\nexport const DEFAULT_UPGRADE_LEVELS = 0\r\nexport const DEFAULT_DIFFICULTY = 0\r\n","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import { FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION } from '../globals'\r\n\r\nexport default function validateFabricator (input) {\r\n    return FABRICATOR_OPTIONS[input] || DEFAULT_FABRICATOR_OPTION\r\n}\r\n","import { DEFAULT_SKILL_LEVEL, MAX_SKILL_LEVEL } from '../globals'\r\n\r\nexport default function validateSkill (input) {\r\n    let parsed = parseInt(input)\r\n    return Math.max(Math.min(isNaN(parsed) ? DEFAULT_SKILL_LEVEL : parsed, MAX_SKILL_LEVEL), 0)\r\n}\r\n","import { DEFAULT_UPGRADE_LEVELS } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_UPGRADE_LEVELS, 10), 0)\r\n}\r\n","import { STORE_BALANCE_MULTIPLIERS, DEFAULT_STORE_BALANCE_MULTIPLIER } from '../globals'\r\n\r\nexport default function validateStoreBalance (input) {\r\n    return STORE_BALANCE_MULTIPLIERS[input] || DEFAULT_STORE_BALANCE_MULTIPLIER\r\n}\r\n","import { DEFAULT_DIFFICULTY } from '../globals'\r\n\r\nexport default function validateDifficultyLevel (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_DIFFICULTY, 100), 0)\r\n}\r\n","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst getRGB = value => {\r\n    const positive = Math.min(value > 0 ? value : 0, 200)\r\n    const negative = Math.min(value < 0 ? -value : 0, 200)\r\n    return `rgb(${255-positive}, ${255-negative}, ${255-negative-positive})`\r\n}\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const size = 60 || props.size\r\n\r\n    const getLink = () => {\r\n        let newParams = {...getParams, identifier: props.identifier}\r\n        return '/?' + Object.keys(newParams).map(key => key + '=' + newParams[key]).join('&');\r\n    }\r\n\r\n    return <Link\r\n        to={getLink()}\r\n    >\r\n        <div style={{ backgroundColor: props.rating && getRGB(props.rating), height: size }}>\r\n            <TextureLoader\r\n                size={size}\r\n                file={props.item.texture}\r\n                sourcerect={props.item.sourcerect}\r\n                margin={0}\r\n            />\r\n        </div>\r\n    </Link>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport gameData from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport ClickableItem from '../Components/ClickableItem'\r\nimport {\r\n    ENGLISH_SKILL_NAMES,\r\n    FABRICATOR_OPTIONS,\r\n    BASE_MULTIPLIER_OPTION,\r\n    LOWEST_MULTIPLIER_OPTION,\r\n    HIGHEST_MULTIPLIER_OPTION,\r\n} from '../globals'\r\n\r\nconst data = gameData.items\r\nconst rnd = price => Math.floor(price)\r\nconst compareItems = (a, b) => a.rating < b.rating ? 1 : a.rating === b.rating ? 0 : -1\r\n\r\nconst InlineItem = props => {\r\n    return <div>\r\n        <ClickableItem\r\n            item={props.item}\r\n            identifier={props.identifier}\r\n            rating={props.additionalRating}\r\n        /><b>{(props.prefix || \"\") + props.rating + (props.postfix || \"\")}</b></div>\r\n}\r\n\r\nconst RatedItems = props => {\r\n    return props.items.length ? <>\r\n        <h5 className=\"mb-0\">{props.header}</h5><small>{props.explanation}</small>\r\n        <div className=\"py-4\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {props.items.sort(compareItems).map(\r\n                obj => <InlineItem key={obj.identifier} identifier={obj.identifier} item={obj.item} rating={obj.rating} postfix={props.postfix} />\r\n            )}\r\n        </div></> : <></>\r\n}\r\n\r\nconst calculateItem = (item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty) => {\r\n\r\n    const getOutpostData = (item, location) => item.price?.modified?.[location]\r\n\r\n    const getOutpostMultiplier = (item, location) => {\r\n        const price_data = item.price\r\n        if (price_data === undefined) return 1\r\n\r\n        if (location === LOWEST_MULTIPLIER_OPTION.value) return price_data.min_multiplier\r\n        else if (location === HIGHEST_MULTIPLIER_OPTION.value) return price_data.max_multiplier\r\n        else return price_data.modified?.[location]?.multiplier || 1\r\n    }\r\n\r\n    const hasPriceData = item => item.price?.default !== undefined\r\n\r\n    const isSoldThere = item => {\r\n        if (\r\n            outpost === BASE_MULTIPLIER_OPTION.value ||\r\n            outpost === LOWEST_MULTIPLIER_OPTION.value ||\r\n            outpost === HIGHEST_MULTIPLIER_OPTION.value\r\n        ) {\r\n            return item.price?.soldsomewhere === \"true\"\r\n        }\r\n        const outpostData = getOutpostData(item, outpost)\r\n        return hasPriceData(item) && item.price.minleveldifficulty <= leveldifficulty && (\r\n            (item.price.soldeverywhere !== \"false\") ||\r\n            (outpostData && (outpostData.sold !== \"false\"))\r\n        )\r\n    }\r\n\r\n    const getBuyingPrice = item => {\r\n        if (isSoldThere(item)) return Math.max(rnd(\r\n            rnd(\r\n                item.price.default * getOutpostMultiplier(item, outpost)\r\n            ) * (1 - reputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getSellingPrice = item => {\r\n        if (hasPriceData(item)) return Math.max(rnd(\r\n            rnd(\r\n                rnd(item.price.default * getOutpostMultiplier(item, destoutpost)) * .8 * sellmultiplier\r\n            ) * (1 + destreputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getBuyingPrice(data[id])) || Infinity) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getDeconstructionProfit = (item, buyingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (buyingprice || Infinity)\r\n\r\n    const getSellFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getSellDeconstructionProfit = (item, sellingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (sellingprice || 0)\r\n\r\n    const getRealFabricationTime = item => {\r\n        if (item.skills === undefined) return item.fabricate_time / 2\r\n        const degreeOfSuccess = (Object.entries(item.skills).reduce(\r\n            (sum, [skill, level]) =>\r\n                sum + skills[skill] - level, 0\r\n        ) / Object.keys(item.skills).length + 100) / 200\r\n        const t = degreeOfSuccess < .5 ? degreeOfSuccess * degreeOfSuccess : degreeOfSuccess * 2\r\n        return item.fabricate_time / (Math.pow(1.05, upgrades.fabricator)) / Math.max(Math.min(t, 2), .01)\r\n    }\r\n\r\n    const getRealDeconstructionTime = item => item.deconstruct_time / (Math.pow(1.05, upgrades.deconstructor))\r\n\r\n    if (item === undefined) {\r\n        const [trade, fabr, sellFabr, dec, sellDec] = [[], [], [], [], []]\r\n\r\n        const usefulMats = {}\r\n\r\n        const updateUsefulMaterials = ingredients => {\r\n            for (const ingredientId in ingredients) {\r\n                let ingredient = data[ingredientId]\r\n                if (getBuyingPrice(ingredient)) {\r\n                    if (ingredientId in usefulMats) {\r\n                        usefulMats[ingredientId].rating += 1\r\n                    } else {\r\n                        usefulMats[ingredientId] = { item: ingredient, identifier: ingredientId, rating: 1 }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [identifier, item] of Object.entries(data)) {\r\n\r\n            let buyingprice = getBuyingPrice(item)\r\n            let sellingprice = getSellingPrice(item)\r\n            let tradeProfit = sellingprice - buyingprice\r\n\r\n            if (tradeProfit > 0) {\r\n                trade.push({ item, identifier, rating: Math.round(1000 * tradeProfit / buyingprice) / 10 })\r\n            }\r\n\r\n            let fabrProfit = item.fabricate ? Math.round(100 *\r\n                getFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (fabricatortypes.value === \"all\" || (item.fabricator_types || \"\").split(\",\").includes(fabricatortypes.value)) {\r\n                if (fabrProfit > 0) {\r\n                    fabr.push({ item, identifier, rating: fabrProfit })\r\n                    updateUsefulMaterials(item.fabricate)\r\n\r\n                } else if (fabrProfit === -Infinity) {\r\n                    fabrProfit = item.fabricate ? Math.round(100 *\r\n                        getSellFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n                    ) / 100 : 0\r\n                    if (fabrProfit > 0) {\r\n                        sellFabr.push({ item, identifier, rating: fabrProfit })\r\n                        updateUsefulMaterials(item.fabricate)\r\n                    }\r\n                }\r\n            }\r\n\r\n            let decProfit = item.deconstruct ? Math.round(100 *\r\n                getDeconstructionProfit(item, buyingprice) / getRealDeconstructionTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (decProfit > 0) {\r\n                dec.push({ item, identifier, rating: decProfit })\r\n\r\n            } else if (decProfit === -Infinity) {\r\n                decProfit = item.deconstruct ? Math.round(100 *\r\n                    getSellDeconstructionProfit(item, sellingprice) / getRealDeconstructionTime(item)\r\n                ) / 100 : 0\r\n                if (decProfit > 0) {\r\n                    sellDec.push({ item, identifier, rating: decProfit })\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            homepageResults: <>\r\n                <RatedItems\r\n                    items={trade}\r\n                    postfix=\"%\"\r\n                    header=\"Trading investment returns\"\r\n                    explanation=\"(with no crafting involved)\" />\r\n                <RatedItems\r\n                    items={Object.values(usefulMats)}\r\n                    header=\"Useful crafting materials\"\r\n                    explanation=\"(involved in N profitable recipes and sold here)\" />\r\n                <RatedItems\r\n                    items={fabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Fabrication profits per fabrication time\"\r\n                    explanation=\"(departure sells ingredients)\" />\r\n                <RatedItems\r\n                    items={sellFabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Other fabrication profits\"\r\n                    explanation=\"(you have to acquire the ingredients through means other than trading)\" />\r\n                <RatedItems\r\n                    items={dec}\r\n                    postfix=\"/s\"\r\n                    header=\"Deconstruction profits per deconstruction time\"\r\n                    explanation=\"(departure sells those items)\" />\r\n                <RatedItems\r\n                    items={sellDec}\r\n                    postfix=\"/s\"\r\n                    header=\"Other deconstruction profits\"\r\n                    explanation=\"(you have to acquire the item through means other than trading)\" />\r\n            </>\r\n        }\r\n    }\r\n\r\n    const buyingprice = getBuyingPrice(item)\r\n    const sellingprice = getSellingPrice(item)\r\n\r\n    const getColorCodedUsedIn = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.used_in || {}).map(\r\n                ([usedInId, amount]) =>\r\n                ([usedInId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellFabricationProfit(\r\n                        data[usedInId], getSellingPrice(data[usedInId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const getColorCodedScrappedFrom = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.scrapped_from || {}).map(\r\n                ([scrappedFromId, amount]) =>\r\n                ([scrappedFromId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellDeconstructionProfit(\r\n                        data[scrappedFromId], getSellingPrice(data[scrappedFromId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    return {\r\n        buyingprice, sellingprice,\r\n        fabricateTime: (Math.round(100 * getRealFabricationTime(item)) / 100) || undefined,\r\n        fabricationBatch: item.fabrication_batch || 1.,\r\n        deconstructTime: (Math.round(100 * getRealDeconstructionTime(item)) / 100) || undefined,\r\n        randomDeconstruction: item.random_deconstruction ? \"yes\" : undefined,\r\n        minAmt: getOutpostData(item, outpost)?.min_amt,\r\n        tradingProfit: (sellingprice === undefined || buyingprice === undefined) ?\r\n            undefined : sellingprice - buyingprice,\r\n        fabricationProfit: getFabricationProfit(item, sellingprice),\r\n        deconstructionProfit: getDeconstructionProfit(item, buyingprice),\r\n        sellFabricationProfit: getSellFabricationProfit(item, sellingprice),\r\n        sellDeconstructionProfit: getSellDeconstructionProfit(item, sellingprice),\r\n        outpostmultiplier: getOutpostMultiplier(item, outpost),\r\n        destoutpostmultiplier: getOutpostMultiplier(item, destoutpost),\r\n        usedIn: getColorCodedUsedIn(),\r\n        scrappedFrom: getColorCodedScrappedFrom(),\r\n        minleveldifficulty: item.price?.minleveldifficulty || undefined,\r\n    }\r\n}\r\n\r\nconst ProfitText = props => {\r\n    if (props.profit === -Infinity) return <small>Source item(s) cannot be bought at departure</small>\r\n    const profitable = props.profit >= 0\r\n    return <span>{profitable ? \"Profit\" : \"Loss\"}: <b style={{\r\n        color: profitable ? \"green\" : \"red\"\r\n    }}>{Math.round((profitable ? props.profit : -props.profit) * 100) / 100}</b> <span className=\"text-muted\">\r\n        ({Math.round(props.profit/props.time*100)/100}/s) {props.children}\r\n    </span></span>\r\n}\r\n\r\nconst BlockWithItems = props => {\r\n    return Object.keys(props.itemsObj || {}).length ? (\r\n        <div className=\"mt-2\">\r\n            <h5>{props.mainText}</h5>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n                {Object.entries(props.itemsObj).map(\r\n                    ([identifier, value]) =>\r\n                        <InlineItem\r\n                            key={identifier}\r\n                            item={data[identifier]}\r\n                            identifier={identifier}\r\n                            rating={props.colorCoded ? value.amount : value}\r\n                            additionalRating={props.colorCoded && value.additionalRating}\r\n                            prefix=\"x \" />\r\n                )}\r\n            </div>\r\n            {props.children}\r\n        </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const destoutpost = validateOutpost(getParams.destoutpost).value\r\n    const destreputation = validateReputation(getParams.destreputation)\r\n    const fabricatortypes = validateFabricator(getParams.fabricator)\r\n    const skills = {\r\n        helm: validateSkill(getParams.helm),\r\n        weapons: validateSkill(getParams.weapons),\r\n        mechanical: validateSkill(getParams.mechanical),\r\n        electrical: validateSkill(getParams.electrical),\r\n        medical: validateSkill(getParams.medical),\r\n    }\r\n    const upgrades = {\r\n        fabricator: validateUpgrades(getParams.fabrlvl),\r\n        deconstructor: validateUpgrades(getParams.declvl),\r\n    }\r\n    const sellmultiplier = validateStoreBalance(getParams.balance).numeric\r\n    const leveldifficulty = validateDifficultyLevel(getParams.difficulty)\r\n\r\n    const calcData = calculateItem(item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty)\r\n\r\n    if (item === undefined) return {\r\n        noItem: true,\r\n        ...calcData,\r\n    }\r\n    return {\r\n        displayName: item.display_name,\r\n        fabricatorTypes: item.fabricator_types?.split(\",\").map(name => FABRICATOR_OPTIONS[name]?.label || name).join(\", \"),\r\n        skills: Object.entries(item.skills || {}).map(\r\n            ([k, v], i) => <div key={i} style={{marginBottom: 5}}>{`${ENGLISH_SKILL_NAMES[k] || k}: ${v}`}</div>\r\n        ),\r\n        ...calcData,\r\n        fabricationBlock: <BlockWithItems itemsObj={item.fabricate} mainText=\"Fabricated from\">\r\n            <ProfitText profit={calcData.fabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellFabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you find the ingredients en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        deconstuctionBlock: <BlockWithItems itemsObj={item.deconstruct} mainText=\"Deconstructed to\">\r\n            <ProfitText profit={calcData.deconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellDeconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you find the item en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        usedinBlock: <BlockWithItems itemsObj={calcData.usedIn} mainText=\"Used in\" colorCoded />,\r\n        scrappedfromBlock: <BlockWithItems itemsObj={calcData.scrappedFrom} mainText=\"Scrapped from\" colorCoded />,\r\n        refilledWithBlock: <BlockWithItems itemsObj={item.refilled_with} mainText=\"Refilled with\">\r\n            <small className=\"text-muted\">(deconstruction may not yield resources</small><br />\r\n            <small className=\"text-muted\">if an item is partially depleted)</small>\r\n        </BlockWithItems>,\r\n        image: <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />,\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst TableData = props => {\r\n    return props.value !== props.missingValue ?\r\n        <tr>\r\n            <td>{props.children}</td>\r\n            <td>{props.value}</td>\r\n        </tr> : <></>\r\n}\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n            <tr>\r\n                <th colSpan=\"2\">\r\n                    <div style={{\r\n                        border: \"1.5px solid #454d55\",\r\n                        borderRadius: \"10px\",\r\n                        display: \"inline-block\",\r\n                        padding: \"9px 8px 10px 10px\",\r\n                    }}>{props.calculator.image}</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <TableData value={props.calculator.tradingProfit}>Trading margin</TableData>\r\n            <TableData value={props.calculator.buyingprice}>Buying price</TableData>\r\n            <TableData value={props.calculator.sellingprice}>Selling price</TableData>\r\n            <TableData value={props.calculator.minAmt}>Minimal amount sold at departure</TableData>\r\n            <TableData value={props.calculator.outpostmultiplier} missingValue={1}>Departure multiplier</TableData>\r\n            <TableData value={props.calculator.destoutpostmultiplier} missingValue={1}>Destination multiplier</TableData>\r\n            <TableData value={props.calculator.fabricateTime}>Fabrication time</TableData>\r\n            <TableData value={props.calculator.fabricatorTypes}>Fabricator type(s)</TableData>\r\n            <TableData value={props.calculator.fabricationBatch} missingValue={1.}>Fabrication batch</TableData>\r\n            <TableData value={props.calculator.deconstructTime}>Deconstruction time</TableData>\r\n            <TableData value={props.calculator.randomDeconstruction}>Deconstruction is random</TableData>\r\n            <TableData value={props.calculator.skills?.length ? props.calculator.skills : undefined }>Fabrication skills</TableData>\r\n            <TableData value={props.calculator.minleveldifficulty}>Minimum difficulty level</TableData>\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.noItem) return calculatorResults.homepageResults\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n                {calculatorResults.refilledWithBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"outpost\"\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ [getParamName]: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams[getParamName])}\r\n    styles={generateStyles({flexGrow: 1, minWidth: 120, flexBasis: 120}, {padding: 8})}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport { useRef } from \"react\"\r\n\r\nexport default function ReputationInput(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n  const inputRef = useRef()\r\n\r\n  const getParamName = props.getParamName || \"reputation\"\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ [getParamName]: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  const onWheel = () => {\r\n    inputRef.current.blur()\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    minWidth: 120,\r\n    flexGrow: 1,\r\n    flexBasis: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams[getParamName]) || \"\"}\r\n      step={5}\r\n      ref={inputRef}\r\n      onWheel={onWheel}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand className=\"mt-3\">\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { useState, useContext } from 'react'\r\nimport { Accordion, Card, Button, AccordionContext, useAccordionToggle } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport {\r\n    DEFAULT_SKILL_LEVEL,\r\n    FABRICATOR_OPTIONS,\r\n    DEFAULT_FABRICATOR_OPTION,\r\n    ENGLISH_SKILL_NAMES,\r\n    DEFAULT_UPGRADE_LEVELS,\r\n    STORE_BALANCE_MULTIPLIERS,\r\n    DEFAULT_STORE_BALANCE_MULTIPLIER,\r\n    DEFAULT_DIFFICULTY,\r\n} from '../globals'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { useRef } from \"react\"\r\n\r\nconst OutpostSwapper = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            outpost: getParams.destoutpost,\r\n            destoutpost: getParams.outpost,\r\n            reputation: getParams.destreputation,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Swap outposts\r\n    </Button>\r\n}\r\n\r\nconst OutpostRepeater = () => {\r\n    \r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            destoutpost: getParams.outpost,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Same destination\r\n    </Button>\r\n\r\n}\r\n\r\nconst SellingPriceMultPicker = props => {\r\n\r\n        const [getParams, pushGetParams] = useGetParams()\r\n    \r\n        const handleChange = e => {\r\n            pushGetParams({ balance: e.value === DEFAULT_STORE_BALANCE_MULTIPLIER.value ? undefined : e.value })\r\n        }\r\n    \r\n        return <Select\r\n            value={validateStoreBalance(getParams.balance)}\r\n            styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n            theme={customThemeOverrides}\r\n            options={Object.values(STORE_BALANCE_MULTIPLIERS)}\r\n            isSearchable={false}\r\n            onChange={handleChange} />\r\n    }\r\n\r\nconst SkillPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const [previousValue, changeValue] = useState(validateSkill(getParams[props.skill]))\r\n    const inputRef = useRef()\r\n\r\n    const getParamName = props.skill\r\n\r\n    const updateSkill = e => {\r\n        if (parseInt(previousValue) === DEFAULT_SKILL_LEVEL && (e.target.value === \"5\" || e.target.value === \"-5\")) {\r\n            e.target.value = DEFAULT_SKILL_LEVEL + parseInt(e.target.value)\r\n        }\r\n        e.target.value = validateSkill(e.target.value)\r\n        changeValue(e.target.value)\r\n        pushGetParams({ [props.skill]: parseInt(e.target.value) === DEFAULT_SKILL_LEVEL ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        position: 'relative',\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            step={5}\r\n            onInput={updateSkill}\r\n            placeholder={ENGLISH_SKILL_NAMES[props.skill] || props.skill}\r\n            value={validateSkill(getParams[getParamName]) === DEFAULT_SKILL_LEVEL ? \"\" : getParams[getParamName]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        />\r\n        {\r\n            validateSkill(getParams[getParamName]) !== DEFAULT_SKILL_LEVEL ? <span style={{\r\n                position: \"absolute\",\r\n                top: 7,\r\n                left: 35,\r\n            }}>{ENGLISH_SKILL_NAMES[props.skill] || props.skill}</span> : <></>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst UpgradesPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const updateUpgrades = e => {\r\n        e.target.value = validateUpgrades(e.target.value)\r\n        pushGetParams({ [props.getparam]: e.target.value === \"0\" ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={updateUpgrades}\r\n            placeholder={props.label}\r\n            value={validateUpgrades(getParams[props.getparam]) === DEFAULT_UPGRADE_LEVELS ? \"\" : getParams[props.getparam]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst FabricatorPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleChange = e => {\r\n        pushGetParams({ fabricator: e.value === DEFAULT_FABRICATOR_OPTION.value ? undefined : e.value })\r\n    }\r\n\r\n    return <Select\r\n        value={validateFabricator(getParams.fabricator)}\r\n        styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n        theme={customThemeOverrides}\r\n        options={Object.values(FABRICATOR_OPTIONS)}\r\n        isSearchable={false}\r\n        onChange={handleChange} />\r\n}\r\n\r\nconst LevelDifficultyPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const handleChange = e => {\r\n        e.target.value = validateDifficultyLevel(e.target.value)\r\n        pushGetParams({ difficulty: e.target.value === DEFAULT_DIFFICULTY ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            step={5}\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={handleChange}\r\n            placeholder={'Difficulty %'}\r\n            value={validateDifficultyLevel(getParams.difficulty) === DEFAULT_DIFFICULTY ? \"\" : validateDifficultyLevel(getParams.difficulty)}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\n\r\nexport default function AdditionalFilters(props) {\r\n\r\n    function ShowOptionsToggle({ children, eventKey, callback }) {\r\n        const currentEventKey = useContext(AccordionContext);\r\n\r\n        const decoratedOnClick = useAccordionToggle(\r\n            eventKey,\r\n            () => callback && callback(eventKey),\r\n        );\r\n\r\n        const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n        return (\r\n            <Button\r\n                style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n                variant=\"dark\"\r\n                onClick={decoratedOnClick}\r\n            >\r\n                {isCurrentEventKey ? \"Hide options\" : \"Additional options\"}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    return <Accordion>\r\n        <Card>\r\n            <Card.Header style={{ padding: 5 }}>\r\n                <ShowOptionsToggle eventKey=\"additional-filters\" />\r\n                <OutpostSwapper />\r\n                <OutpostRepeater />\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"additional-filters\">\r\n                <Card.Body>\r\n                    <b>Sell price multiplier</b>\r\n                    <SellingPriceMultPicker />\r\n                    <b>Allowed fabricators</b>\r\n                    <FabricatorPicker />\r\n                    <b>Location difficulty level (certain items are not sold at lower levels)</b>\r\n                    <LevelDifficultyPicker />\r\n                    <b>Skills (default is {DEFAULT_SKILL_LEVEL})</b>\r\n                    <SkillPicker skill=\"helm\" />\r\n                    <SkillPicker skill=\"weapons\" />\r\n                    <SkillPicker skill=\"mechanical\" />\r\n                    <SkillPicker skill=\"electrical\" />\r\n                    <SkillPicker skill=\"medical\" />\r\n                    <b>Fabrication speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"fabrlvl\" />\r\n                    <b>Deconstruction speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"declvl\" />\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    </Accordion>\r\n}","import { Container, Row, Col, Navbar } from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo, AdditionalFilters } from './BarotraumaCalc'\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" defaultExpanded className=\"pb-4\" >\r\n        <BrandNavLogo />\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mt-3\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <SearchBar />\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Departure\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect />\r\n              <ReputationInput />\r\n            </div></div>\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Destination\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect getParamName=\"destoutpost\" />\r\n              <ReputationInput getParamName=\"destreputation\" />\r\n            </div></div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <AdditionalFilters />\r\n      <Container className=\"pt-4 bg-white\">\r\n        <Row>\r\n          <Col>\r\n            <Route path=\"/\" children={<PageContents />}></Route>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer\">\r\n          <Col className=\"text-muted py-4\"><hr />I do not claim any rights to images and data used.\r\n            This is simply a convenience tool for the game called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.14.6.0).<br />\r\n            If you have found a bug or have a suggestion for me, you can <a href=\"https://github.com/lifearoundfreaks/barotrauma-calc/issues/new\">start an issue</a>.</Col>\r\n        </Row>\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <div className=\"App\"><App/></div>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}