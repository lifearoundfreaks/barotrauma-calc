{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Utils/validateFabricator.js","BarotraumaCalc/Utils/validateSkill.js","BarotraumaCalc/Utils/validateUpgrades.js","BarotraumaCalc/Utils/validateStoreBalance.js","BarotraumaCalc/Utils/validateDifficultyLevel.js","BarotraumaCalc/Utils/getRGB.js","BarotraumaCalc/lock.svg","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","BarotraumaCalc/Components/AdditionalFilters.js","App.js","index.js"],"names":["rawItems","aggregatedOptions","gameData","items","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","offsetMargin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","textures","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","containerProvided","optionProvided","option","provided","padding","control","borderColor","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexGrow","marginTop","maxMenuHeight","STORE_BALANCE_MULTIPLIERS","full","numeric","half","quarter","DEFAULT_STORE_BALANCE_MULTIPLIER","OUTPOST_OPTIONS","city","outpost","research","military","mine","base","lowest","highest","LOCATIONAL_OUTPOST_OPTIONS","LOCATION_MERCHANTS","Set","SHOP_NAMES","DEFAULT_OUTPOST_OPTION","BASE_MULTIPLIER_OPTION","LOWEST_MULTIPLIER_OPTION","HIGHEST_MULTIPLIER_OPTION","DEFAULT_SKILL_LEVEL","FABRICATOR_OPTIONS","all","fabricator","medicalfabricator","DEFAULT_FABRICATOR_OPTION","ENGLISH_SKILL_NAMES","helm","weapons","mechanical","electrical","medical","initiative","courage","validateReputation","min","parseInt","validateOutpost","validateFabricator","validateSkill","parsed","isNaN","validateStoreBalance","validateDifficultyLevel","getRGB","positive","negative","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgLock","_ref","svgRef","title","titleId","fill","xmlns","viewBox","ref","id","ForwardRef","ClickableItem","getParams","to","newParams","getLink","backgroundColor","rating","item","requiresrecipe","className","rnd","price","floor","compareItems","a","b","InlineItem","additionalRating","prefix","postfix","RatedItems","header","explanation","display","alignItems","justifyContent","flexWrap","sort","obj","calculateItem","reputation","destoutpost","destreputation","fabricatortypes","skills","upgrades","sellmultiplier","leveldifficulty","getOutpostData","relatedMerchants","modifiedData","modified","reduce","result","merchant","multiplier","sold","min_amt","has","min_multiplier","max_multiplier","min_buy_multiplier","getOutpostMultiplier","price_data","outpostData","buyMin","hasPriceData","default","getBuyingPrice","soldsomewhere","minleveldifficulty","isSoldThere","getSellingPrice","getFabricationProfit","sellingprice","fabricate","sum","amt","Infinity","getDeconstructionProfit","buyingprice","deconstruct","getSellFabricationProfit","getSellDeconstructionProfit","getRealFabricationTime","fabricate_time","degreeOfSuccess","skill","level","t","pow","getRealDeconstructionTime","deconstruct_time","deconstructor","trade","fabr","sellFabr","dec","sellDec","usefulMats","updateUsefulMaterials","ingredients","ingredientId","ingredient","tradeProfit","round","fabrProfit","fabricator_types","decProfit","homepageResults","values","baseprice","pricesData","outpostType","fabricateTime","fabricationBatch","fabrication_batch","deconstructTime","randomDeconstruction","random_deconstruction","minAmt","whereSold","getSellingSnopNames","tradingProfit","fabricationProfit","deconstructionProfit","sellFabricationProfit","sellDeconstructionProfit","outpostmultiplier","destoutpostmultiplier","usedIn","used_in","usedInId","amount","scrappedFrom","scrapped_from","scrappedFromId","ProfitText","profit","profitable","color","time","children","BlockWithItems","itemsObj","mainText","colorCoded","TableData","missingValue","minWidth","PriceTableData","prices","baseprices","buycolor","sellcolor","InfoTable","overflowWrap","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","Tabs","defaultActiveKey","Tab","eventKey","fabricatorTypes","entry","PageContents","calculatorResults","validateUpgrades","fabrlvl","declvl","balance","difficulty","calcData","noItem","displayName","name","k","v","marginBottom","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","refilledWithBlock","refilled_with","useCalculator","Row","Col","md","OutpostSelect","getParamName","flexBasis","isSearchable","ReputationInput","inputRef","useRef","type","paddingLeft","paddingTop","paddingBottom","onInput","step","onWheel","current","blur","BrandNavLogo","returnHomeGetParams","Navbar","Brand","textDecoration","OutpostSwapper","Button","onClick","OutpostRepeater","SellingPriceMultPicker","SkillPicker","previousValue","changeValue","position","top","left","UpgradesPicker","getparam","FabricatorPicker","LevelDifficultyPicker","AdditionalFilters","ShowOptionsToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","Accordion","Card","Header","Collapse","Body","App","basename","bg","expand","defaultExpanded","Toggle","aria-controls","flexDirection","Container","path","href","ReactDOM","render","document","getElementById"],"mappings":"6KAE8BA,E,wIAYxBC,GAZwBD,EAYiBE,EAASC,MAX7CC,OAAOC,QAAQL,GAAUM,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAClD,MAAO,CACHA,MAAOD,EACPE,MAAOD,EAAME,aACbC,aAAcH,EAAMG,aACpBC,QAASJ,EAAMI,QACfC,WAAYL,EAAMK,gB,gBCPxBC,EAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmBA,EAAWT,KACpD,SAAAE,GAAK,OAAIQ,WAAWR,GAAX,UAAuBA,EAAvB,MAAmCA,KAC9CS,KAAK,MAOQ,SAASC,EAAcC,GAAQ,IACrCC,EAA8DD,EAA9DC,KAAMC,EAAwDF,EAAxDE,KAAMR,EAAkDM,EAAlDN,WAAYS,EAAsCH,EAAtCG,OAAQC,EAA8BJ,EAA9BI,aAAiBC,EADb,YAC0BL,EAD1B,sDAErCM,EAPgB,SAAAV,GAAe,IAAD,EACNA,EAAWW,MAAM,KAAKpB,IAAIU,YADpB,mBAC7BW,EAD6B,KAC1BC,EAD0B,KACvBC,EADuB,KAChBC,EADgB,KAElC,MAAO,CAACH,IAAGC,IAAGC,QAAOC,SAAQV,KAAMW,KAAKC,IAAIH,EAAOC,IAKxCG,CAAgBpB,GACvBqB,GAAed,EAAOE,GAAUG,EAAKL,KACzC,OAAO,qBACHe,MAAK,aACDN,MAAOf,EAAkBW,EAAKI,MAAQK,GACtCJ,OAAQhB,EAAkBW,EAAKK,OAASI,GACxCE,mBAAoBtB,GAAmBW,EAAKE,EAAIO,GAAcT,EAAKG,EAAIM,GACvEG,gBAAgB,OAAD,OAASC,mBAAT,qBAA4CjB,EAA5C,KACfkB,eAAgBzB,EAAiB,WAAjB,cACTZ,EAASsC,SAASnB,GAAMf,KAAI,SAAAE,GAAK,OAAIA,EAAQ0B,OAEpDO,MAAO,OACPnB,OAAQR,GACHS,GAAgB,GAAKD,GAAUG,EAAKL,KAAOK,EAAKK,QAAUI,EAAc,GACxEX,GAAgB,GAAKD,GAAUG,EAAKL,KAAOK,EAAKI,OAASK,EAAc,IAEzEV,KC3BA,SAASkB,EAAaC,GAEjC,IAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAQ,IAAIC,gBAAgBL,EAASM,QAY3C,OAFIP,GAAqBK,EAAMG,OAAO,cAE/B,CACHR,EAAkB,YAAQK,EAAMI,YAAehD,OAAOiD,YAAYL,EAAM3C,WAX1D,SAACiD,GACf,cAA2BlD,OAAOC,QAAQiD,GAA1C,eAAqD,CAAC,IAAD,sBAAzC/C,EAAyC,KAApCC,EAAoC,UACnC+C,IAAV/C,EAAqBwC,EAAMG,OAAO5C,GACjCyC,EAAMQ,IAAIjD,EAAKC,GAExBsC,EAAQW,KAAR,YAAkBT,EAAMI,eCZzB,IAEMM,EAAiB,SAACC,EAAmBC,GAC9C,MAAO,CACHC,OAAQ,SAAAC,GAAQ,kCACTA,GADS,IAEZC,QAAS,IACNH,IAEPI,QAAS,SAAAF,GAAQ,kCACVA,GADU,IAEbG,YAAa,UAEjBC,UAAW,SAAAJ,GAAQ,kCACZA,GADY,IAEfxC,OAAQ,IACLqC,MAKFQ,EAAuB,SAAAC,GAAK,kCAClCA,GADkC,IAErCC,aAAc,EACdC,OAAO,2BACAF,EAAME,QADP,IAEFC,QAAS,WACTC,UAAW,YACXC,UAAW,YCnBXC,EAAWC,IAAXD,OACFE,EAAa,SAAAzD,GAAK,OACtB,mCACE,eAACuD,EAAD,2BAAYvD,GAAZ,cACA,cAACD,EAAD,CACEE,KDduB,GCevBC,KAAMF,EAAM0D,KAAKjE,QACjBC,WAAYM,EAAM0D,KAAKhE,WACvBS,OAAQ,EACRC,cAAe,KAEdJ,EAAM0D,KAAKpE,aAeH,SAASqE,IAAa,IAAD,EAEeC,mBAAS,IAFxB,mBAE3BC,EAF2B,KAEVC,EAFU,OAGEF,oBAAS,GAHX,mBAG3BG,EAH2B,KAGfC,EAHe,KAI5BC,EAAgB1C,IAAe,GAgBrC,OAAO,cAAC,IAAD,CACLlC,MAAO,kBAAM,MACb6E,QAASL,EACTM,cAjBwB,SAAAC,GACpBA,EAASC,QACXP,EAlBmB,SAAAQ,GAEvB,IAFiC,IAAD,EACV,CAAC,GJVdxF,EAAkByF,OAAOC,aIU7BC,EAD2B,KAClBC,EADkB,KAEzBD,EAAQJ,OApBc,GAoBmB,CAC9C,IAAIM,EAAaD,EAAKE,OAAOvF,MAC7B,QAAmB+C,IAAfuC,EAA0B,MACrBA,EAAWnF,aAAaqF,SAASP,EAAMQ,gBAAgBL,EAAQnC,KAAKqC,GAE/E,OAAOF,EAWmBM,CAAiBX,IACvCJ,GAAc,KAEdF,EAAsB,IACtBE,GAAc,KAYhBgB,SARmB,SAAAC,GACnBhB,EAAc,CAACiB,WAAYD,EAAE5F,SAQ7BmE,WAAY,CAAED,OAAQE,EAAY0B,kBAAmB,kBAAM,MAAMC,mBAAoB,kBAAM,OAC3FrB,WAAYA,EACZsB,YAAY,2BACZC,iBAAkB,iBAAM,wBACxBC,aAAcC,YAAa,CAAEC,UAAW,SAAA/C,GAAM,OAAIA,EAAOgB,KAAKlE,cAAckG,YAAY,IACxFC,OAAQpD,EAAe,CAACqD,SAAU,EAAGC,UAAW,KAChDC,cAAe,IACf7C,MAAOD,I,+BCnEE+C,EAA4B,CACrCC,KAAM,CAAE3G,MAAO,OAAQC,MAAO,mCAAoC2G,QAAS,GAC3EC,KAAM,CAAE7G,MAAO,OAAQC,MAAO,uCAAwC2G,QAAS,KAC/EE,QAAS,CAAE9G,MAAO,UAAWC,MAAO,0CAA2C2G,QAAS,KAE/EG,EAAmCL,EAA0BC,KAC7DK,EAAkB,CAC3BC,KAAM,CAAEjH,MAAO,OAAQC,MAAO,UAC9BiH,QAAS,CAAElH,MAAO,UAAWC,MAAO,WACpCkH,SAAU,CAAEnH,MAAO,WAAYC,MAAO,YACtCmH,SAAU,CAAEpH,MAAO,WAAYC,MAAO,YACtCoH,KAAM,CAAErH,MAAO,OAAQC,MAAO,QAC9BqH,KAAM,CAAEtH,MAAO,OAAQC,MAAO,iBAC9BsH,OAAQ,CAAEvH,MAAO,SAAUC,MAAO,gBAClCuH,QAAS,CAAExH,MAAO,UAAWC,MAAO,kBAE3BwH,EAA6B,CACtC,OACA,UACA,WACA,WACA,QAESC,EAAqB,CAC9BT,KAAM,IAAIU,IAAI,CACV,eACA,iBACA,kBACA,wBAEJT,QAAS,IAAIS,IAAI,CACb,kBACA,kBACA,wBAEJR,SAAU,IAAIQ,IAAI,CACd,mBACA,kBACA,wBAEJP,SAAU,IAAIO,IAAI,CACd,mBACA,iBACA,kBACA,wBAEJN,KAAM,IAAIM,IAAI,CACV,eACA,kBACA,yBAGKC,EAAa,CACtB,aAAgB,UAChB,gBAAmB,UACnB,iBAAoB,UACpB,iBAAoB,UACpB,aAAgB,UAChB,eAAkB,SAClB,gBAAmB,UACnB,oBAAuB,eAEdC,EAAyBb,EAAgBC,KACzCa,EAAyBd,EAAgBM,KACzCS,EAA2Bf,EAAgBO,OAC3CS,EAA4BhB,EAAgBQ,QAC5CS,EAAsB,IAEtBC,EAAqB,CAC9BC,IAAK,CAAEnI,MAAO,MAAOC,MAAO,OAC5BmI,WAAY,CAAEpI,MAAO,aAAcC,MAAO,cAC1CoI,kBAAmB,CAAErI,MAAO,oBAAqBC,MAAO,uBAE/CqI,EAA4BJ,EAAmBC,IAC/CI,EAAsB,CAC/BC,KAAM,OACNC,QAAS,UACTC,WAAY,yBACZC,WAAY,yBACZC,QAAS,UACTC,WAAY,aACZC,QAAS,WChFE,SAASC,EAAoB9D,GACxC,OAAO1D,KAAKC,IAAID,KAAKyH,IAAIC,SAAShE,IDHJ,ECGkC,MAAO,KCD5D,SAASiE,EAAiBjE,GACrC,OAAO+B,EAAgB/B,IAAU4C,ECDtB,SAASsB,EAAoBlE,GACxC,OAAOiD,EAAmBjD,IAAUqD,ECDzB,SAASc,EAAenE,GACnC,IAAIoE,EAASJ,SAAShE,GACtB,OAAO1D,KAAKC,IAAID,KAAKyH,IAAIM,MAAMD,GAAUpB,EAAsBoB,EJgEpC,KIhE8D,GCF9E,SAASN,EAAoB9D,GACxC,OAAO1D,KAAKC,IAAID,KAAKyH,IAAIC,SAAShE,ILiFA,EKjFkC,IAAK,GCD9D,SAASsE,EAAsBtE,GAC1C,OAAOyB,EAA0BzB,IAAU8B,ECDhC,SAASyC,GAAyBvE,GAC7C,OAAO1D,KAAKC,IAAID,KAAKyH,IAAIC,SAAShE,IPkFJ,EOlFkC,KAAM,GCH3D,SAASwE,GAAQzJ,GAC5B,IAAM0J,EAAWnI,KAAKyH,IAAIhJ,EAAQ,EAAIA,EAAQ,EAAG,KAC3C2J,EAAWpI,KAAKyH,IAAIhJ,EAAQ,GAAKA,EAAQ,EAAG,KAClD,MAAM,OAAN,OAAc,IAAI0J,EAAlB,aAA+B,IAAIC,EAAnC,aAAgD,IAAIA,EAASD,EAA7D,KCHJ,SAASE,KAA2Q,OAA9PA,GAAWhK,OAAOiK,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUhF,OAAQ+E,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIhK,KAAOkK,EAAcrK,OAAOsK,UAAUC,eAAeC,KAAKH,EAAQlK,KAAQ+J,EAAO/J,GAAOkK,EAAOlK,IAAY,OAAO+J,IAA2BO,MAAMC,KAAMN,WAEhT,SAASO,GAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkElK,EAAKgK,EAAnED,EAEzF,SAAuCG,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DlK,EAAKgK,EAA5DD,EAAS,GAAQW,EAAa7K,OAAO8K,KAAKT,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWzF,OAAQ+E,IAAOhK,EAAM0K,EAAWV,GAAQS,EAASG,QAAQ5K,IAAQ,IAAa+J,EAAO/J,GAAOkK,EAAOlK,IAAQ,OAAO+J,EAFxMc,CAA8BX,EAAQO,GAAuB,GAAI5K,OAAOiL,sBAAuB,CAAE,IAAIC,EAAmBlL,OAAOiL,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiB9F,OAAQ+E,IAAOhK,EAAM+K,EAAiBf,GAAQS,EAASG,QAAQ5K,IAAQ,GAAkBH,OAAOsK,UAAUa,qBAAqBX,KAAKH,EAAQlK,KAAgB+J,EAAO/J,GAAOkK,EAAOlK,IAAU,OAAO+J,EAMne,IAAI,GAAqB,gBAAoB,OAAQ,CACnDkB,EAAG,0dAGL,SAASC,GAAQC,EAAMC,GACrB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACf1K,EAAQ4J,GAAyBW,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOtB,GAAS,CACtD0B,KAAM,UACNC,MAAO,6BACPC,QAAS,YACTnK,MAAO,OACPC,OAAQ,OACRmK,IAAKN,EACL,kBAAmBE,GAClB1K,GAAQyK,EAAqB,gBAAoB,QAAS,CAC3DM,GAAIL,GACHD,GAAS,KAAM,IAGpB,IAAIO,GAA0B,aAAiBV,IAChC,ICzBA,SAASW,GAAcjL,GAElC,IAAMkL,EAAY3J,IAAe,GAQjC,OAAO,cAAC,IAAD,CACH4J,GANY,WACZ,IAAIC,EAAS,2BAAQF,GAAR,IAAmBhG,WAAYlF,EAAMkF,aAClD,MAAO,KAAOjG,OAAO8K,KAAKqB,GAAWjM,KAAI,SAAAC,GAAG,OAAIA,EAAM,IAAMgM,EAAUhM,MAAMU,KAAK,KAI7EuL,GADD,SAGH,sBAAKrK,MAAO,CAAEsK,gBAAiBtL,EAAMuL,QAAUzC,GAAO9I,EAAMuL,QAAS5K,OAV5D,IAUT,UACI,cAACZ,EAAD,CACIE,KAZC,GAaDC,KAAMF,EAAMwL,KAAK/L,QACjBC,WAAYM,EAAMwL,KAAK9L,WACvBS,OAAQ,IAEXH,EAAMwL,KAAKC,gBAAkB,cAAC,GAAD,CAASC,UAAU,iCCF7D,IAAMhI,GAAO3E,EAASC,MAChB2M,GAAM,SAAAC,GAAK,OAAIhL,KAAKiL,MAAMD,IAC1BE,GAAe,SAACC,EAAGC,GAAJ,OAAUD,EAAER,OAASS,EAAET,OAAS,EAAIQ,EAAER,SAAWS,EAAET,OAAS,GAAK,GAEhFU,GAAa,SAAAjM,GACf,OAAO,gCACH,cAACiL,GAAD,CACIO,KAAMxL,EAAMwL,KACZtG,WAAYlF,EAAMkF,WAClBqG,OAAQvL,EAAMkM,mBAChB,6BAAKlM,EAAMmM,QAAU,IAAMnM,EAAMuL,QAAUvL,EAAMoM,SAAW,UAGhEC,GAAa,SAAArM,GACf,OAAOA,EAAMhB,MAAMqF,OAAS,qCACxB,oBAAIqH,UAAU,OAAd,SAAsB1L,EAAMsM,SAAY,gCAAQtM,EAAMuM,cACtD,qBAAKb,UAAU,OAAO1K,MAAO,CAAEwL,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,QAA1G,SACK3M,EAAMhB,MAAM4N,KAAKd,IAAc3M,KAC5B,SAAA0N,GAAG,OAAI,cAAC,GAAD,CAAiC3H,WAAY2H,EAAI3H,WAAYsG,KAAMqB,EAAIrB,KAAMD,OAAQsB,EAAItB,OAAQa,QAASpM,EAAMoM,SAA/FS,EAAI3H,oBAExB,8BAGd4H,GAAgB,SAACtB,EAAMjF,EAASwG,EAAYC,EAAaC,EAAgBC,EAAiBC,EAAQC,EAAUC,EAAgBC,GAAqB,IAAD,MAE5IC,EAAiB,SAAC/B,EAAM/J,GAAc,IAAD,EACjC+L,EAAmBzG,EAAmBtF,GACtCgM,EAAY,UAAGjC,EAAKI,aAAR,aAAG,EAAY8B,SACjC,QAAqBtL,IAAjBqL,EACA,OAAOxO,OAAOC,QAAQuO,GAAcE,QAChC,SAACC,EAAD,GAAuD,IAAD,mBAA5CC,EAA4C,YAAjCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,QACnC,OAAOR,EAAiBS,IAAIJ,GAAY,CACpCG,QAASJ,EAAOI,SAAWA,GAAW,GACtCE,eACIJ,EAAaF,EAAOM,eACpBJ,EAAaF,EAAOM,eACxBC,eACIL,EAAaF,EAAOO,eACpBL,EAAaF,EAAOO,eACxBC,mBACoB,SAAhBR,EAAOG,YAAkD3L,IAA9BwL,EAAOQ,oBAAoCN,EAAaF,EAAOQ,oBAC1FN,EAAaF,EAAOQ,mBACxBL,KAAsB,SAAhBH,EAAOG,KAAkBH,EAAOG,KAAOA,GAC7CH,IACL,CAAEI,QAAS,EAAGE,eAAgB,EAAGC,eAAgB,KAI1DE,EAAuB,SAAC7C,EAAM/J,GAChC,IAAM6M,EAAa9C,EAAKI,MACxB,QAAmBxJ,IAAfkM,EAA0B,MAAO,CAAEjG,IAAK,EAAGxH,IAAK,GAEpD,GAAIY,IAAa2F,EAAyB/H,MAAO,MAAO,CAAEgJ,IAAKiG,EAAWJ,eAAgBrN,IAAKyN,EAAWJ,gBACrG,GAAIzM,IAAa4F,EAA0BhI,MAAO,MAAO,CAAEgJ,IAAKiG,EAAWH,eAAgBtN,IAAKyN,EAAWH,gBAE5G,IAAMI,EAAchB,EAAe/B,EAAM/J,GACzC,MAAO,CACH4G,IAAG,OAAEkG,QAAF,IAAEA,OAAF,EAAEA,EAAaL,eAClBrN,IAAG,OAAE0N,QAAF,IAAEA,OAAF,EAAEA,EAAaJ,eAClBK,QAAmB,OAAXD,QAAW,IAAXA,OAAA,EAAAA,EAAaH,qBAAsB,IAC1C,CAAE/F,IAAK,EAAGxH,IAAK,IActB4N,EAAe,SAAAjD,GAAI,kBAA4BpJ,KAAxB,UAAAoJ,EAAKI,aAAL,eAAY8C,UAiBnCC,EAAiB,SAACnD,EAAM/J,GAC1B,GAhBgB,SAAC+J,EAAM/J,GAMpB,IAAD,EAJF,QADiBW,IAAbX,IAAwBA,EAAW8E,GAEnC9E,IAAa0F,EAAuB9H,OACpCoC,IAAa2F,EAAyB/H,OACtCoC,IAAa4F,EAA0BhI,MAEvC,MAAqC,UAA9B,UAAAmM,EAAKI,aAAL,eAAYgD,eAEvB,IAAML,EAAchB,EAAe/B,EAAM/J,GACzC,OAAOgN,EAAajD,IAASA,EAAKI,MAAMiD,oBAAsBvB,GAC1DiB,GAAqC,SAArBA,EAAYR,KAK5Be,CAAYtD,EAAM/J,GAAW,OAAOb,KAAKC,IAAI8K,GAC7CA,GACIH,EAAKI,MAAM8C,QAAUL,EAAqB7C,EAAM/J,GAAY8E,GAASiI,cACvDpM,IAAbX,EAA0B,EAAiB,KAAbsL,EAAqB,IACzD,IAGDgC,EAAkB,SAACvD,EAAM/J,GAC3B,GAAIgN,EAAajD,GAAO,OAAO5K,KAAKC,IAAI8K,GACpCA,GACwF,GAApFA,GAAIH,EAAKI,MAAM8C,QAAUL,EAAqB7C,EAAM/J,GAAYuL,GAAanM,YAC/DuB,IAAbX,EAAyB4L,GAAkB,EAAqB,KAAjBJ,GAAyB,IAC9E,IAGD+B,EAAuB,SAACxD,EAAMyD,GAAP,OAAwBhQ,OAAOC,QAAQsM,EAAK0D,WAAa,IAAIvB,QACtF,SAACwB,EAAD,0BAAOpE,EAAP,KAAWqE,EAAX,YAAoBD,GAAQR,EAAejL,GAAKqH,KAASsE,KAAYD,IAAK,IACzEH,GAAgB,IAEfK,EAA0B,SAAC9D,EAAM+D,GAAP,OAAuBtQ,OAAOC,QAAQsM,EAAKgE,aAAe,IAAI7B,QAC1F,SAACwB,EAAD,0BAAOpE,EAAP,KAAWqE,EAAX,YAAoBD,GAAQJ,EAAgBrL,GAAKqH,KAAS,GAAKqE,IAAK,IACnEG,GAAeF,MAEdI,EAA2B,SAACjE,EAAMyD,GAAP,OAAwBhQ,OAAOC,QAAQsM,EAAK0D,WAAa,IAAIvB,QAC1F,SAACwB,EAAD,0BAAOpE,EAAP,KAAWqE,EAAX,YAAoBD,GAAQJ,EAAgBrL,GAAKqH,KAAS,GAAKqE,IAAK,IACnEH,GAAgB,IAEfS,EAA8B,SAAClE,EAAMyD,GAAP,OAAwBhQ,OAAOC,QAAQsM,EAAKgE,aAAe,IAAI7B,QAC/F,SAACwB,EAAD,0BAAOpE,EAAP,KAAWqE,EAAX,YAAoBD,GAAQJ,EAAgBrL,GAAKqH,KAAS,GAAKqE,IAAK,IACnEH,GAAgB,IAEfU,EAAyB,SAAAnE,GAC3B,QAAoBpJ,IAAhBoJ,EAAK2B,OAAsB,OAAO3B,EAAKoE,eAAiB,EAC5D,IAAMC,GAAmB5Q,OAAOC,QAAQsM,EAAK2B,QAAQQ,QACjD,SAACwB,EAAD,0BAAOW,EAAP,KAAcC,EAAd,YACIZ,EAAMhC,EAAO2C,GAASC,IAAO,GACjC9Q,OAAO8K,KAAKyB,EAAK2B,QAAQ9I,OAAS,KAAO,IACvC2L,EAAIH,EAAkB,GAAKA,EAAkBA,EAAoC,EAAlBA,EACrE,OAAOrE,EAAKoE,eAAkBhP,KAAKqP,IAAI,KAAM7C,EAAS3F,YAAe7G,KAAKC,IAAID,KAAKyH,IAAI2H,EAAG,GAAI,MAG5FE,EAA4B,SAAA1E,GAAI,OAAIA,EAAK2E,iBAAoBvP,KAAKqP,IAAI,KAAM7C,EAASgD,gBAE3F,QAAahO,IAAToJ,EAAoB,CAkBpB,IAlBqB,IACd6E,EAAwC,GAAjCC,EAAqC,GAA/BC,EAAmC,GAAzBC,EAA6B,GAAxBC,EAA4B,GAEzDC,EAAa,GAEbC,EAAwB,SAAAC,GAC1B,IAAK,IAAMC,KAAgBD,EAAa,CACpC,IAAIE,EAAapN,GAAKmN,GAClBlC,EAAemC,KACXD,KAAgBH,EAChBA,EAAWG,GAActF,QAAU,EAEnCmF,EAAWG,GAAgB,CAAErF,KAAMsF,EAAY5L,WAAY2L,EAActF,OAAQ,MAMjG,MAAiCtM,OAAOC,QAAQwE,IAAhD,eAAuD,CAAC,IAAD,sBAA3CwB,EAA2C,KAA/BsG,EAA+B,KAE/C+D,EAAcZ,EAAenD,GAC7ByD,EAAeF,EAAgBvD,GAC/BuF,EAAc9B,EAAeM,EAE7BwB,EAAc,GACdV,EAAM/N,KAAK,CAAEkJ,OAAMtG,aAAYqG,OAAQ3K,KAAKoQ,MAAM,IAAOD,EAAcxB,GAAe,KAG1F,IAAI0B,EAAazF,EAAK0D,UAAYtO,KAAKoQ,MAAM,IACzChC,EAAqBxD,EAAMyD,GAAgBU,EAAuBnE,IAClE,IAAM,GAEoB,QAA1B0B,EAAgB7N,QAAoBmM,EAAK0F,kBAAoB,IAAI3Q,MAAM,KAAKsE,SAASqI,EAAgB7N,UACjG4R,EAAa,GACbX,EAAKhO,KAAK,CAAEkJ,OAAMtG,aAAYqG,OAAQ0F,IACtCN,EAAsBnF,EAAK0D,YAEpB+B,KAAgB5B,MACvB4B,EAAazF,EAAK0D,UAAYtO,KAAKoQ,MAAM,IACrCvB,EAAyBjE,EAAMyD,GAAgBU,EAAuBnE,IACtE,IAAM,GACO,IACb+E,EAASjO,KAAK,CAAEkJ,OAAMtG,aAAYqG,OAAQ0F,IAC1CN,EAAsBnF,EAAK0D,aAKvC,IAAIiC,EAAY3F,EAAKgE,YAAc5O,KAAKoQ,MAAM,IAC1C1B,EAAwB9D,EAAM+D,GAAeW,EAA0B1E,IACvE,IAAM,EAEN2F,EAAY,EACZX,EAAIlO,KAAK,CAAEkJ,OAAMtG,aAAYqG,OAAQ4F,IAE9BA,KAAe9B,MACtB8B,EAAY3F,EAAKgE,YAAc5O,KAAKoQ,MAAM,IACtCtB,EAA4BlE,EAAMyD,GAAgBiB,EAA0B1E,IAC5E,IAAM,GACM,GACZiF,EAAQnO,KAAK,CAAEkJ,OAAMtG,aAAYqG,OAAQ4F,IAIrD,MAAO,CACHC,gBAAiB,qCACb,cAAC,GAAD,CACIpS,MAAOqR,EACPjE,QAAQ,IACRE,OAAO,6BACPC,YAAY,gCAChB,cAAC,GAAD,CACIvN,MAAOC,OAAOoS,OAAOX,GACrBpE,OAAO,4BACPC,YAAY,qDAChB,cAAC,GAAD,CACIvN,MAAOsR,EACPlE,QAAQ,KACRE,OAAO,2CACPC,YAAY,kCAChB,cAAC,GAAD,CACIvN,MAAOuR,EACPnE,QAAQ,KACRE,OAAO,4BACPC,YAAY,2EAChB,cAAC,GAAD,CACIvN,MAAOwR,EACPpE,QAAQ,KACRE,OAAO,iDACPC,YAAY,kCAChB,cAAC,GAAD,CACIvN,MAAOyR,EACPrE,QAAQ,KACRE,OAAO,+BACPC,YAAY,wEAK5B,IAAMgD,EAAcZ,EAAenD,GAC7ByD,EAAeF,EAAgBvD,GA4B/B8F,EAAS,UAAG9F,EAAKI,aAAR,aAAG,EAAY8C,QAW9B,MAAO,CACHa,cAAaN,eAAcsC,WAXZzK,EAA2B6G,QAAO,SAACC,EAAQ4D,GAAiB,IAAD,EAO1E,OANA5D,EAAM,UAACvH,EAAgBmL,UAAjB,aAAC,EAA8BlS,OAAS,CAC1CqP,EAAenD,EAAMgG,GACrBzC,EAAgBvD,EAAMgG,GACtB1I,IAAQwI,EAAY3C,EAAenD,EAAMgG,IAAgBF,EAAY,KACrExI,IAAQiG,EAAgBvD,EAAMgG,GAAeF,GAAaA,EAAY,MAEnE1D,IACR,IAIC6D,cAAgB7Q,KAAKoQ,MAAM,IAAMrB,EAAuBnE,IAAS,UAAQpJ,EACzEsP,iBAAkBlG,EAAKmG,mBAAqB,EAC5CC,gBAAkBhR,KAAKoQ,MAAM,IAAMd,EAA0B1E,IAAS,UAAQpJ,EAC9EyP,qBAAsBrG,EAAKsG,sBAAwB,WAAQ1P,EAC3D2P,OAAM,UAAExE,EAAe/B,EAAMjF,UAAvB,aAAE,EAA+ByH,QACvCgE,UAzNwB,SAACxG,GAAU,IAAD,EAClC,QAA6BpJ,KAAzB,UAAAoJ,EAAKI,aAAL,eAAY8B,UAAwB,MAAO,GAC/C,IAAMF,EAAmBzG,EAAmBR,GAC5C,OAAOtH,OAAOC,QAAQsM,EAAKI,MAAM8B,UAAUC,QACvC,SAACC,EAAD,0BAAUC,EAAV,KAAsBE,EAAtB,KAAsBA,KAAtB,4BAAsCH,GAAtC,YACc,SAATG,GAAmBP,EAAiBS,IAAIJ,GAAa,CAAC5G,EAAW4G,IAAa,OAC/E,IAmNGoE,CAAoBzG,GAAM1L,KAAK,YAASsC,EACnD8P,mBAAiC9P,IAAjB6M,QAA8C7M,IAAhBmN,OAC1CnN,EAAY6M,EAAeM,EAC/B4C,kBAAmBnD,EAAqBxD,EAAMyD,GAC9CmD,qBAAsB9C,EAAwB9D,EAAM+D,GACpD8C,sBAAuB5C,EAAyBjE,EAAMyD,GACtDqD,yBAA0B5C,EAA4BlE,EAAMyD,GAC5DsD,kBAAmBlE,EAAqB7C,EAAMjF,GAC9CiM,sBAAuBnE,EAAqB7C,EAAMwB,GAClDyF,OApDOxT,OAAOiD,YACVjD,OAAOC,QAAQsM,EAAKkH,SAAW,IAAIvT,KAC/B,mCAAEwT,EAAF,KAAYC,EAAZ,WACC,CAACD,EAAU,CACRC,OAAQA,EACR1G,iBAAkBuD,EACd/L,GAAKiP,GAAW5D,EAAgBrL,GAAKiP,KAAcC,EAAS,QA+C5EC,aAxCO5T,OAAOiD,YACVjD,OAAOC,QAAQsM,EAAKsH,eAAiB,IAAI3T,KACrC,mCAAE4T,EAAF,KAAkBH,EAAlB,WACC,CAACG,EAAgB,CACdH,OAAQA,EACR1G,iBAAkBwD,EACdhM,GAAKqP,GAAiBhE,EAAgBrL,GAAKqP,KAAoBH,EAAS,QAmCxF/D,oBAAoB,UAAArD,EAAKI,aAAL,eAAYiD,0BAAsBzM,IAIxD4Q,GAAa,SAAAhT,GACf,GAAIA,EAAMiT,UAAY5D,IAAU,OAAO,iFACvC,IAAM6D,EAAalT,EAAMiT,QAAU,EACnC,OAAO,iCAAOC,EAAa,SAAW,OAA/B,KAAwC,mBAAGlS,MAAO,CACrDmS,MAAOD,EAAa,QAAU,OADa,SAE3CtS,KAAKoQ,MAAoD,KAA7CkC,EAAalT,EAAMiT,QAAUjT,EAAMiT,SAAiB,MAF7D,IAEsE,uBAAMvH,UAAU,aAAhB,cACvE9K,KAAKoQ,MAAMhR,EAAMiT,OAAOjT,EAAMoT,KAAK,KAAK,IAD+B,OACtBpT,EAAMqT,gBAI3DC,GAAiB,SAAAtT,GACnB,OAAOf,OAAO8K,KAAK/J,EAAMuT,UAAY,IAAIlP,OACrC,sBAAKqH,UAAU,OAAf,UACI,6BAAK1L,EAAMwT,WACX,qBAAKxS,MAAO,CAAEwL,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,QAAzF,SACK1N,OAAOC,QAAQc,EAAMuT,UAAUpU,KAC5B,mCAAE+F,EAAF,KAAc7F,EAAd,YACI,cAAC,GAAD,CAEImM,KAAM9H,GAAKwB,GACXA,WAAYA,EACZqG,OAAQvL,EAAMyT,WAAapU,EAAMuT,OAASvT,EAC1C6M,iBAAkBlM,EAAMyT,YAAcpU,EAAM6M,iBAC5CC,OAAO,MALFjH,QAQpBlF,EAAMqT,YACD,8BCvVlB,IAAMK,GAAY,SAAA1T,GACd,OAAOA,EAAMX,QAAUW,EAAM2T,aACzB,+BACI,oBAAI3S,MAAO,CAAC4S,SAAU,IAAtB,SAA4B5T,EAAMqT,WAClC,oBAAIrS,MAAO,CAAC4S,SAAU,IAAtB,SAA4B5T,EAAMX,WAC9B,8BAGVwU,GAAiB,SAAC,GAAmC,IAAlCtN,EAAiC,EAAjCA,QAASuN,EAAwB,EAAxBA,OAAwB,KAAhBC,WAAgB,YACGD,EADH,IAC/CvE,EAD+C,KAClCN,EADkC,KACpB+E,EADoB,KACVC,EADU,KAEtD,OAAO,+BACH,oBAAIjT,MAAO,CAAC4S,SAAU,GAAIhR,QAAS,GAAnC,SAAwC2D,IACxC,oBAAIvF,MAAO,CAAC4S,SAAU,GAAIhR,QAAS,EAAGuQ,MAAOa,GAA7C,SAAyDzE,IACzD,oBAAIvO,MAAO,CAAC4S,SAAU,GAAIhR,QAAS,EAAGuQ,MAAOc,GAA7C,SAA0DhF,QAI5DiF,GAAY,SAAAlU,GAAU,IAAD,EAEvB,OAAO,sBAAKgB,MAAO,CAACmT,aAAc,YAA3B,UACH,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAOxT,MAAO,CAAEb,OAAQ,GAA9D,SACI,gCACI,6BACI,oBAAIsU,QAAQ,IAAZ,SACI,qBAAKzT,MAAO,CACR0T,OAAQ,sBACRxR,aAAc,OACdsJ,QAAS,eACT5J,QAAS,qBAJb,SAKI5C,EAAM2U,WAAWC,gBAKrC,eAACC,EAAA,EAAD,CACIC,iBAAiB,WACjBpJ,UAAU,2BACV1K,MAAO,CAAE0T,OAAQ,GACjB/J,MAAI,EAJR,UAMI,cAACoK,EAAA,EAAD,CAAKC,SAAS,WAAWvK,MAAM,OAAOzJ,MAAO,CAAEsK,gBAAiB,SAAhE,SACI,cAAC8I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,SACI,kCACI,cAAC,GAAD,CAAWnV,MAAOW,EAAM2U,WAAWlJ,eAAnC,6BACA,cAAC,GAAD,CAAWpM,MAAOW,EAAM2U,WAAWzC,cAAnC,4BACA,cAAC,GAAD,CAAW7S,MAAOW,EAAM2U,WAAWpF,YAAnC,iCACA,cAAC,GAAD,CAAWlQ,MAAOW,EAAM2U,WAAW1F,aAAnC,kCACA,cAAC,GAAD,CAAW5P,MAAOW,EAAM2U,WAAW5C,OAAnC,8CACA,cAAC,GAAD,CAAW1S,MAAOW,EAAM2U,WAAW3C,UAAnC,qBACA,cAAC,GAAD,CACI3S,MAAOW,EAAM2U,WAAWpC,kBAAkBlK,MAAQrI,EAAM2U,WAAWpC,kBAAkB1R,IAC/Eb,EAAM2U,WAAWpC,kBAAkBlK,IADlC,UAEArI,EAAM2U,WAAWpC,kBAAkBlK,IAFnC,YAE0CrI,EAAM2U,WAAWpC,kBAAkB1R,KACpF8S,aAAc,EAJlB,kCAMA,cAAC,GAAD,CACItU,MAAOW,EAAM2U,WAAWnC,sBAAsBnK,MAAQrI,EAAM2U,WAAWnC,sBAAsB3R,IACvFb,EAAM2U,WAAWnC,sBAAsBnK,IADtC,UAEArI,EAAM2U,WAAWnC,sBAAsBnK,IAFvC,YAE8CrI,EAAM2U,WAAWnC,sBAAsB3R,KAC5F8S,aAAc,EAJlB,2CASZ,cAACoB,EAAA,EAAD,CAAKC,SAAS,eAAevK,MAAM,WAAnC,SAEI,cAAC2J,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,SACI,kCACI,cAAC,GAAD,CAAWnV,MAAOW,EAAM2U,WAAWlD,cAAnC,8BACA,cAAC,GAAD,CAAWpS,MAAOW,EAAM2U,WAAWM,gBAAnC,gCACA,cAAC,GAAD,CAAW5V,MAAOW,EAAM2U,WAAWjD,iBAAkBiC,aAAc,EAAnE,+BACA,cAAC,GAAD,CAAWtU,MAAOW,EAAM2U,WAAW/C,gBAAnC,iCACA,cAAC,GAAD,CAAWvS,MAAOW,EAAM2U,WAAW9C,qBAAnC,sCACA,cAAC,GAAD,CAAWxS,OAAO,UAAAW,EAAM2U,WAAWxH,cAAjB,eAAyB9I,QAASrE,EAAM2U,WAAWxH,YAAS/K,EAA9E,gCACA,cAAC,GAAD,CAAW/C,MAAOW,EAAM2U,WAAW9F,mBAAnC,6CAKZ,cAACkG,EAAA,EAAD,CAAKC,SAAS,aAAavK,MAAM,gBAAjC,SACI,cAAC2J,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,SACI,kCACI,cAAC,GAAD,CAEIV,OAAQ,CAAC,MAAO,SADX,QAGR7U,OAAOC,QAAQc,EAAM2U,WAAWpD,YAAYpS,KACzC,SAAA+V,GAAK,OAAI,cAAC,GAAD,CAEL3O,QAAS2O,EAAM,GACfpB,OAAQoB,EAAM,IAFTA,EAAM,qBAY5B,SAASC,KAEpB,IAEMC,EDkPK,SAAuBlQ,GAAa,IAAD,EAExCgG,EAAY3J,IAAe,GAC3BiK,EAAO9H,GAAKwB,GAGZqB,EAAUgC,EAAgB2C,EAAU3E,SAASlH,MAC7C0N,EAAa3E,EAAmB8C,EAAU6B,YAC1CC,EAAczE,EAAgB2C,EAAU8B,aAAa3N,MACrD4N,EAAiB7E,EAAmB8C,EAAU+B,gBAC9CC,EAAkB1E,EAAmB0C,EAAUzD,YAC/C0F,EAAS,CACXtF,KAAMY,EAAcyC,EAAUrD,MAC9BC,QAASW,EAAcyC,EAAUpD,SACjCC,WAAYU,EAAcyC,EAAUnD,YACpCC,WAAYS,EAAcyC,EAAUlD,YACpCC,QAASQ,EAAcyC,EAAUjD,UAE/BmF,EAAW,CACb3F,WAAY4N,EAAiBnK,EAAUoK,SACvClF,cAAeiF,EAAiBnK,EAAUqK,SAExClI,EAAiBzE,EAAqBsC,EAAUsK,SAASvP,QACzDqH,EAAkBzE,GAAwBqC,EAAUuK,YAEpDC,EAAW5I,GAActB,EAAMjF,EAASwG,EAAYC,EAAaC,EAAgBC,EAAiBC,EAAQC,EAAUC,EAAgBC,GAE1I,YAAalL,IAAToJ,EAA2B,aAC3BmK,QAAQ,GACLD,GAEA,yBACHE,YAAapK,EAAKjM,aAClB0V,gBAAe,UAAEzJ,EAAK0F,wBAAP,aAAE,EAAuB3Q,MAAM,KAAKpB,KAAI,SAAA0W,GAAI,aAAI,UAAAtO,EAAmBsO,UAAnB,eAA0BvW,QAASuW,KAAM/V,KAAK,MAC7GqN,OAAQlO,OAAOC,QAAQsM,EAAK2B,QAAU,IAAIhO,KACtC,WAASiK,GAAT,uBAAE0M,EAAF,KAAKC,EAAL,YAAe,qBAAa/U,MAAO,CAACgV,aAAc,GAAnC,mBAA2CpO,EAAoBkO,IAAMA,EAArE,aAA2EC,IAAjE3M,OAE1BsM,GANP,IAOIO,iBAAkB,eAAC,GAAD,CAAgB1C,SAAU/H,EAAK0D,UAAWsE,SAAS,kBAAnD,UACd,eAAC,GAAD,CAAYP,OAAQyC,EAASvD,kBAAmBiB,KAAMsC,EAASjE,cAA/D,UAA8E,uBAC1E,uBAAO/F,UAAU,aAAjB,oEACS,uBACb,eAAC,GAAD,CAAYuH,OAAQyC,EAASrD,sBAAuBe,KAAMsC,EAASjE,cAAnE,UAAkF,uBAC9E,uBAAO/F,UAAU,aAAjB,4DAGRwK,mBAAoB,eAAC,GAAD,CAAgB3C,SAAU/H,EAAKgE,YAAagE,SAAS,mBAArD,UAChB,eAAC,GAAD,CAAYP,OAAQyC,EAAStD,qBAAsBgB,KAAMsC,EAAS9D,gBAAlE,UAAmF,uBAC/E,uBAAOlG,UAAU,aAAjB,oEACS,uBACb,eAAC,GAAD,CAAYuH,OAAQyC,EAASpD,yBAA0Bc,KAAMsC,EAAS9D,gBAAtE,UAAuF,uBACnF,uBAAOlG,UAAU,aAAjB,qDAGRyK,YAAa,cAAC,GAAD,CAAgB5C,SAAUmC,EAASjD,OAAQe,SAAS,UAAUC,YAAU,IACrF2C,kBAAmB,cAAC,GAAD,CAAgB7C,SAAUmC,EAAS7C,aAAcW,SAAS,gBAAgBC,YAAU,IACvG4C,kBAAmB,eAAC,GAAD,CAAgB9C,SAAU/H,EAAK8K,cAAe9C,SAAS,gBAAvD,UACf,uBAAO9H,UAAU,aAAjB,qDAA6E,uBAC7E,uBAAOA,UAAU,aAAjB,kDAEJkJ,MAAO,cAAC7U,EAAD,CACHE,KAAM,IACNC,KAAMsL,EAAK/L,QACXC,WAAY8L,EAAK9L,WACjBS,OAAQ,IAEZsL,eAAgBD,EAAKC,gBAAkB,QCpTjB8K,CAFRhV,IAAe,GACJ2D,YAE7B,OAAIkQ,EAAkBO,OAAeP,EAAkBhE,gBAEhD,qCACH,cAACoF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UAAK,6BAAKrB,EAAkBQ,kBAEhC,eAACY,EAAA,EAAD,CAAK9K,UAAU,OAAf,UACI,cAAC+K,EAAA,EAAD,CAAKC,GAAI,EAAGhL,UAAU,OAAtB,SAA6B,cAAC,GAAD,CAAWiJ,WAAYS,MACpD,eAACqB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACKtB,EAAkBa,iBAClBb,EAAkBc,mBAClBd,EAAkBe,YAClBf,EAAkBgB,kBAClBhB,EAAkBiB,2B,aCpHpB,SAASM,GAAc3W,GAAQ,IAAD,EAERuB,IAFQ,mBAEpC2J,EAFoC,KAEzBjH,EAFyB,KAIrC2S,EAAe5W,EAAM4W,cAAgB,UAM3C,OAAO,cAAC,IAAD,CACLvX,MAAOkJ,EAAgB2C,EAAU0L,IACjCjR,OAAQpD,EAAe,CAACqD,SAAU,EAAGgO,SAAU,IAAKiD,UAAW,KAAM,CAACjU,QAAS,IAC/EK,MAAOD,EACPkB,QAASjF,OAAOoS,OAAOhL,GACvBP,cAAe,IACfgR,cAAc,EACd9R,SAXmB,SAAAC,GACnBhB,EAAc,gBAAG2S,EAAe3R,EAAE5F,QAAU6H,EAAuB7H,WAAQ+C,EAAY6C,EAAE5F,WCT9E,SAAS0X,GAAgB/W,GAAQ,IAAD,EAEVuB,IAFU,mBAEtC2J,EAFsC,KAE3BjH,EAF2B,KAGvC+S,EAAWC,mBAEXL,EAAe5W,EAAM4W,cAAgB,aAW3C,OAAO,qBAAK5V,MAAO,CACjBb,OAAQ,GACRyT,SAAU,IACVhO,SAAU,EACViR,UAAW,KAJN,SAMN,uBACGK,KAAK,SACLlW,MAAO,CACLN,MAAO,OACPyW,YAAa,GACbC,WAAY,EACZC,cAAe,GAEjBC,QAvBqB,SAAArS,GACvBA,EAAEkE,OAAO9J,MAAQ+I,EAAmBnD,EAAEkE,OAAO9J,OAC7C4E,EAAc,gBAAG2S,EAAkC,MAAnB3R,EAAEkE,OAAO9J,WAAgB+C,EAAY6C,EAAEkE,OAAO9J,SAsB5EgG,YAAY,aACZhG,MAAO+I,EAAmB8C,EAAU0L,KAAkB,GACtDW,KAAM,EACNzM,IAAKkM,EACLQ,QAvBY,WACdR,EAASS,QAAQC,YCbN,SAASC,KAEpB,IAAMC,EAAsBrW,GAAa,GAAM,GAE/C,OAAO,cAACsW,EAAA,EAAOC,MAAR,CAAcpM,UAAU,OAAxB,SACH,cAAC,IAAD,CACIP,GAAIyM,EACJ5W,MAAO,CAAE+W,eAAgB,OAAQ5E,MAAO,SAF5C,8B,oDCaF6E,GAAiB,WAAO,IAAD,EAEUzW,IAFV,mBAElB2J,EAFkB,KAEPjH,EAFO,KAazB,OAAO,cAACgU,GAAA,EAAD,CACHjX,MAAO,CAAE4B,QAAS,UAAWzC,OAAQ,EAAG+C,aAAc,GACtDsR,QAAQ,OACR0D,QAZgB,WAChBjU,EAAc,CACVsC,QAAS2E,EAAU8B,YACnBA,YAAa9B,EAAU3E,QACvBwG,WAAY7B,EAAU+B,eACtBA,eAAgB/B,EAAU6B,cAI3B,4BASLoL,GAAkB,WAAO,IAAD,EAES5W,IAFT,mBAEnB2J,EAFmB,KAERjH,EAFQ,KAW1B,OAAO,cAACgU,GAAA,EAAD,CACHjX,MAAO,CAAE4B,QAAS,UAAWzC,OAAQ,EAAG+C,aAAc,GACtDsR,QAAQ,OACR0D,QAVgB,WAChBjU,EAAc,CACV+I,YAAa9B,EAAU3E,QACvB0G,eAAgB/B,EAAU6B,cAI3B,+BAULqL,GAAyB,SAAApY,GAAU,IAAD,EAEGuB,IAFH,mBAEzB2J,EAFyB,KAEdjH,EAFc,KAQhC,OAAO,cAAC,IAAD,CACH5E,MAAOuJ,EAAqBsC,EAAUsK,SACtC7P,OAAQpD,EAAe,CAAEqD,SAAU,EAAGgO,SAAU,IAAKiD,UAAW,MAChE5T,MAAOD,EACPkB,QAASjF,OAAOoS,OAAOtL,GACvB+Q,cAAc,EACd9R,SAViB,SAAAC,GACjBhB,EAAc,CAAEuR,QAASvQ,EAAE5F,QAAU+G,EAAiC/G,WAAQ+C,EAAY6C,EAAE5F,YAYlGgZ,GAAc,SAAArY,GAAU,IAAD,EAEUuB,IAFV,mBAElB2J,EAFkB,KAEPjH,EAFO,OAGYL,mBAAS6E,EAAcyC,EAAUlL,EAAM8P,SAHnD,mBAGlBwI,EAHkB,KAGHC,EAHG,KAInBvB,EAAWC,mBAEXL,EAAe5W,EAAM8P,MAe3B,OAAO,sBAAK9O,MAAO,CACfwX,SAAU,WACVrY,OAAQ,GACRyT,SAAU,IACVhO,SAAU,EACViR,UAAW,KALR,UAQH,uBACIK,KAAK,SACLlW,MAAO,CACHN,MAAO,OACPyW,YAAa,GACbC,WAAY,EACZC,cAAe,GAEnBE,KAAM,EACND,QA9BY,SAAArS,GACZqD,SAASgQ,KAAmBhR,GAA2C,MAAnBrC,EAAEkE,OAAO9J,OAAoC,OAAnB4F,EAAEkE,OAAO9J,QACvF4F,EAAEkE,OAAO9J,MAAQiI,EAAsBgB,SAASrD,EAAEkE,OAAO9J,QAE7D4F,EAAEkE,OAAO9J,MAAQoJ,EAAcxD,EAAEkE,OAAO9J,OACxCkZ,EAAYtT,EAAEkE,OAAO9J,OACrB4E,EAAc,gBAAGjE,EAAM8P,MAAQxH,SAASrD,EAAEkE,OAAO9J,SAAWiI,OAAsBlF,EAAY6C,EAAEkE,OAAO9J,SAyBnGgG,YAAauC,EAAoB5H,EAAM8P,QAAU9P,EAAM8P,MACvDzQ,MAAOoJ,EAAcyC,EAAU0L,MAAmBtP,EAAsB,GAAK4D,EAAU0L,GACvF9L,IAAKkM,EACLQ,QAzBQ,WACZR,EAASS,QAAQC,UA2BbjP,EAAcyC,EAAU0L,MAAmBtP,EAAsB,sBAAMtG,MAAO,CAC1EwX,SAAU,WACVC,IAAK,EACLC,KAAM,IAHuD,SAI7D9Q,EAAoB5H,EAAM8P,QAAU9P,EAAM8P,QAAgB,iCAKpE6I,GAAiB,SAAA3Y,GAAU,IAAD,EAEOuB,IAFP,mBAErB2J,EAFqB,KAEVjH,EAFU,KAGtB+S,EAAWC,mBAWjB,OAAO,qBAAKjW,MAAO,CACfb,OAAQ,GACRyT,SAAU,IACVhO,SAAU,EACViR,UAAW,KAJR,SAOH,uBACIK,KAAK,SACLlW,MAAO,CACHN,MAAO,OACPyW,YAAa,GACbC,WAAY,EACZC,cAAe,GAEnBC,QAxBe,SAAArS,GACnBA,EAAEkE,OAAO9J,MAAQgW,EAAiBpQ,EAAEkE,OAAO9J,OAC3C4E,EAAc,gBAAGjE,EAAM4Y,SAA8B,MAAnB3T,EAAEkE,OAAO9J,WAAgB+C,EAAY6C,EAAEkE,OAAO9J,SAuB5EgG,YAAarF,EAAMV,MACnBD,MhBnF0B,IgBmFnBgW,EAAiBnK,EAAUlL,EAAM4Y,WAAwC,GAAK1N,EAAUlL,EAAM4Y,UACrG9N,IAAKkM,EACLQ,QAvBQ,WACZR,EAASS,QAAQC,aA0BnBmB,GAAmB,WAAO,IAAD,EAEQtX,IAFR,mBAEpB2J,EAFoB,KAETjH,EAFS,KAQ3B,OAAO,cAAC,IAAD,CACH5E,MAAOmJ,EAAmB0C,EAAUzD,YACpC9B,OAAQpD,EAAe,CAAEqD,SAAU,EAAGgO,SAAU,IAAKiD,UAAW,MAChE5T,MAAOD,EACPkB,QAASjF,OAAOoS,OAAO9J,GACvBuP,cAAc,EACd9R,SAViB,SAAAC,GACjBhB,EAAc,CAAEwD,WAAYxC,EAAE5F,QAAUsI,EAA0BtI,WAAQ+C,EAAY6C,EAAE5F,YAY1FyZ,GAAwB,WAAO,IAAD,EAEGvX,IAFH,mBAEzB2J,EAFyB,KAEdjH,EAFc,KAG1B+S,EAAWC,mBAWjB,OAAO,qBAAKjW,MAAO,CACfb,OAAQ,GACRyT,SAAU,IACVhO,SAAU,EACViR,UAAW,KAJR,SAOH,uBACIK,KAAK,SACLK,KAAM,EACNvW,MAAO,CACHN,MAAO,OACPyW,YAAa,GACbC,WAAY,EACZC,cAAe,GAEnBC,QAzBa,SAAArS,GACjBA,EAAEkE,OAAO9J,MAAQwJ,GAAwB5D,EAAEkE,OAAO9J,OAClD4E,EAAc,CAAEwR,WhBhHU,IgBgHExQ,EAAEkE,OAAO9J,WAA+B+C,EAAY6C,EAAEkE,OAAO9J,SAwBrFgG,YAAa,eACbhG,MhBzIsB,IgByIfwJ,GAAwBqC,EAAUuK,YAAqC,GAAK5M,GAAwBqC,EAAUuK,YACrH3K,IAAKkM,EACLQ,QAxBQ,WACZR,EAASS,QAAQC,aA4BV,SAASqB,GAAkB/Y,GAEtC,SAASgZ,EAAT,GAA6D,EAAhC3F,SAAiC,IAAvB2B,EAAsB,EAAtBA,SAAUiE,EAAY,EAAZA,SACvCC,EAAkBC,qBAAWC,MAE7BC,EAAmBC,aACrBtE,GACA,kBAAMiE,GAAYA,EAASjE,MAGzBuE,EAAoBL,IAAoBlE,EAE9C,OACI,cAACiD,GAAA,EAAD,CACIjX,MAAO,CAAE4B,QAAS,UAAWzC,OAAQ,EAAG+C,aAAc,GACtDsR,QAAQ,OACR0D,QAASmB,EAHb,SAKKE,EAAoB,eAAiB,uBAKlD,OAAO,cAACC,GAAA,EAAD,UACH,eAACC,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,OAAN,CAAa1Y,MAAO,CAAE4B,QAAS,GAA/B,UACI,cAACoW,EAAD,CAAmBhE,SAAS,uBAC5B,cAAC,GAAD,IACA,cAAC,GAAD,OAEJ,cAACwE,GAAA,EAAUG,SAAX,CAAoB3E,SAAS,qBAA7B,SACI,eAACyE,GAAA,EAAKG,KAAN,WACI,sDACA,cAAC,GAAD,IACA,oDACA,cAAC,GAAD,IACA,uGACA,cAAC,GAAD,IACA,oDAAuBtS,EAAvB,OACA,cAAC,GAAD,CAAawI,MAAM,SACnB,cAAC,GAAD,CAAaA,MAAM,YACnB,cAAC,GAAD,CAAaA,MAAM,eACnB,cAAC,GAAD,CAAaA,MAAM,eACnB,cAAC,GAAD,CAAaA,MAAM,YACnB,2DACA,cAAC,GAAD,CAAgBxQ,MAAM,oCAAoCsZ,SAAS,YACnE,8DACA,cAAC,GAAD,CAAgBtZ,MAAM,oCAAoCsZ,SAAS,qB,OC9QxE,SAASiB,KAEtB,OACE,eAAC,IAAD,CAAQC,SAAU3Y,mBAAlB,UACE,eAAC0W,EAAA,EAAD,CAAQkC,GAAG,OAAOvF,QAAQ,OAAOwF,OAAO,KAAKC,iBAAe,EAACvO,UAAU,OAAvE,UACE,cAACiM,GAAD,IACA,cAACE,EAAA,EAAOqC,OAAR,CAAeC,gBAAc,mBAAmBzO,UAAU,SAC1D,eAACmM,EAAA,EAAO8B,SAAR,CAAiB5O,GAAG,mBAApB,UACE,cAACpH,EAAD,IACA,sBAAK3C,MAAO,CAAEwL,QAAS,OAAQqK,UAAW,IAAKjR,SAAU,EAAGwU,cAAe,UAA3E,UACE,8BAAK,mBAAGpZ,MAAO,CAAEmS,MAAO,SAAnB,yBAGL,sBAAKnS,MAAO,CAAEwL,QAAS,OAAQ5G,SAAU,GAAzC,UACE,cAAC+Q,GAAD,IACA,cAACI,GAAD,UAEJ,sBAAK/V,MAAO,CAAEwL,QAAS,OAAQqK,UAAW,IAAKjR,SAAU,EAAGwU,cAAe,UAA3E,UACE,8BAAK,mBAAGpZ,MAAO,CAAEmS,MAAO,SAAnB,2BAGL,sBAAKnS,MAAO,CAAEwL,QAAS,OAAQ5G,SAAU,GAAzC,UACE,cAAC+Q,GAAD,CAAeC,aAAa,gBAC5B,cAACG,GAAD,CAAiBH,aAAa,+BAItC,cAACmC,GAAD,IACA,eAACsB,EAAA,EAAD,CAAW3O,UAAU,gBAArB,UACE,cAAC8K,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAO6D,KAAK,IAAIjH,SAAU,cAAC8B,GAAD,UAG9B,cAACqB,EAAA,EAAD,CAAK9K,UAAU,SAAf,SACE,eAAC+K,EAAA,EAAD,CAAK/K,UAAU,kBAAf,UAAiC,uBAAjC,4GACwD,mBAAG6O,KAAK,wDAAR,wBADxD,iBACoJ,uBADpJ,gEAE+D,mBAAGA,KAAK,iEAAR,4BAF/D,eClCVC,IAASC,OACL,qBAAK/O,UAAU,MAAf,SAAqB,cAAC,GAAD,MACvBgP,SAASC,eAAe,U","file":"static/js/main.f5e3068e.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData.items)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","import gameData from \"../parsed_data.json\"\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, offsetMargin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...gameData.textures[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                (offsetMargin || 0) + margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                (offsetMargin || 0) + margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (containerProvided, optionProvided) => {\r\n    return {\r\n        option: provided => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n            ...optionProvided,\r\n        }),\r\n        control: provided => ({\r\n            ...provided,\r\n            borderColor: \"gray\",\r\n        }),\r\n        container: provided => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...containerProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <Option {...props}>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n      offsetMargin={-18}\r\n    />\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexGrow: 1, marginTop: 34})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export const DEFAULT_REPUTATION = 0\r\nexport const STORE_BALANCE_MULTIPLIERS = {\r\n    full: { value: 'full', label: 'Initial store multiplier (*100%)', numeric: 1. },\r\n    half: { value: 'half', label: 'Below half of initial balance (*75%)', numeric: .75 },\r\n    quarter: { value: 'quarter', label: 'Below quarter of initial balance (*20%)', numeric: .2 },\r\n}\r\nexport const DEFAULT_STORE_BALANCE_MULTIPLIER = STORE_BALANCE_MULTIPLIERS.full\r\nexport const OUTPOST_OPTIONS = {\r\n    city: { value: 'city', label: 'Colony' },\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n    base: { value: 'base', label: 'Default price' },\r\n    lowest: { value: 'lowest', label: 'Lowest price' },\r\n    highest: { value: 'highest', label: 'Highest price' },\r\n}\r\nexport const LOCATIONAL_OUTPOST_OPTIONS = [\r\n    'city',\r\n    'outpost',\r\n    'research',\r\n    'military',\r\n    'mine',\r\n]\r\nexport const LOCATION_MERCHANTS = {\r\n    city: new Set([\r\n        'merchantcity',\r\n        'merchantarmory',\r\n        'merchantmedical',\r\n        'merchantengineering',\r\n    ]),\r\n    outpost: new Set([\r\n        'merchantoutpost',\r\n        'merchantmedical',\r\n        'merchantengineering',\r\n    ]),\r\n    research: new Set([\r\n        'merchantresearch',\r\n        'merchantmedical',\r\n        'merchantengineering',\r\n    ]),\r\n    military: new Set([\r\n        'merchantmilitary',\r\n        'merchantarmory',\r\n        'merchantmedical',\r\n        'merchantengineering',\r\n    ]),\r\n    mine: new Set([\r\n        'merchantmine',\r\n        'merchantmedical',\r\n        'merchantengineering',\r\n    ]),\r\n}\r\nexport const SHOP_NAMES = {\r\n    'merchantcity': 'General',\r\n    'merchantoutpost': 'General',\r\n    'merchantresearch': 'General',\r\n    'merchantmilitary': 'General',\r\n    'merchantmine': 'General',\r\n    'merchantarmory': 'Armory',\r\n    'merchantmedical': 'Medical',\r\n    'merchantengineering': 'Engineering',\r\n}\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.city\r\nexport const BASE_MULTIPLIER_OPTION = OUTPOST_OPTIONS.base\r\nexport const LOWEST_MULTIPLIER_OPTION = OUTPOST_OPTIONS.lowest\r\nexport const HIGHEST_MULTIPLIER_OPTION = OUTPOST_OPTIONS.highest\r\nexport const DEFAULT_SKILL_LEVEL = 100\r\nexport const MAX_SKILL_LEVEL = 100\r\nexport const FABRICATOR_OPTIONS = {\r\n    all: { value: 'all', label: 'All' },\r\n    fabricator: { value: 'fabricator', label: 'Fabricator' },\r\n    medicalfabricator: { value: 'medicalfabricator', label: 'Medical Fabricator' },\r\n}\r\nexport const DEFAULT_FABRICATOR_OPTION = FABRICATOR_OPTIONS.all\r\nexport const ENGLISH_SKILL_NAMES = {\r\n    helm: \"Helm\",\r\n    weapons: \"Weapons\",\r\n    mechanical: \"Mechanical Engineering\",\r\n    electrical: \"Electrical Engineering\",\r\n    medical: \"Medical\",\r\n    initiative: \"Initiative\",\r\n    courage: \"Courage\",\r\n}\r\nexport const DEFAULT_UPGRADE_LEVELS = 0\r\nexport const DEFAULT_DIFFICULTY = 0\r\n","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import { FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION } from '../globals'\r\n\r\nexport default function validateFabricator (input) {\r\n    return FABRICATOR_OPTIONS[input] || DEFAULT_FABRICATOR_OPTION\r\n}\r\n","import { DEFAULT_SKILL_LEVEL, MAX_SKILL_LEVEL } from '../globals'\r\n\r\nexport default function validateSkill (input) {\r\n    let parsed = parseInt(input)\r\n    return Math.max(Math.min(isNaN(parsed) ? DEFAULT_SKILL_LEVEL : parsed, MAX_SKILL_LEVEL), 0)\r\n}\r\n","import { DEFAULT_UPGRADE_LEVELS } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_UPGRADE_LEVELS, 10), 0)\r\n}\r\n","import { STORE_BALANCE_MULTIPLIERS, DEFAULT_STORE_BALANCE_MULTIPLIER } from '../globals'\r\n\r\nexport default function validateStoreBalance (input) {\r\n    return STORE_BALANCE_MULTIPLIERS[input] || DEFAULT_STORE_BALANCE_MULTIPLIER\r\n}\r\n","import { DEFAULT_DIFFICULTY } from '../globals'\r\n\r\nexport default function validateDifficultyLevel (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_DIFFICULTY, 100), 0)\r\n}\r\n","export default function getRGB (value) {\r\n    const positive = Math.min(value > 0 ? value : 0, 200)\r\n    const negative = Math.min(value < 0 ? -value : 0, 200)\r\n    return `rgb(${255-positive}, ${255-negative}, ${255-negative-positive})`\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 12 1 C 8.6761905 1 6 3.6761905 6 7 L 6 8 C 4.9069372 8 4 8.9069372 4 10 L 4 20 C 4 21.093063 4.9069372 22 6 22 L 18 22 C 19.093063 22 20 21.093063 20 20 L 20 10 C 20 8.9069372 19.093063 8 18 8 L 18 7 C 18 3.6761905 15.32381 1 12 1 z M 12 3 C 14.27619 3 16 4.7238095 16 7 L 16 8 L 8 8 L 8 7 C 8 4.7238095 9.7238095 3 12 3 z M 6 10 L 18 10 L 18 20 L 6 20 L 6 10 z M 12 13 C 10.9 13 10 13.9 10 15 C 10 16.1 10.9 17 12 17 C 13.1 17 14 16.1 14 15 C 14 13.9 13.1 13 12 13 z\"\n});\n\nfunction SvgLock(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLock);\nexport default __webpack_public_path__ + \"static/media/lock.e1b8a009.svg\";\nexport { ForwardRef as ReactComponent };","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { Link } from 'react-router-dom'\r\nimport getRGB from '../Utils/getRGB'\r\nimport { ReactComponent as LockSVG } from '../lock.svg'\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const size = 60 || props.size\r\n\r\n    const getLink = () => {\r\n        let newParams = { ...getParams, identifier: props.identifier }\r\n        return '/?' + Object.keys(newParams).map(key => key + '=' + newParams[key]).join('&');\r\n    }\r\n\r\n    return <Link\r\n        to={getLink()}\r\n    >\r\n        <div style={{ backgroundColor: props.rating && getRGB(props.rating), height: size }}>\r\n            <TextureLoader\r\n                size={size}\r\n                file={props.item.texture}\r\n                sourcerect={props.item.sourcerect}\r\n                margin={0}\r\n            />\r\n            {props.item.requiresrecipe && <LockSVG className='locked-recipe-craftable' />}\r\n        </div>\r\n    </Link>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport gameData from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport ClickableItem from '../Components/ClickableItem'\r\nimport getRGB from '../Utils/getRGB'\r\nimport {\r\n    ENGLISH_SKILL_NAMES,\r\n    FABRICATOR_OPTIONS,\r\n    BASE_MULTIPLIER_OPTION,\r\n    LOWEST_MULTIPLIER_OPTION,\r\n    HIGHEST_MULTIPLIER_OPTION,\r\n    LOCATIONAL_OUTPOST_OPTIONS,\r\n    OUTPOST_OPTIONS,\r\n    LOCATION_MERCHANTS,\r\n    SHOP_NAMES,\r\n} from '../globals'\r\n\r\nconst data = gameData.items\r\nconst rnd = price => Math.floor(price)\r\nconst compareItems = (a, b) => a.rating < b.rating ? 1 : a.rating === b.rating ? 0 : -1\r\n\r\nconst InlineItem = props => {\r\n    return <div>\r\n        <ClickableItem\r\n            item={props.item}\r\n            identifier={props.identifier}\r\n            rating={props.additionalRating}\r\n        /><b>{(props.prefix || \"\") + props.rating + (props.postfix || \"\")}</b></div>\r\n}\r\n\r\nconst RatedItems = props => {\r\n    return props.items.length ? <>\r\n        <h5 className=\"mb-0\">{props.header}</h5><small>{props.explanation}</small>\r\n        <div className=\"py-4\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {props.items.sort(compareItems).map(\r\n                obj => <InlineItem key={obj.identifier} identifier={obj.identifier} item={obj.item} rating={obj.rating} postfix={props.postfix} />\r\n            )}\r\n        </div></> : <></>\r\n}\r\n\r\nconst calculateItem = (item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty) => {\r\n\r\n    const getOutpostData = (item, location) => {\r\n        const relatedMerchants = LOCATION_MERCHANTS[location]\r\n        const modifiedData = item.price?.modified\r\n        if (modifiedData !== undefined) {\r\n            return Object.entries(modifiedData).reduce(\r\n                (result, [merchant, {multiplier, sold, min_amt }]) => {\r\n                    return relatedMerchants.has(merchant) ? {\r\n                        min_amt: result.min_amt + (min_amt || 0),\r\n                        min_multiplier: (\r\n                            multiplier < result.min_multiplier\r\n                        ) ? multiplier : result.min_multiplier,\r\n                        max_multiplier: (\r\n                            multiplier > result.max_multiplier\r\n                        ) ? multiplier : result.max_multiplier,\r\n                        min_buy_multiplier: (\r\n                            result.sold === \"true\" && (result.min_buy_multiplier === undefined || multiplier < result.min_buy_multiplier)\r\n                        ) ? multiplier : result.min_buy_multiplier,\r\n                        sold: result.sold === \"true\" ? result.sold : sold\r\n                    } : result\r\n                }, { min_amt: 0, min_multiplier: 1, max_multiplier: 1 })\r\n        }\r\n    }\r\n\r\n    const getOutpostMultiplier = (item, location) => {\r\n        const price_data = item.price\r\n        if (price_data === undefined) return { min: 1, max: 1 }\r\n\r\n        if (location === LOWEST_MULTIPLIER_OPTION.value) return { min: price_data.min_multiplier, max: price_data.min_multiplier }\r\n        else if (location === HIGHEST_MULTIPLIER_OPTION.value) return { min: price_data.max_multiplier, max: price_data.max_multiplier }\r\n        else {\r\n            const outpostData = getOutpostData(item, location)\r\n            return {\r\n                min: outpostData?.min_multiplier,\r\n                max: outpostData?.max_multiplier,\r\n                buyMin: outpostData?.min_buy_multiplier || 1,\r\n            } || { min: 1, max: 1}\r\n        }\r\n    }\r\n\r\n    const getSellingSnopNames = (item) => {\r\n        if (item.price?.modified === undefined) return []\r\n        const relatedMerchants = LOCATION_MERCHANTS[outpost]\r\n        return Object.entries(item.price.modified).reduce(\r\n            (result, [merchant, { sold }]) => [...result, ...(\r\n                (sold === \"true\" && relatedMerchants.has(merchant)) ? [SHOP_NAMES[merchant]] : []\r\n            )], []\r\n        )\r\n    }\r\n\r\n    const hasPriceData = item => item.price?.default !== undefined\r\n\r\n    const isSoldThere = (item, location) => {\r\n        if (location === undefined) location = outpost\r\n        if (\r\n            location === BASE_MULTIPLIER_OPTION.value ||\r\n            location === LOWEST_MULTIPLIER_OPTION.value ||\r\n            location === HIGHEST_MULTIPLIER_OPTION.value\r\n        ) {\r\n            return item.price?.soldsomewhere === \"true\"\r\n        }\r\n        const outpostData = getOutpostData(item, location)\r\n        return hasPriceData(item) && item.price.minleveldifficulty <= leveldifficulty && (\r\n            outpostData && (outpostData.sold === \"true\")\r\n        )\r\n    }\r\n\r\n    const getBuyingPrice = (item, location) => {\r\n        if (isSoldThere(item, location)) return Math.max(rnd(\r\n            rnd(\r\n                item.price.default * getOutpostMultiplier(item, location || outpost).buyMin\r\n            ) * (location === undefined ? (1 - reputation * .001) : 1)\r\n        ), 1)\r\n    }\r\n\r\n    const getSellingPrice = (item, location) => {\r\n        if (hasPriceData(item)) return Math.max(rnd(\r\n            rnd(\r\n                rnd(item.price.default * getOutpostMultiplier(item, location || destoutpost).max) * .8\r\n            ) * (location === undefined ? sellmultiplier * (1 + destreputation * .001) : 1)\r\n        ), 1)\r\n    }\r\n\r\n    const getFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getBuyingPrice(data[id])) || Infinity) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getDeconstructionProfit = (item, buyingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (buyingprice || Infinity)\r\n\r\n    const getSellFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getSellDeconstructionProfit = (item, sellingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (sellingprice || 0)\r\n\r\n    const getRealFabricationTime = item => {\r\n        if (item.skills === undefined) return item.fabricate_time / 2\r\n        const degreeOfSuccess = (Object.entries(item.skills).reduce(\r\n            (sum, [skill, level]) =>\r\n                sum + skills[skill] - level, 0\r\n        ) / Object.keys(item.skills).length + 100) / 200\r\n        const t = degreeOfSuccess < .5 ? degreeOfSuccess * degreeOfSuccess : degreeOfSuccess * 2\r\n        return item.fabricate_time / (Math.pow(1.05, upgrades.fabricator)) / Math.max(Math.min(t, 2), .01)\r\n    }\r\n\r\n    const getRealDeconstructionTime = item => item.deconstruct_time / (Math.pow(1.05, upgrades.deconstructor))\r\n\r\n    if (item === undefined) {\r\n        const [trade, fabr, sellFabr, dec, sellDec] = [[], [], [], [], []]\r\n\r\n        const usefulMats = {}\r\n\r\n        const updateUsefulMaterials = ingredients => {\r\n            for (const ingredientId in ingredients) {\r\n                let ingredient = data[ingredientId]\r\n                if (getBuyingPrice(ingredient)) {\r\n                    if (ingredientId in usefulMats) {\r\n                        usefulMats[ingredientId].rating += 1\r\n                    } else {\r\n                        usefulMats[ingredientId] = { item: ingredient, identifier: ingredientId, rating: 1 }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [identifier, item] of Object.entries(data)) {\r\n\r\n            let buyingprice = getBuyingPrice(item)\r\n            let sellingprice = getSellingPrice(item)\r\n            let tradeProfit = sellingprice - buyingprice\r\n\r\n            if (tradeProfit > 0) {\r\n                trade.push({ item, identifier, rating: Math.round(1000 * tradeProfit / buyingprice) / 10 })\r\n            }\r\n\r\n            let fabrProfit = item.fabricate ? Math.round(100 *\r\n                getFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (fabricatortypes.value === \"all\" || (item.fabricator_types || \"\").split(\",\").includes(fabricatortypes.value)) {\r\n                if (fabrProfit > 0) {\r\n                    fabr.push({ item, identifier, rating: fabrProfit })\r\n                    updateUsefulMaterials(item.fabricate)\r\n\r\n                } else if (fabrProfit === -Infinity) {\r\n                    fabrProfit = item.fabricate ? Math.round(100 *\r\n                        getSellFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n                    ) / 100 : 0\r\n                    if (fabrProfit > 0) {\r\n                        sellFabr.push({ item, identifier, rating: fabrProfit })\r\n                        updateUsefulMaterials(item.fabricate)\r\n                    }\r\n                }\r\n            }\r\n\r\n            let decProfit = item.deconstruct ? Math.round(100 *\r\n                getDeconstructionProfit(item, buyingprice) / getRealDeconstructionTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (decProfit > 0) {\r\n                dec.push({ item, identifier, rating: decProfit })\r\n\r\n            } else if (decProfit === -Infinity) {\r\n                decProfit = item.deconstruct ? Math.round(100 *\r\n                    getSellDeconstructionProfit(item, sellingprice) / getRealDeconstructionTime(item)\r\n                ) / 100 : 0\r\n                if (decProfit > 0) {\r\n                    sellDec.push({ item, identifier, rating: decProfit })\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            homepageResults: <>\r\n                <RatedItems\r\n                    items={trade}\r\n                    postfix=\"%\"\r\n                    header=\"Trading investment returns\"\r\n                    explanation=\"(with no crafting involved)\" />\r\n                <RatedItems\r\n                    items={Object.values(usefulMats)}\r\n                    header=\"Useful crafting materials\"\r\n                    explanation=\"(involved in N profitable recipes and sold here)\" />\r\n                <RatedItems\r\n                    items={fabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Fabrication profits per fabrication time\"\r\n                    explanation=\"(departure sells ingredients)\" />\r\n                <RatedItems\r\n                    items={sellFabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Other fabrication profits\"\r\n                    explanation=\"(you have to acquire the ingredients through means other than trading)\" />\r\n                <RatedItems\r\n                    items={dec}\r\n                    postfix=\"/s\"\r\n                    header=\"Deconstruction profits per deconstruction time\"\r\n                    explanation=\"(departure sells those items)\" />\r\n                <RatedItems\r\n                    items={sellDec}\r\n                    postfix=\"/s\"\r\n                    header=\"Other deconstruction profits\"\r\n                    explanation=\"(you have to acquire the item through means other than trading)\" />\r\n            </>\r\n        }\r\n    }\r\n\r\n    const buyingprice = getBuyingPrice(item)\r\n    const sellingprice = getSellingPrice(item)\r\n\r\n    const getColorCodedUsedIn = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.used_in || {}).map(\r\n                ([usedInId, amount]) =>\r\n                ([usedInId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellFabricationProfit(\r\n                        data[usedInId], getSellingPrice(data[usedInId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const getColorCodedScrappedFrom = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.scrapped_from || {}).map(\r\n                ([scrappedFromId, amount]) =>\r\n                ([scrappedFromId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellDeconstructionProfit(\r\n                        data[scrappedFromId], getSellingPrice(data[scrappedFromId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const baseprice = item.price?.default\r\n    const pricesData = LOCATIONAL_OUTPOST_OPTIONS.reduce((result, outpostType) => {\r\n        result[OUTPOST_OPTIONS[outpostType]?.label] = [\r\n            getBuyingPrice(item, outpostType),\r\n            getSellingPrice(item, outpostType),\r\n            getRGB((baseprice - getBuyingPrice(item, outpostType)) / baseprice * 600),\r\n            getRGB((getSellingPrice(item, outpostType) - baseprice) / baseprice * 600),\r\n        ]\r\n        return result\r\n    }, {})\r\n\r\n    return {\r\n        buyingprice, sellingprice, pricesData,\r\n        fabricateTime: (Math.round(100 * getRealFabricationTime(item)) / 100) || undefined,\r\n        fabricationBatch: item.fabrication_batch || 1.,\r\n        deconstructTime: (Math.round(100 * getRealDeconstructionTime(item)) / 100) || undefined,\r\n        randomDeconstruction: item.random_deconstruction ? \"yes\" : undefined,\r\n        minAmt: getOutpostData(item, outpost)?.min_amt,\r\n        whereSold: getSellingSnopNames(item).join(\", \") || undefined,\r\n        tradingProfit: (sellingprice === undefined || buyingprice === undefined) ?\r\n            undefined : sellingprice - buyingprice,\r\n        fabricationProfit: getFabricationProfit(item, sellingprice),\r\n        deconstructionProfit: getDeconstructionProfit(item, buyingprice),\r\n        sellFabricationProfit: getSellFabricationProfit(item, sellingprice),\r\n        sellDeconstructionProfit: getSellDeconstructionProfit(item, sellingprice),\r\n        outpostmultiplier: getOutpostMultiplier(item, outpost),\r\n        destoutpostmultiplier: getOutpostMultiplier(item, destoutpost),\r\n        usedIn: getColorCodedUsedIn(),\r\n        scrappedFrom: getColorCodedScrappedFrom(),\r\n        minleveldifficulty: item.price?.minleveldifficulty || undefined,\r\n    }\r\n}\r\n\r\nconst ProfitText = props => {\r\n    if (props.profit === -Infinity) return <small>Source item(s) cannot be bought at departure</small>\r\n    const profitable = props.profit >= 0\r\n    return <span>{profitable ? \"Profit\" : \"Loss\"}: <b style={{\r\n        color: profitable ? \"green\" : \"red\"\r\n    }}>{Math.round((profitable ? props.profit : -props.profit) * 100) / 100}</b> <span className=\"text-muted\">\r\n        ({Math.round(props.profit/props.time*100)/100}/s) {props.children}\r\n    </span></span>\r\n}\r\n\r\nconst BlockWithItems = props => {\r\n    return Object.keys(props.itemsObj || {}).length ? (\r\n        <div className=\"mt-2\">\r\n            <h5>{props.mainText}</h5>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n                {Object.entries(props.itemsObj).map(\r\n                    ([identifier, value]) =>\r\n                        <InlineItem\r\n                            key={identifier}\r\n                            item={data[identifier]}\r\n                            identifier={identifier}\r\n                            rating={props.colorCoded ? value.amount : value}\r\n                            additionalRating={props.colorCoded && value.additionalRating}\r\n                            prefix=\"x \" />\r\n                )}\r\n            </div>\r\n            {props.children}\r\n        </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const destoutpost = validateOutpost(getParams.destoutpost).value\r\n    const destreputation = validateReputation(getParams.destreputation)\r\n    const fabricatortypes = validateFabricator(getParams.fabricator)\r\n    const skills = {\r\n        helm: validateSkill(getParams.helm),\r\n        weapons: validateSkill(getParams.weapons),\r\n        mechanical: validateSkill(getParams.mechanical),\r\n        electrical: validateSkill(getParams.electrical),\r\n        medical: validateSkill(getParams.medical),\r\n    }\r\n    const upgrades = {\r\n        fabricator: validateUpgrades(getParams.fabrlvl),\r\n        deconstructor: validateUpgrades(getParams.declvl),\r\n    }\r\n    const sellmultiplier = validateStoreBalance(getParams.balance).numeric\r\n    const leveldifficulty = validateDifficultyLevel(getParams.difficulty)\r\n\r\n    const calcData = calculateItem(item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty)\r\n\r\n    if (item === undefined) return {\r\n        noItem: true,\r\n        ...calcData,\r\n    }\r\n    return {\r\n        displayName: item.display_name,\r\n        fabricatorTypes: item.fabricator_types?.split(\",\").map(name => FABRICATOR_OPTIONS[name]?.label || name).join(\", \"),\r\n        skills: Object.entries(item.skills || {}).map(\r\n            ([k, v], i) => <div key={i} style={{marginBottom: 5}}>{`${ENGLISH_SKILL_NAMES[k] || k}: ${v}`}</div>\r\n        ),\r\n        ...calcData,\r\n        fabricationBlock: <BlockWithItems itemsObj={item.fabricate} mainText=\"Fabricated from\">\r\n            <ProfitText profit={calcData.fabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellFabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you find the ingredients en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        deconstuctionBlock: <BlockWithItems itemsObj={item.deconstruct} mainText=\"Deconstructed to\">\r\n            <ProfitText profit={calcData.deconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellDeconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you find the item en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        usedinBlock: <BlockWithItems itemsObj={calcData.usedIn} mainText=\"Used in\" colorCoded />,\r\n        scrappedfromBlock: <BlockWithItems itemsObj={calcData.scrappedFrom} mainText=\"Scrapped from\" colorCoded />,\r\n        refilledWithBlock: <BlockWithItems itemsObj={item.refilled_with} mainText=\"Refilled with\">\r\n            <small className=\"text-muted\">(deconstruction may not yield resources</small><br />\r\n            <small className=\"text-muted\">if an item is partially depleted)</small>\r\n        </BlockWithItems>,\r\n        image: <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />,\r\n        requiresrecipe: item.requiresrecipe && \"yes\",\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table, Tabs, Tab } from 'react-bootstrap'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst TableData = props => {\r\n    return props.value !== props.missingValue ?\r\n        <tr>\r\n            <td style={{minWidth: 80}}>{props.children}</td>\r\n            <td style={{minWidth: 80}}>{props.value}</td>\r\n        </tr> : <></>\r\n}\r\n\r\nconst PriceTableData = ({outpost, prices, baseprices}) => {\r\n    const [buyingprice, sellingprice, buycolor, sellcolor] = prices\r\n    return <tr>\r\n        <td style={{minWidth: 80, padding: 5}}>{outpost}</td>\r\n        <td style={{minWidth: 40, padding: 5, color: buycolor}}>{buyingprice}</td>\r\n        <td style={{minWidth: 40, padding: 5, color: sellcolor}}>{sellingprice}</td>\r\n    </tr>\r\n}\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <div style={{overflowWrap: \"anywhere\"}}>\r\n        <Table striped bordered hover variant=\"dark\" style={{ margin: 0 }}>\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan=\"2\">\r\n                        <div style={{\r\n                            border: \"1.5px solid #454d55\",\r\n                            borderRadius: \"10px\",\r\n                            display: \"inline-block\",\r\n                            padding: \"9px 8px 10px 10px\",\r\n                        }}>{props.calculator.image}</div>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n        </Table>\r\n        <Tabs\r\n            defaultActiveKey=\"main-tab\"\r\n            className=\"table-dark table-striped\"\r\n            style={{ border: 0 }}\r\n            fill\r\n        >\r\n            <Tab eventKey=\"main-tab\" title=\"Main\" style={{ backgroundColor: \"black\" }}>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <tbody>\r\n                        <TableData value={props.calculator.requiresrecipe}>Requires recipe</TableData>\r\n                        <TableData value={props.calculator.tradingProfit}>Trading margin</TableData>\r\n                        <TableData value={props.calculator.buyingprice}>Buying price (best)</TableData>\r\n                        <TableData value={props.calculator.sellingprice}>Selling price (best)</TableData>\r\n                        <TableData value={props.calculator.minAmt}>Minimal amount sold at departure</TableData>\r\n                        <TableData value={props.calculator.whereSold}>Sold at</TableData>\r\n                        <TableData\r\n                            value={props.calculator.outpostmultiplier.min === props.calculator.outpostmultiplier.max\r\n                                ? props.calculator.outpostmultiplier.min :\r\n                                `${props.calculator.outpostmultiplier.min}-${props.calculator.outpostmultiplier.max}`}\r\n                            missingValue={1}\r\n                        >Departure multiplier</TableData>\r\n                        <TableData\r\n                            value={props.calculator.destoutpostmultiplier.min === props.calculator.destoutpostmultiplier.max\r\n                                ? props.calculator.destoutpostmultiplier.min :\r\n                                `${props.calculator.destoutpostmultiplier.min}-${props.calculator.destoutpostmultiplier.max}`}\r\n                            missingValue={1}\r\n                        >Destination multiplier</TableData>\r\n                    </tbody>\r\n                </Table>\r\n            </Tab>\r\n            <Tab eventKey=\"crafting-tab\" title=\"Crafting\">\r\n\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <tbody>\r\n                        <TableData value={props.calculator.fabricateTime}>Fabrication time</TableData>\r\n                        <TableData value={props.calculator.fabricatorTypes}>Fabricator type(s)</TableData>\r\n                        <TableData value={props.calculator.fabricationBatch} missingValue={1.}>Fabrication batch</TableData>\r\n                        <TableData value={props.calculator.deconstructTime}>Deconstruction time</TableData>\r\n                        <TableData value={props.calculator.randomDeconstruction}>Deconstruction is random</TableData>\r\n                        <TableData value={props.calculator.skills?.length ? props.calculator.skills : undefined}>Fabrication skills</TableData>\r\n                        <TableData value={props.calculator.minleveldifficulty}>Minimum difficulty level</TableData>\r\n                    </tbody>\r\n                </Table>\r\n            </Tab>\r\n\r\n            <Tab eventKey=\"prices-tab\" title=\"Prices (best)\">\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <tbody>\r\n                        <PriceTableData\r\n                            key={\"head\"}\r\n                            prices={[\"Buy\", \"Sell\"]}\r\n                        />\r\n                        {Object.entries(props.calculator.pricesData).map(\r\n                            entry => <PriceTableData\r\n                                key={entry[0]}\r\n                                outpost={entry[0]}\r\n                                prices={entry[1]}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </Tab>\r\n        </Tabs>\r\n    </div>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.noItem) return calculatorResults.homepageResults\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n                {calculatorResults.refilledWithBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"outpost\"\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ [getParamName]: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams[getParamName])}\r\n    styles={generateStyles({flexGrow: 1, minWidth: 120, flexBasis: 120}, {padding: 8})}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport { useRef } from \"react\"\r\n\r\nexport default function ReputationInput(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n  const inputRef = useRef()\r\n\r\n  const getParamName = props.getParamName || \"reputation\"\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ [getParamName]: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  const onWheel = () => {\r\n    inputRef.current.blur()\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    minWidth: 120,\r\n    flexGrow: 1,\r\n    flexBasis: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams[getParamName]) || \"\"}\r\n      step={5}\r\n      ref={inputRef}\r\n      onWheel={onWheel}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand className=\"mt-3\">\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { useState, useContext } from 'react'\r\nimport { Accordion, Card, Button, AccordionContext, useAccordionToggle } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport {\r\n    DEFAULT_SKILL_LEVEL,\r\n    FABRICATOR_OPTIONS,\r\n    DEFAULT_FABRICATOR_OPTION,\r\n    ENGLISH_SKILL_NAMES,\r\n    DEFAULT_UPGRADE_LEVELS,\r\n    STORE_BALANCE_MULTIPLIERS,\r\n    DEFAULT_STORE_BALANCE_MULTIPLIER,\r\n    DEFAULT_DIFFICULTY,\r\n} from '../globals'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { useRef } from \"react\"\r\n\r\nconst OutpostSwapper = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            outpost: getParams.destoutpost,\r\n            destoutpost: getParams.outpost,\r\n            reputation: getParams.destreputation,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Swap outposts\r\n    </Button>\r\n}\r\n\r\nconst OutpostRepeater = () => {\r\n    \r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            destoutpost: getParams.outpost,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Same destination\r\n    </Button>\r\n\r\n}\r\n\r\nconst SellingPriceMultPicker = props => {\r\n\r\n        const [getParams, pushGetParams] = useGetParams()\r\n    \r\n        const handleChange = e => {\r\n            pushGetParams({ balance: e.value === DEFAULT_STORE_BALANCE_MULTIPLIER.value ? undefined : e.value })\r\n        }\r\n    \r\n        return <Select\r\n            value={validateStoreBalance(getParams.balance)}\r\n            styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n            theme={customThemeOverrides}\r\n            options={Object.values(STORE_BALANCE_MULTIPLIERS)}\r\n            isSearchable={false}\r\n            onChange={handleChange} />\r\n    }\r\n\r\nconst SkillPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const [previousValue, changeValue] = useState(validateSkill(getParams[props.skill]))\r\n    const inputRef = useRef()\r\n\r\n    const getParamName = props.skill\r\n\r\n    const updateSkill = e => {\r\n        if (parseInt(previousValue) === DEFAULT_SKILL_LEVEL && (e.target.value === \"5\" || e.target.value === \"-5\")) {\r\n            e.target.value = DEFAULT_SKILL_LEVEL + parseInt(e.target.value)\r\n        }\r\n        e.target.value = validateSkill(e.target.value)\r\n        changeValue(e.target.value)\r\n        pushGetParams({ [props.skill]: parseInt(e.target.value) === DEFAULT_SKILL_LEVEL ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        position: 'relative',\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            step={5}\r\n            onInput={updateSkill}\r\n            placeholder={ENGLISH_SKILL_NAMES[props.skill] || props.skill}\r\n            value={validateSkill(getParams[getParamName]) === DEFAULT_SKILL_LEVEL ? \"\" : getParams[getParamName]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        />\r\n        {\r\n            validateSkill(getParams[getParamName]) !== DEFAULT_SKILL_LEVEL ? <span style={{\r\n                position: \"absolute\",\r\n                top: 7,\r\n                left: 35,\r\n            }}>{ENGLISH_SKILL_NAMES[props.skill] || props.skill}</span> : <></>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst UpgradesPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const updateUpgrades = e => {\r\n        e.target.value = validateUpgrades(e.target.value)\r\n        pushGetParams({ [props.getparam]: e.target.value === \"0\" ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={updateUpgrades}\r\n            placeholder={props.label}\r\n            value={validateUpgrades(getParams[props.getparam]) === DEFAULT_UPGRADE_LEVELS ? \"\" : getParams[props.getparam]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst FabricatorPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleChange = e => {\r\n        pushGetParams({ fabricator: e.value === DEFAULT_FABRICATOR_OPTION.value ? undefined : e.value })\r\n    }\r\n\r\n    return <Select\r\n        value={validateFabricator(getParams.fabricator)}\r\n        styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n        theme={customThemeOverrides}\r\n        options={Object.values(FABRICATOR_OPTIONS)}\r\n        isSearchable={false}\r\n        onChange={handleChange} />\r\n}\r\n\r\nconst LevelDifficultyPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const handleChange = e => {\r\n        e.target.value = validateDifficultyLevel(e.target.value)\r\n        pushGetParams({ difficulty: e.target.value === DEFAULT_DIFFICULTY ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            step={5}\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={handleChange}\r\n            placeholder={'Difficulty %'}\r\n            value={validateDifficultyLevel(getParams.difficulty) === DEFAULT_DIFFICULTY ? \"\" : validateDifficultyLevel(getParams.difficulty)}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\n\r\nexport default function AdditionalFilters(props) {\r\n\r\n    function ShowOptionsToggle({ children, eventKey, callback }) {\r\n        const currentEventKey = useContext(AccordionContext);\r\n\r\n        const decoratedOnClick = useAccordionToggle(\r\n            eventKey,\r\n            () => callback && callback(eventKey),\r\n        );\r\n\r\n        const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n        return (\r\n            <Button\r\n                style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n                variant=\"dark\"\r\n                onClick={decoratedOnClick}\r\n            >\r\n                {isCurrentEventKey ? \"Hide options\" : \"Additional options\"}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    return <Accordion>\r\n        <Card>\r\n            <Card.Header style={{ padding: 5 }}>\r\n                <ShowOptionsToggle eventKey=\"additional-filters\" />\r\n                <OutpostSwapper />\r\n                <OutpostRepeater />\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"additional-filters\">\r\n                <Card.Body>\r\n                    <b>Sell price multiplier</b>\r\n                    <SellingPriceMultPicker />\r\n                    <b>Allowed fabricators</b>\r\n                    <FabricatorPicker />\r\n                    <b>Location difficulty level (certain items are not sold at lower levels)</b>\r\n                    <LevelDifficultyPicker />\r\n                    <b>Skills (default is {DEFAULT_SKILL_LEVEL})</b>\r\n                    <SkillPicker skill=\"helm\" />\r\n                    <SkillPicker skill=\"weapons\" />\r\n                    <SkillPicker skill=\"mechanical\" />\r\n                    <SkillPicker skill=\"electrical\" />\r\n                    <SkillPicker skill=\"medical\" />\r\n                    <b>Fabrication speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"fabrlvl\" />\r\n                    <b>Deconstruction speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"declvl\" />\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    </Accordion>\r\n}","import { Container, Row, Col, Navbar } from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo, AdditionalFilters } from './BarotraumaCalc'\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" defaultExpanded className=\"pb-4\" >\r\n        <BrandNavLogo />\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mt-3\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <SearchBar />\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Departure\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect />\r\n              <ReputationInput />\r\n            </div></div>\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Destination\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect getParamName=\"destoutpost\" />\r\n              <ReputationInput getParamName=\"destreputation\" />\r\n            </div></div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <AdditionalFilters />\r\n      <Container className=\"pt-4 bg-white\">\r\n        <Row>\r\n          <Col>\r\n            <Route path=\"/\" children={<PageContents />}></Route>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer\">\r\n          <Col className=\"text-muted py-4\"><hr />I do not claim any rights to images and data used.\r\n            This is simply a convenience tool for the game called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.17.12.0).<br />\r\n            If you have found a bug or have a suggestion for me, you can <a href=\"https://github.com/lifearoundfreaks/barotrauma-calc/issues/new\">start an issue</a>.</Col>\r\n        </Row>\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <div className=\"App\"><App/></div>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}