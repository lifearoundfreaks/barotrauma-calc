{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","store.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/Components/DefaultPage.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","App.js","index.js"],"names":["rawItems","initialState","createStore","state","action","type","aggregatedOptions","gameData","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","TEXTURE_DIMENTIONS","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","offsetMargin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","customProvided","option","provided","padding","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexGrow","marginTop","maxMenuHeight","DefaultPage","children","className","OUTPOST_OPTIONS","outpost","city","research","military","mine","DEFAULT_OUTPOST_OPTION","validateReputation","min","parseInt","validateOutpost","getRGB","positive","negative","ClickableItem","onClick","cursor","backgroundColor","rating","item","rnd","price","floor","compareItems","a","b","InlineItem","additionalRating","prefix","postfix","RatedItems","items","header","explanation","display","alignItems","justifyContent","flexWrap","sort","obj","calculateItem","reputation","destoutpost","destreputation","getOutpostData","modified","getOutpostMultiplier","multiplier","hasPriceData","default","getBuyingPrice","outpostData","soldeverywhere","sold","isSoldThere","getSellingPrice","getFabricationProfit","sellingprice","fabricate","reduce","sum","id","amt","Infinity","getDeconstructionProfit","buyingprice","deconstruct","getSellFabricationProfit","getSellDeconstructionProfit","trade","fabr","sellFabr","dec","sellDec","usefulMats","updateUsefulMaterials","ingredients","ingredientId","ingredient","tradeProfit","round","fabrProfit","fabricate_time","skills","decProfit","deconstruct_time","homepageResults","values","minAmt","min_amt","tradingProfit","fabricationProfit","deconstructionProfit","sellFabricationProfit","sellDeconstructionProfit","outpostmultiplier","destoutpostmultiplier","usedIn","used_in","usedInId","amount","scrappedFrom","scrapped_from","scrappedFromId","ProfitText","profit","profitable","color","BlockWithItems","keys","itemsObj","mainText","colorCoded","TableData","missingValue","InfoTable","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","fabricateTime","fabricatorTypes","deconstructTime","PageContents","calculatorResults","getParams","calcData","noItem","displayName","fabricator_types","k","v","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","useCalculator","Row","Col","md","OutpostSelect","getParamName","minWidth","flexBasis","isSearchable","ReputationInput","paddingLeft","paddingTop","paddingBottom","onInput","target","BrandNavLogo","returnHomeGetParams","Navbar","Brand","to","textDecoration","App","basename","bg","expand","defaultExpanded","Toggle","aria-controls","Collapse","flexDirection","Container","path","href","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4d8a0ae9.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","import { createStore } from 'redux'\r\n\r\nexport const actionTypes = {}\r\n\r\nconst initialState = {}\r\n\r\nconst rootReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n          return state\r\n      }\r\n}\r\n\r\nexport default createStore(rootReducer)\r\n","const TEXTURE_DIMENTIONS = {\r\n    \"AlienArtifact1.png\": [512, 512],\r\n    \"AlienMaterials.png\": [512, 512],\r\n    \"AlienPowerCell.png\": [128, 128],\r\n    \"alientools.png\": [128, 128],\r\n    \"button.png\": [128, 128],\r\n    \"containers.png\": [1024, 1024],\r\n    \"CreatureLoot.png\": [512, 256],\r\n    \"GrowablePlants_Temp.png\": [1024, 1024],\r\n    \"InventoryIconAtlas.png\": [1024, 1024],\r\n    \"InventoryIconAtlas2.png\": [512, 512],\r\n    \"LootablePlants.png\": [256, 512],\r\n    \"Medicines.png\": [512, 512],\r\n    \"pets.png\": [512, 512],\r\n    \"weapons_new.png\": [512, 512],\r\n    \"OutfitIcons.png\": [512, 512],\r\n    \"MiscJobGear\": [1024, 1024],\r\n    \"headgears.png\": [512, 512],\r\n}\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, offsetMargin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...TEXTURE_DIMENTIONS[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                (offsetMargin || 0) + margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                (offsetMargin || 0) + margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (customProvided) => {\r\n    return {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n        }),\r\n        container: (provided, state) => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...customProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <Option {...props}>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n      offsetMargin={-18}\r\n    />\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexGrow: 1, marginTop: 34})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export default function DefaultPage(props) {\r\n    return <>\r\n        {props.children}\r\n        <h5 className=\"mb-4\">What I currently plan on adding</h5>\r\n        <p>At the moment it is assumed in the fabrication times that you have exactly the amount of skill needed. I need to add the ability to choose skill levels since they influence the crafting times.</p>\r\n        <p>Swap button for outosts.</p>\r\n        <p>Main page item filtration.</p>\r\n    </>\r\n}\r\n","export const DEFAULT_REPUTATION = 0\r\nexport const OUTPOST_OPTIONS = {\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    city: { value: 'city', label: 'Colony' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n}\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.outpost","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nconst getRGB = value => {\r\n    const positive = Math.min(value > 0 ? value : 0, 200)\r\n    const negative = Math.min(value < 0 ? -value : 0, 200)\r\n    return `rgb(${255-positive}, ${255-negative}, ${255-negative-positive})`\r\n}\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const pushGetParams = useGetParams()[1]\r\n    const size = 60 || props.size\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({ identifier: props.identifier })\r\n    }\r\n\r\n    return <div\r\n        onClick={handleClick}\r\n        style={{ cursor: 'pointer', height: size, backgroundColor: props.rating && getRGB(props.rating)}}\r\n    >\r\n        <TextureLoader\r\n            size={size}\r\n            file={props.item.texture}\r\n            sourcerect={props.item.sourcerect}\r\n            margin={0}\r\n        />\r\n    </div>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport data from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport ClickableItem from '../Components/ClickableItem'\r\n\r\nconst rnd = price => Math.floor(price)\r\nconst compareItems = (a, b) => a.rating < b.rating ? 1 : a.rating === b.rating ? 0 : -1\r\n\r\nconst InlineItem = props => {\r\n    return <div>\r\n        <ClickableItem\r\n            item={props.item}\r\n            identifier={props.identifier}\r\n            rating={props.additionalRating}\r\n        /><b>{(props.prefix || \"\") + props.rating + (props.postfix || \"\")}</b></div>\r\n}\r\n\r\nconst RatedItems = props => {\r\n    return props.items.length ? <>\r\n        <h5 className=\"mb-0\">{props.header}</h5><small>{props.explanation}</small>\r\n        <div className=\"py-4\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {props.items.sort(compareItems).map(\r\n                obj => <InlineItem key={obj.identifier} identifier={obj.identifier} item={obj.item} rating={obj.rating} postfix={props.postfix} />\r\n            )}\r\n        </div></> : <></>\r\n}\r\n\r\nconst calculateItem = (item, outpost, reputation, destoutpost, destreputation) => {\r\n\r\n    const getOutpostData = (item, location) => item.price?.modified?.[location]\r\n\r\n    const getOutpostMultiplier = (item, location) => getOutpostData(item, location)?.multiplier || 1\r\n\r\n    const hasPriceData = item => item.price?.default !== undefined\r\n\r\n    const isSoldThere = item => {\r\n        const outpostData = getOutpostData(item, outpost)\r\n        return hasPriceData(item) && (\r\n            (item.price.soldeverywhere !== \"false\") ||\r\n            (outpostData && (outpostData.sold !== \"false\"))\r\n        )\r\n    }\r\n\r\n    const getBuyingPrice = item => {\r\n        if (isSoldThere(item)) return Math.max(rnd(\r\n            rnd(\r\n                item.price.default * getOutpostMultiplier(item, outpost)\r\n            ) * (1 - reputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getSellingPrice = item => {\r\n        if (hasPriceData(item)) return Math.max(rnd(\r\n            rnd(\r\n                rnd(item.price.default * getOutpostMultiplier(item, destoutpost)) * .8\r\n            ) * (1 + destreputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getBuyingPrice(data[id])) || Infinity) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getDeconstructionProfit = (item, buyingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (buyingprice || Infinity)\r\n\r\n    const getSellFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getSellDeconstructionProfit = (item, sellingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (sellingprice || 0)\r\n\r\n    if (item === undefined) {\r\n        const [trade, fabr, sellFabr, dec, sellDec] = [[], [], [], [], []]\r\n\r\n        const usefulMats = {}\r\n\r\n        const updateUsefulMaterials = ingredients => {\r\n            for (const ingredientId in ingredients) {\r\n                let ingredient = data[ingredientId]\r\n                if (getBuyingPrice(ingredient)) {\r\n                    if (ingredientId in usefulMats) {\r\n                        usefulMats[ingredientId].rating += 1\r\n                    } else {\r\n                        usefulMats[ingredientId] = { item: ingredient, identifier: ingredientId, rating: 1 }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [identifier, item] of Object.entries(data)) {\r\n\r\n            let buyingprice = getBuyingPrice(item)\r\n            let sellingprice = getSellingPrice(item)\r\n            let tradeProfit = sellingprice - buyingprice\r\n\r\n            if (tradeProfit > 0) {\r\n                trade.push({ item, identifier, rating: Math.round(1000 * tradeProfit / buyingprice) / 10 })\r\n            }\r\n\r\n            let fabrProfit = item.fabricate ? Math.round(100 *\r\n                getFabricationProfit(item, sellingprice) / item.fabricate_time * (item.skills ? 1 : 2)\r\n            ) / 100 : 0\r\n\r\n            if (fabrProfit > 0) {\r\n                fabr.push({ item, identifier, rating: fabrProfit })\r\n                updateUsefulMaterials(item.fabricate)\r\n\r\n            } else if (fabrProfit === -Infinity) {\r\n                fabrProfit = item.fabricate ? Math.round(100 *\r\n                    getSellFabricationProfit(item, sellingprice) / item.fabricate_time * (item.skills ? 1 : 2)\r\n                ) / 100 : 0\r\n                if (fabrProfit > 0) {\r\n                    sellFabr.push({ item, identifier, rating: fabrProfit })\r\n                    updateUsefulMaterials(item.fabricate)\r\n                }\r\n            }\r\n\r\n            let decProfit = item.deconstruct ? Math.round(100 *\r\n                getDeconstructionProfit(item, buyingprice) / item.deconstruct_time\r\n            ) / 100 : 0\r\n\r\n            if (decProfit > 0) {\r\n                dec.push({ item, identifier, rating: decProfit })\r\n\r\n            } else if (decProfit === -Infinity) {\r\n                decProfit = item.deconstruct ? Math.round(100 *\r\n                    getSellDeconstructionProfit(item, sellingprice) / item.deconstruct_time\r\n                ) / 100 : 0\r\n                if (decProfit > 0) {\r\n                    sellDec.push({ item, identifier, rating: decProfit })\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            homepageResults: <>\r\n                <RatedItems\r\n                    items={trade}\r\n                    postfix=\"%\"\r\n                    header=\"Trading investment returns\"\r\n                    explanation=\"(with no crafting involved)\" />\r\n                <RatedItems\r\n                    items={Object.values(usefulMats)}\r\n                    header=\"Useful crafting materials\"\r\n                    explanation=\"(involved in N profitable recipes and sold here)\" />\r\n                <RatedItems\r\n                    items={fabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Fabrication profits per fabrication time\"\r\n                    explanation=\"(departure sells ingredients)\" />\r\n                <RatedItems\r\n                    items={sellFabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Other fabrication profits\"\r\n                    explanation=\"(you have to acquire the ingredients through means other than trading)\" />\r\n                <RatedItems\r\n                    items={dec}\r\n                    postfix=\"/s\"\r\n                    header=\"Deconstruction profits per deconstruction time\"\r\n                    explanation=\"(departure sells those items)\" />\r\n                <RatedItems\r\n                    items={sellDec}\r\n                    postfix=\"/s\"\r\n                    header=\"Other deconstruction profits\"\r\n                    explanation=\"(you have to acquire the item through means other than trading)\" />\r\n            </>\r\n        }\r\n    }\r\n\r\n    const buyingprice = getBuyingPrice(item)\r\n    const sellingprice = getSellingPrice(item)\r\n\r\n    const getColorCodedUsedIn = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.used_in || {}).map(\r\n                ([usedInId, amount]) =>\r\n                    ([usedInId, {\r\n                        amount: amount,\r\n                        additionalRating: getSellFabricationProfit(\r\n                            data[usedInId], getSellingPrice(data[usedInId])) * amount * 2\r\n                    }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const getColorCodedScrappedFrom = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.scrapped_from || {}).map(\r\n                ([scrappedFromId, amount]) =>\r\n                    ([scrappedFromId, {\r\n                        amount: amount,\r\n                        additionalRating: getSellDeconstructionProfit(\r\n                            data[scrappedFromId], getSellingPrice(data[scrappedFromId])) * amount * 2\r\n                    }])\r\n            )\r\n        )\r\n    }\r\n\r\n    return {\r\n        buyingprice, sellingprice,\r\n        minAmt: getOutpostData(item, outpost)?.min_amt,\r\n        tradingProfit: (sellingprice === undefined || buyingprice === undefined) ?\r\n            undefined : sellingprice - buyingprice,\r\n        fabricationProfit: getFabricationProfit(item, sellingprice),\r\n        deconstructionProfit: getDeconstructionProfit(item, buyingprice),\r\n        sellFabricationProfit: getSellFabricationProfit(item, sellingprice),\r\n        sellDeconstructionProfit: getSellDeconstructionProfit(item, sellingprice),\r\n        outpostmultiplier: getOutpostMultiplier(item, outpost),\r\n        destoutpostmultiplier: getOutpostMultiplier(item, destoutpost),\r\n        usedIn: getColorCodedUsedIn(),\r\n        scrappedFrom: getColorCodedScrappedFrom(),\r\n    }\r\n}\r\n\r\nconst ProfitText = props => {\r\n    if (props.profit === -Infinity) return <small>Source item(s) cannot be bought at departure</small>\r\n    const profitable = props.profit >= 0\r\n    return <span>{profitable ? \"Profit\" : \"Loss\"}: <b style={{\r\n        color: profitable ? \"green\" : \"red\"\r\n    }}>{profitable ? props.profit : -props.profit}</b> {props.children}</span>\r\n}\r\n\r\nconst BlockWithItems = props => {\r\n    return Object.keys(props.itemsObj || {}).length ? (\r\n        <div className=\"mt-2\">\r\n            <h5>{props.mainText}</h5>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n                {Object.entries(props.itemsObj).map(\r\n                    ([identifier, value]) =>\r\n                        <InlineItem\r\n                            key={identifier}\r\n                            item={data[identifier]}\r\n                            identifier={identifier}\r\n                            rating={props.colorCoded ? value.amount : value}\r\n                            additionalRating={props.colorCoded && value.additionalRating}\r\n                            prefix=\"x \" />\r\n                )}\r\n            </div>\r\n            {props.children}\r\n        </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const destoutpost = validateOutpost(getParams.destoutpost).value\r\n    const destreputation = validateReputation(getParams.destreputation)\r\n\r\n    const calcData = calculateItem(item, outpost, reputation, destoutpost, destreputation)\r\n\r\n    if (item === undefined) return {\r\n        noItem: true,\r\n        ...calcData,\r\n    }\r\n    return {\r\n        displayName: item.display_name,\r\n        fabricateTime: item.fabricate_time,\r\n        deconstructTime: item.deconstruct_time,\r\n        fabricatorTypes: item.fabricator_types?.split(\",\").join(\"; \"),\r\n        skills: Object.entries(item.skills || {}).map(([k, v]) => `${k}: ${v}`).join('; '),\r\n        ...calcData,\r\n        fabricationBlock: <BlockWithItems itemsObj={item.fabricate} mainText=\"Fabricated from\">\r\n            <ProfitText profit={calcData.fabricationProfit}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellFabricationProfit}><br />\r\n                <small className=\"text-muted\">(when you find the ingredients en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        deconstuctionBlock: <BlockWithItems itemsObj={item.deconstruct} mainText=\"Deconstructed to\">\r\n            <ProfitText profit={calcData.deconstructionProfit}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellDeconstructionProfit}><br />\r\n                <small className=\"text-muted\">(when you find the item en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        usedinBlock: <BlockWithItems itemsObj={calcData.usedIn} mainText=\"Used in\" colorCoded />,\r\n        scrappedfromBlock: <BlockWithItems itemsObj={calcData.scrappedFrom} mainText=\"Scrapped from\" colorCoded />,\r\n        image: <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />,\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport DefaultPage from './DefaultPage'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst TableData = props => {\r\n    return props.value !== props.missingValue ?\r\n        <tr>\r\n            <td>{props.children}</td>\r\n            <td>{props.value}</td>\r\n        </tr> : <></>\r\n}\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n            <tr>\r\n                <th colSpan=\"2\">\r\n                    <div style={{\r\n                        border: \"1.5px solid #454d55\",\r\n                        borderRadius: \"10px\",\r\n                        display: \"inline-block\",\r\n                        padding: \"9px 8px 10px 10px\",\r\n                    }}>{props.calculator.image}</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <TableData value={props.calculator.tradingProfit}>Trading margin</TableData>\r\n            <TableData value={props.calculator.buyingprice}>Buying price</TableData>\r\n            <TableData value={props.calculator.sellingprice}>Selling price</TableData>\r\n            <TableData value={props.calculator.minAmt}>Minimal amount sold at departure</TableData>\r\n            <TableData value={props.calculator.outpostmultiplier} missingValue={1}>Departure multiplier</TableData>\r\n            <TableData value={props.calculator.destoutpostmultiplier} missingValue={1}>Destination multiplier</TableData>\r\n            <TableData value={props.calculator.fabricateTime}>Raw fabrication time</TableData>\r\n            <TableData value={props.calculator.fabricatorTypes}>Fabricator type(s)</TableData>\r\n            <TableData value={props.calculator.deconstructTime}>Deconstruction time</TableData>\r\n            <TableData value={props.calculator.skills} missingValue={\"\"}>Fabrication skills</TableData>\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.noItem) return <DefaultPage>{calculatorResults.homepageResults}</DefaultPage>\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"outpost\"\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ [getParamName]: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams[getParamName])}\r\n    styles={generateStyles({flexGrow: 1, minWidth: 120, flexBasis: 120})}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\n\r\nexport default function ReputationInput(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"reputation\"\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ [getParamName]: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    minWidth: 120,\r\n    flexGrow: 1,\r\n    flexBasis: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams[getParamName]) || \"\"}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand className=\"mt-3\">\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { Container, Row, Col, Navbar } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo } from './BarotraumaCalc'\nimport './App.css';\n\nexport default function App() {\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" defaultExpanded className=\"pb-4\" >\n        <BrandNavLogo />\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mt-3\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <SearchBar />\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\n            <div><b style={{ color: \"white\" }}>\n              Departure\n          </b></div>\n            <div style={{ display: 'flex', flexGrow: 1 }}>\n              <OutpostSelect />\n              <ReputationInput />\n            </div></div>\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\n            <div><b style={{ color: \"white\" }}>\n              Destination\n          </b></div>\n            <div style={{ display: 'flex', flexGrow: 1 }}>\n              <OutpostSelect getParamName=\"destoutpost\" />\n              <ReputationInput getParamName=\"destreputation\" />\n            </div></div>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container className=\"pt-4 bg-white\">\n        <Row>\n          <Col>\n            <Route path=\"/\" children={<PageContents />}></Route>\n          </Col>\n        </Row>\n        <Row className=\"footer\">\n          <Col className=\"text-muted py-4\"><hr />I do not claim any rights to images and data used.\n            This is simply a convenience tool for the game called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.11.0.10).<br />\n            If you have found a bug or have a suggestion for me, you can <a href=\"https://github.com/lifearoundfreaks/barotrauma-calc/issues/new\">start an issue</a>.</Col>\n        </Row>\n      </Container>\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport initialState from './store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={initialState}>\n    <div className=\"App\"><App/></div>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}