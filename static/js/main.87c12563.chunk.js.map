{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","store.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Utils/validateFabricator.js","BarotraumaCalc/Utils/validateSkill.js","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","BarotraumaCalc/Components/AdditionalFilters.js","App.js","index.js"],"names":["rawItems","initialState","createStore","state","action","type","aggregatedOptions","gameData","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","TEXTURE_DIMENTIONS","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","offsetMargin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","customProvided","option","provided","padding","control","borderColor","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexGrow","marginTop","maxMenuHeight","OUTPOST_OPTIONS","outpost","city","research","military","mine","DEFAULT_OUTPOST_OPTION","DEFAULT_SKILL_LEVEL","FABRICATOR_OPTIONS","both","fabricator","medicalfabricator","DEFAULT_FABRICATOR_OPTION","validateReputation","min","parseInt","validateOutpost","validateFabricator","validateSkill","parsed","isNaN","getRGB","positive","negative","ClickableItem","onClick","cursor","backgroundColor","rating","item","rnd","price","floor","compareItems","a","b","InlineItem","additionalRating","prefix","postfix","RatedItems","items","className","header","explanation","display","alignItems","justifyContent","flexWrap","sort","obj","calculateItem","reputation","destoutpost","destreputation","fabricatortypes","skills","getOutpostData","modified","getOutpostMultiplier","multiplier","hasPriceData","default","getBuyingPrice","outpostData","soldeverywhere","sold","isSoldThere","getSellingPrice","getFabricationProfit","sellingprice","fabricate","reduce","sum","id","amt","Infinity","getDeconstructionProfit","buyingprice","deconstruct","getSellFabricationProfit","getSellDeconstructionProfit","getRealFabricationTime","fabricate_time","degreeOfSuccess","skill","level","keys","t","trade","fabr","sellFabr","dec","sellDec","usefulMats","updateUsefulMaterials","ingredients","ingredientId","ingredient","tradeProfit","round","fabrProfit","fabricator_types","decProfit","deconstruct_time","homepageResults","values","fabricateTime","minAmt","min_amt","tradingProfit","fabricationProfit","deconstructionProfit","sellFabricationProfit","sellDeconstructionProfit","outpostmultiplier","destoutpostmultiplier","usedIn","used_in","usedInId","amount","scrappedFrom","scrapped_from","scrappedFromId","ProfitText","profit","profitable","color","children","BlockWithItems","itemsObj","mainText","colorCoded","TableData","missingValue","InfoTable","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","fabricatorTypes","deconstructTime","PageContents","calculatorResults","getParams","helm","weapons","mechanical","electrical","medical","calcData","noItem","displayName","k","v","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","useCalculator","Row","Col","md","OutpostSelect","getParamName","minWidth","flexBasis","isSearchable","ReputationInput","inputRef","useRef","paddingLeft","paddingTop","paddingBottom","onInput","target","step","ref","onWheel","current","blur","BrandNavLogo","returnHomeGetParams","Navbar","Brand","to","textDecoration","OutpostSwapper","Button","SkillPicker","previousValue","changeValue","FabricatorPicker","AdditionalFilters","Accordion","Card","Header","Toggle","as","eventKey","Collapse","Body","App","basename","bg","expand","defaultExpanded","aria-controls","flexDirection","Container","path","href","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.87c12563.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","import { createStore } from 'redux'\r\n\r\nexport const actionTypes = {}\r\n\r\nconst initialState = {}\r\n\r\nconst rootReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n          return state\r\n      }\r\n}\r\n\r\nexport default createStore(rootReducer)\r\n","const TEXTURE_DIMENTIONS = {\r\n    \"AlienArtifact1.png\": [512, 512],\r\n    \"AlienMaterials.png\": [512, 512],\r\n    \"AlienPowerCell.png\": [128, 128],\r\n    \"alientools.png\": [128, 128],\r\n    \"button.png\": [128, 128],\r\n    \"containers.png\": [1024, 1024],\r\n    \"CreatureLoot.png\": [512, 256],\r\n    \"GrowablePlants_Temp.png\": [1024, 1024],\r\n    \"InventoryIconAtlas.png\": [1024, 1024],\r\n    \"InventoryIconAtlas2.png\": [512, 512],\r\n    \"LootablePlants.png\": [256, 512],\r\n    \"Medicines.png\": [512, 512],\r\n    \"pets.png\": [512, 512],\r\n    \"weapons_new.png\": [512, 512],\r\n    \"OutfitIcons.png\": [512, 512],\r\n    \"MiscJobGear\": [1024, 1024],\r\n    \"headgears.png\": [512, 512],\r\n}\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, offsetMargin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...TEXTURE_DIMENTIONS[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                (offsetMargin || 0) + margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                (offsetMargin || 0) + margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (customProvided) => {\r\n    return {\r\n        option: provided => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n        }),\r\n        control: provided => ({\r\n            ...provided,\r\n            borderColor: \"gray\",\r\n        }),\r\n        container: provided => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...customProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <Option {...props}>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n      offsetMargin={-18}\r\n    />\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexGrow: 1, marginTop: 34})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export const DEFAULT_REPUTATION = 0\r\nexport const OUTPOST_OPTIONS = {\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    city: { value: 'city', label: 'Colony' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n}\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.outpost\r\nexport const DEFAULT_SKILL_LEVEL = 20\r\nexport const FABRICATOR_OPTIONS = {\r\n    both: { value: 'both', label: 'Both' },\r\n    fabricator: { value: 'fabricator', label: 'Fabricator' },\r\n    medicalfabricator: { value: 'medicalfabricator', label: 'Medical fabricator' },\r\n}\r\nexport const DEFAULT_FABRICATOR_OPTION = FABRICATOR_OPTIONS.both\r\n","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import { FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION } from '../globals'\r\n\r\nexport default function validateFabricator (input) {\r\n    return FABRICATOR_OPTIONS[input] || DEFAULT_FABRICATOR_OPTION\r\n}\r\n","import { DEFAULT_SKILL_LEVEL } from '../globals'\r\n\r\nexport default function validateSkill (input) {\r\n    let parsed = parseInt(input)\r\n    return Math.max(Math.min(isNaN(parsed) ? DEFAULT_SKILL_LEVEL : parsed, 100), 0)\r\n}\r\n","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nconst getRGB = value => {\r\n    const positive = Math.min(value > 0 ? value : 0, 200)\r\n    const negative = Math.min(value < 0 ? -value : 0, 200)\r\n    return `rgb(${255-positive}, ${255-negative}, ${255-negative-positive})`\r\n}\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const pushGetParams = useGetParams()[1]\r\n    const size = 60 || props.size\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({ identifier: props.identifier })\r\n    }\r\n\r\n    return <div\r\n        onClick={handleClick}\r\n        style={{ cursor: 'pointer', height: size, backgroundColor: props.rating && getRGB(props.rating)}}\r\n    >\r\n        <TextureLoader\r\n            size={size}\r\n            file={props.item.texture}\r\n            sourcerect={props.item.sourcerect}\r\n            margin={0}\r\n        />\r\n    </div>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport data from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport ClickableItem from '../Components/ClickableItem'\r\n\r\nconst rnd = price => Math.floor(price)\r\nconst compareItems = (a, b) => a.rating < b.rating ? 1 : a.rating === b.rating ? 0 : -1\r\n\r\nconst InlineItem = props => {\r\n    return <div>\r\n        <ClickableItem\r\n            item={props.item}\r\n            identifier={props.identifier}\r\n            rating={props.additionalRating}\r\n        /><b>{(props.prefix || \"\") + props.rating + (props.postfix || \"\")}</b></div>\r\n}\r\n\r\nconst RatedItems = props => {\r\n    return props.items.length ? <>\r\n        <h5 className=\"mb-0\">{props.header}</h5><small>{props.explanation}</small>\r\n        <div className=\"py-4\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {props.items.sort(compareItems).map(\r\n                obj => <InlineItem key={obj.identifier} identifier={obj.identifier} item={obj.item} rating={obj.rating} postfix={props.postfix} />\r\n            )}\r\n        </div></> : <></>\r\n}\r\n\r\nconst calculateItem = (item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills) => {\r\n\r\n    const getOutpostData = (item, location) => item.price?.modified?.[location]\r\n\r\n    const getOutpostMultiplier = (item, location) => getOutpostData(item, location)?.multiplier || 1\r\n\r\n    const hasPriceData = item => item.price?.default !== undefined\r\n\r\n    const isSoldThere = item => {\r\n        const outpostData = getOutpostData(item, outpost)\r\n        return hasPriceData(item) && (\r\n            (item.price.soldeverywhere !== \"false\") ||\r\n            (outpostData && (outpostData.sold !== \"false\"))\r\n        )\r\n    }\r\n\r\n    const getBuyingPrice = item => {\r\n        if (isSoldThere(item)) return Math.max(rnd(\r\n            rnd(\r\n                item.price.default * getOutpostMultiplier(item, outpost)\r\n            ) * (1 - reputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getSellingPrice = item => {\r\n        if (hasPriceData(item)) return Math.max(rnd(\r\n            rnd(\r\n                rnd(item.price.default * getOutpostMultiplier(item, destoutpost)) * .8\r\n            ) * (1 + destreputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getBuyingPrice(data[id])) || Infinity) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getDeconstructionProfit = (item, buyingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (buyingprice || Infinity)\r\n\r\n    const getSellFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getSellDeconstructionProfit = (item, sellingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (sellingprice || 0)\r\n\r\n    const getRealFabricationTime = item => {\r\n        if (item.skills === undefined) return item.fabricate_time / 2\r\n        const degreeOfSuccess = (Object.entries(item.skills).reduce(\r\n            (sum, [skill, level]) =>\r\n            sum + skills[skill] - level, 0\r\n        ) / Object.keys(item.skills).length + 100) / 200\r\n        const t = degreeOfSuccess < .5 ? degreeOfSuccess * degreeOfSuccess : degreeOfSuccess * 2\r\n        return item.fabricate_time / Math.max(Math.min(t, 2), .01)\r\n    }\r\n\r\n    if (item === undefined) {\r\n        const [trade, fabr, sellFabr, dec, sellDec] = [[], [], [], [], []]\r\n\r\n        const usefulMats = {}\r\n\r\n        const updateUsefulMaterials = ingredients => {\r\n            for (const ingredientId in ingredients) {\r\n                let ingredient = data[ingredientId]\r\n                if (getBuyingPrice(ingredient)) {\r\n                    if (ingredientId in usefulMats) {\r\n                        usefulMats[ingredientId].rating += 1\r\n                    } else {\r\n                        usefulMats[ingredientId] = { item: ingredient, identifier: ingredientId, rating: 1 }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [identifier, item] of Object.entries(data)) {\r\n\r\n            let buyingprice = getBuyingPrice(item)\r\n            let sellingprice = getSellingPrice(item)\r\n            let tradeProfit = sellingprice - buyingprice\r\n\r\n            if (tradeProfit > 0) {\r\n                trade.push({ item, identifier, rating: Math.round(1000 * tradeProfit / buyingprice) / 10 })\r\n            }\r\n\r\n            let fabrProfit = item.fabricate ? Math.round(100 *\r\n                getFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (fabricatortypes.value === \"both\" || (item.fabricator_types || \"\").split(\",\").includes(fabricatortypes.value)) {\r\n                if (fabrProfit > 0) {\r\n                    fabr.push({ item, identifier, rating: fabrProfit })\r\n                    updateUsefulMaterials(item.fabricate)\r\n\r\n                } else if (fabrProfit === -Infinity) {\r\n                    fabrProfit = item.fabricate ? Math.round(100 *\r\n                        getSellFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n                    ) / 100 : 0\r\n                    if (fabrProfit > 0) {\r\n                        sellFabr.push({ item, identifier, rating: fabrProfit })\r\n                        updateUsefulMaterials(item.fabricate)\r\n                    }\r\n                }\r\n            }\r\n\r\n            let decProfit = item.deconstruct ? Math.round(100 *\r\n                getDeconstructionProfit(item, buyingprice) / item.deconstruct_time\r\n            ) / 100 : 0\r\n\r\n            if (decProfit > 0) {\r\n                dec.push({ item, identifier, rating: decProfit })\r\n\r\n            } else if (decProfit === -Infinity) {\r\n                decProfit = item.deconstruct ? Math.round(100 *\r\n                    getSellDeconstructionProfit(item, sellingprice) / item.deconstruct_time\r\n                ) / 100 : 0\r\n                if (decProfit > 0) {\r\n                    sellDec.push({ item, identifier, rating: decProfit })\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            homepageResults: <>\r\n                <RatedItems\r\n                    items={trade}\r\n                    postfix=\"%\"\r\n                    header=\"Trading investment returns\"\r\n                    explanation=\"(with no crafting involved)\" />\r\n                <RatedItems\r\n                    items={Object.values(usefulMats)}\r\n                    header=\"Useful crafting materials\"\r\n                    explanation=\"(involved in N profitable recipes and sold here)\" />\r\n                <RatedItems\r\n                    items={fabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Fabrication profits per fabrication time\"\r\n                    explanation=\"(departure sells ingredients)\" />\r\n                <RatedItems\r\n                    items={sellFabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Other fabrication profits\"\r\n                    explanation=\"(you have to acquire the ingredients through means other than trading)\" />\r\n                <RatedItems\r\n                    items={dec}\r\n                    postfix=\"/s\"\r\n                    header=\"Deconstruction profits per deconstruction time\"\r\n                    explanation=\"(departure sells those items)\" />\r\n                <RatedItems\r\n                    items={sellDec}\r\n                    postfix=\"/s\"\r\n                    header=\"Other deconstruction profits\"\r\n                    explanation=\"(you have to acquire the item through means other than trading)\" />\r\n            </>\r\n        }\r\n    }\r\n\r\n    const buyingprice = getBuyingPrice(item)\r\n    const sellingprice = getSellingPrice(item)\r\n\r\n    const getColorCodedUsedIn = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.used_in || {}).map(\r\n                ([usedInId, amount]) =>\r\n                ([usedInId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellFabricationProfit(\r\n                        data[usedInId], getSellingPrice(data[usedInId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const getColorCodedScrappedFrom = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.scrapped_from || {}).map(\r\n                ([scrappedFromId, amount]) =>\r\n                ([scrappedFromId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellDeconstructionProfit(\r\n                        data[scrappedFromId], getSellingPrice(data[scrappedFromId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    return {\r\n        buyingprice, sellingprice,\r\n        fabricateTime: Math.round(100 * getRealFabricationTime(item)) / 100,\r\n        minAmt: getOutpostData(item, outpost)?.min_amt,\r\n        tradingProfit: (sellingprice === undefined || buyingprice === undefined) ?\r\n            undefined : sellingprice - buyingprice,\r\n        fabricationProfit: getFabricationProfit(item, sellingprice),\r\n        deconstructionProfit: getDeconstructionProfit(item, buyingprice),\r\n        sellFabricationProfit: getSellFabricationProfit(item, sellingprice),\r\n        sellDeconstructionProfit: getSellDeconstructionProfit(item, sellingprice),\r\n        outpostmultiplier: getOutpostMultiplier(item, outpost),\r\n        destoutpostmultiplier: getOutpostMultiplier(item, destoutpost),\r\n        usedIn: getColorCodedUsedIn(),\r\n        scrappedFrom: getColorCodedScrappedFrom(),\r\n    }\r\n}\r\n\r\nconst ProfitText = props => {\r\n    if (props.profit === -Infinity) return <small>Source item(s) cannot be bought at departure</small>\r\n    const profitable = props.profit >= 0\r\n    return <span>{profitable ? \"Profit\" : \"Loss\"}: <b style={{\r\n        color: profitable ? \"green\" : \"red\"\r\n    }}>{profitable ? props.profit : -props.profit}</b> {props.children}</span>\r\n}\r\n\r\nconst BlockWithItems = props => {\r\n    return Object.keys(props.itemsObj || {}).length ? (\r\n        <div className=\"mt-2\">\r\n            <h5>{props.mainText}</h5>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n                {Object.entries(props.itemsObj).map(\r\n                    ([identifier, value]) =>\r\n                        <InlineItem\r\n                            key={identifier}\r\n                            item={data[identifier]}\r\n                            identifier={identifier}\r\n                            rating={props.colorCoded ? value.amount : value}\r\n                            additionalRating={props.colorCoded && value.additionalRating}\r\n                            prefix=\"x \" />\r\n                )}\r\n            </div>\r\n            {props.children}\r\n        </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const destoutpost = validateOutpost(getParams.destoutpost).value\r\n    const destreputation = validateReputation(getParams.destreputation)\r\n    const fabricatortypes = validateFabricator(getParams.fabricator)\r\n    const skills = {\r\n        helm: validateSkill(getParams.helm),\r\n        weapons: validateSkill(getParams.weapons),\r\n        mechanical: validateSkill(getParams.mechanical),\r\n        electrical: validateSkill(getParams.electrical),\r\n        medical: validateSkill(getParams.medical),\r\n    }\r\n\r\n    const calcData = calculateItem(item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills)\r\n\r\n    if (item === undefined) return {\r\n        noItem: true,\r\n        ...calcData,\r\n    }\r\n    return {\r\n        displayName: item.display_name,\r\n        deconstructTime: item.deconstruct_time,\r\n        fabricatorTypes: item.fabricator_types?.split(\",\").join(\"; \"),\r\n        skills: Object.entries(item.skills || {}).map(([k, v]) => `${k}: ${v}`).join('; '),\r\n        ...calcData,\r\n        fabricationBlock: <BlockWithItems itemsObj={item.fabricate} mainText=\"Fabricated from\">\r\n            <ProfitText profit={calcData.fabricationProfit}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellFabricationProfit}><br />\r\n                <small className=\"text-muted\">(when you find the ingredients en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        deconstuctionBlock: <BlockWithItems itemsObj={item.deconstruct} mainText=\"Deconstructed to\">\r\n            <ProfitText profit={calcData.deconstructionProfit}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellDeconstructionProfit}><br />\r\n                <small className=\"text-muted\">(when you find the item en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        usedinBlock: <BlockWithItems itemsObj={calcData.usedIn} mainText=\"Used in\" colorCoded />,\r\n        scrappedfromBlock: <BlockWithItems itemsObj={calcData.scrappedFrom} mainText=\"Scrapped from\" colorCoded />,\r\n        image: <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />,\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst TableData = props => {\r\n    return props.value !== props.missingValue ?\r\n        <tr>\r\n            <td>{props.children}</td>\r\n            <td>{props.value}</td>\r\n        </tr> : <></>\r\n}\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n            <tr>\r\n                <th colSpan=\"2\">\r\n                    <div style={{\r\n                        border: \"1.5px solid #454d55\",\r\n                        borderRadius: \"10px\",\r\n                        display: \"inline-block\",\r\n                        padding: \"9px 8px 10px 10px\",\r\n                    }}>{props.calculator.image}</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <TableData value={props.calculator.tradingProfit}>Trading margin</TableData>\r\n            <TableData value={props.calculator.buyingprice}>Buying price</TableData>\r\n            <TableData value={props.calculator.sellingprice}>Selling price</TableData>\r\n            <TableData value={props.calculator.minAmt}>Minimal amount sold at departure</TableData>\r\n            <TableData value={props.calculator.outpostmultiplier} missingValue={1}>Departure multiplier</TableData>\r\n            <TableData value={props.calculator.destoutpostmultiplier} missingValue={1}>Destination multiplier</TableData>\r\n            <TableData value={props.calculator.fabricateTime}>Fabrication time</TableData>\r\n            <TableData value={props.calculator.fabricatorTypes}>Fabricator type(s)</TableData>\r\n            <TableData value={props.calculator.deconstructTime}>Deconstruction time</TableData>\r\n            <TableData value={props.calculator.skills} missingValue={\"\"}>Fabrication skills</TableData>\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.noItem) return calculatorResults.homepageResults\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"outpost\"\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ [getParamName]: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams[getParamName])}\r\n    styles={generateStyles({flexGrow: 1, minWidth: 120, flexBasis: 120})}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport { useRef } from \"react\"\r\n\r\nexport default function ReputationInput(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n  const inputRef = useRef()\r\n\r\n  const getParamName = props.getParamName || \"reputation\"\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ [getParamName]: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  const onWheel = () => {\r\n    inputRef.current.blur()\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    minWidth: 120,\r\n    flexGrow: 1,\r\n    flexBasis: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams[getParamName]) || \"\"}\r\n      step={5}\r\n      ref={inputRef}\r\n      onWheel={onWheel}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand className=\"mt-3\">\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { useState } from 'react'\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { DEFAULT_SKILL_LEVEL, FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION } from '../globals'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { useRef } from \"react\"\r\n\r\nconst OutpostSwapper = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            outpost: getParams.destoutpost,\r\n            destoutpost: getParams.outpost,\r\n            reputation: getParams.destreputation,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Swap outposts\r\n    </Button>\r\n}\r\n\r\nconst SkillPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const [previousValue, changeValue] = useState(validateSkill(getParams[props.skill]))\r\n    const inputRef = useRef()\r\n\r\n    const getParamName = props.skill\r\n\r\n    const updateSkill = e => {\r\n        if (parseInt(previousValue) === DEFAULT_SKILL_LEVEL && (e.target.value === \"10\" || e.target.value === \"-10\")) {\r\n            e.target.value = DEFAULT_SKILL_LEVEL + parseInt(e.target.value)\r\n        }\r\n        e.target.value = validateSkill(e.target.value)\r\n        changeValue(e.target.value)\r\n        pushGetParams({ [props.skill]: parseInt(e.target.value) === DEFAULT_SKILL_LEVEL ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            step={10}\r\n            onInput={updateSkill}\r\n            placeholder={props.placeholder}\r\n            value={validateSkill(getParams[getParamName]) === DEFAULT_SKILL_LEVEL ? \"\" : getParams[getParamName]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst FabricatorPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleChange = e => {\r\n        pushGetParams({ fabricator: e.value === DEFAULT_FABRICATOR_OPTION.value ? undefined : e.value })\r\n    }\r\n\r\n    return <Select\r\n        value={validateFabricator(getParams.fabricator)}\r\n        styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n        theme={customThemeOverrides}\r\n        options={Object.values(FABRICATOR_OPTIONS)}\r\n        isSearchable={false}\r\n        onChange={handleChange} />\r\n}\r\n\r\nexport default function AdditionalFilters(props) {\r\n\r\n    return <Accordion>\r\n        <Card>\r\n            <Card.Header style={{ padding: 5 }}>\r\n                <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"dark\"\r\n                    eventKey=\"additional-filters\"\r\n                    style={{ padding: \"1px 5px\", borderRadius: 0 }}>\r\n                    Toggle additional options\r\n                </Accordion.Toggle>\r\n                <OutpostSwapper />\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"additional-filters\">\r\n                <Card.Body>\r\n                    <b>Allowed fabricators</b>\r\n                    <FabricatorPicker />\r\n                    <b>Skills (default is {DEFAULT_SKILL_LEVEL})</b>\r\n                    <SkillPicker skill=\"helm\" placeholder=\"Helm skill\" />\r\n                    <SkillPicker skill=\"weapons\" placeholder=\"Weapons skill\" />\r\n                    <SkillPicker skill=\"mechanical\" placeholder=\"Mechanical skill\" />\r\n                    <SkillPicker skill=\"electrical\" placeholder=\"Slectrical skill\" />\r\n                    <SkillPicker skill=\"medical\" placeholder=\"Medical skill\" />\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    </Accordion>\r\n}","import { Container, Row, Col, Navbar } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo, AdditionalFilters } from './BarotraumaCalc'\nimport './App.css';\n\nexport default function App() {\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" defaultExpanded className=\"pb-4\" >\n        <BrandNavLogo />\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mt-3\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <SearchBar />\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\n            <div><b style={{ color: \"white\" }}>\n              Departure\n          </b></div>\n            <div style={{ display: 'flex', flexGrow: 1 }}>\n              <OutpostSelect />\n              <ReputationInput />\n            </div></div>\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\n            <div><b style={{ color: \"white\" }}>\n              Destination\n          </b></div>\n            <div style={{ display: 'flex', flexGrow: 1 }}>\n              <OutpostSelect getParamName=\"destoutpost\" />\n              <ReputationInput getParamName=\"destreputation\" />\n            </div></div>\n        </Navbar.Collapse>\n      </Navbar>\n      <AdditionalFilters />\n      <Container className=\"pt-4 bg-white\">\n        <Row>\n          <Col>\n            <Route path=\"/\" children={<PageContents />}></Route>\n          </Col>\n        </Row>\n        <Row className=\"footer\">\n          <Col className=\"text-muted py-4\"><hr />I do not claim any rights to images and data used.\n            This is simply a convenience tool for the game called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.11.0.10).<br />\n            If you have found a bug or have a suggestion for me, you can <a href=\"https://github.com/lifearoundfreaks/barotrauma-calc/issues/new\">start an issue</a>.</Col>\n        </Row>\n      </Container>\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport initialState from './store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={initialState}>\n    <div className=\"App\"><App/></div>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}