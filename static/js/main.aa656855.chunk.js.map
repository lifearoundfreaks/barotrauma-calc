{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Utils/validateFabricator.js","BarotraumaCalc/Utils/validateSkill.js","BarotraumaCalc/Utils/validateUpgrades.js","BarotraumaCalc/Utils/validateStoreBalance.js","BarotraumaCalc/Utils/validateDifficultyLevel.js","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","BarotraumaCalc/Components/AdditionalFilters.js","App.js","index.js"],"names":["rawItems","aggregatedOptions","gameData","items","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","offsetMargin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","textures","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","customProvided","option","provided","padding","control","borderColor","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexGrow","marginTop","maxMenuHeight","STORE_BALANCE_MULTIPLIERS","full","numeric","half","quarter","DEFAULT_STORE_BALANCE_MULTIPLIER","OUTPOST_OPTIONS","city","outpost","research","military","mine","DEFAULT_OUTPOST_OPTION","DEFAULT_SKILL_LEVEL","FABRICATOR_OPTIONS","all","fabricator","medicalfabricator","DEFAULT_FABRICATOR_OPTION","ENGLISH_SKILL_NAMES","helm","weapons","mechanical","electrical","medical","initiative","courage","validateReputation","min","parseInt","validateOutpost","validateFabricator","validateSkill","parsed","isNaN","validateStoreBalance","validateDifficultyLevel","getRGB","positive","negative","ClickableItem","getParams","to","newParams","keys","getLink","backgroundColor","rating","item","rnd","price","floor","compareItems","a","b","InlineItem","additionalRating","prefix","postfix","RatedItems","className","header","explanation","display","alignItems","justifyContent","flexWrap","sort","obj","calculateItem","reputation","destoutpost","destreputation","fabricatortypes","skills","upgrades","sellmultiplier","leveldifficulty","getOutpostData","modified","getOutpostMultiplier","multiplier","hasPriceData","default","getBuyingPrice","outpostData","minleveldifficulty","soldeverywhere","sold","isSoldThere","getSellingPrice","getFabricationProfit","sellingprice","fabricate","reduce","sum","id","amt","Infinity","getDeconstructionProfit","buyingprice","deconstruct","getSellFabricationProfit","getSellDeconstructionProfit","getRealFabricationTime","fabricate_time","degreeOfSuccess","skill","level","t","pow","getRealDeconstructionTime","deconstruct_time","deconstructor","trade","fabr","sellFabr","dec","sellDec","usefulMats","updateUsefulMaterials","ingredients","ingredientId","ingredient","tradeProfit","round","fabrProfit","fabricator_types","decProfit","homepageResults","values","fabricateTime","fabricationBatch","fabrication_batch","deconstructTime","randomDeconstruction","random_deconstruction","minAmt","min_amt","tradingProfit","fabricationProfit","deconstructionProfit","sellFabricationProfit","sellDeconstructionProfit","outpostmultiplier","destoutpostmultiplier","usedIn","used_in","usedInId","amount","scrappedFrom","scrapped_from","scrappedFromId","ProfitText","profit","profitable","color","time","children","BlockWithItems","itemsObj","mainText","colorCoded","TableData","missingValue","InfoTable","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","fabricatorTypes","PageContents","calculatorResults","validateUpgrades","fabrlvl","declvl","balance","difficulty","calcData","noItem","displayName","name","i","k","v","marginBottom","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","refilledWithBlock","refilled_with","useCalculator","Row","Col","md","OutpostSelect","getParamName","minWidth","flexBasis","isSearchable","ReputationInput","inputRef","useRef","type","paddingLeft","paddingTop","paddingBottom","onInput","target","step","ref","onWheel","current","blur","BrandNavLogo","returnHomeGetParams","Navbar","Brand","textDecoration","OutpostSwapper","Button","onClick","OutpostRepeater","SellingPriceMultPicker","SkillPicker","previousValue","changeValue","UpgradesPicker","getparam","FabricatorPicker","LevelDifficultyPicker","AdditionalFilters","Accordion","Card","Header","Toggle","as","eventKey","Collapse","Body","App","basename","bg","expand","defaultExpanded","aria-controls","flexDirection","Container","path","href","ReactDOM","render","document","getElementById"],"mappings":"+33QAE8BA,E,oIAYxBC,GAZwBD,EAYiBE,EAASC,MAX7CC,OAAOC,QAAQL,GAAUM,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAClD,MAAO,CACHA,MAAOD,EACPE,MAAOD,EAAME,aACbC,aAAcH,EAAMG,aACpBC,QAASJ,EAAMI,QACfC,WAAYL,EAAMK,gB,gBCPxBC,EAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmBA,EAAWT,KACpD,SAAAE,GAAK,OAAIQ,WAAWR,GAAX,UAAuBA,EAAvB,MAAmCA,KAC9CS,KAAK,MAOQ,SAASC,EAAcC,GAAQ,IACrCC,EAA8DD,EAA9DC,KAAMC,EAAwDF,EAAxDE,KAAMR,EAAkDM,EAAlDN,WAAYS,EAAsCH,EAAtCG,OAAQC,EAA8BJ,EAA9BI,aAAiBC,EADb,YAC0BL,EAD1B,sDAErCM,EAPgB,SAAAV,GAAe,IAAD,EACNA,EAAWW,MAAM,KAAKpB,IAAIU,YADpB,mBAC7BW,EAD6B,KAC1BC,EAD0B,KACvBC,EADuB,KAChBC,EADgB,KAElC,MAAO,CAACH,IAAGC,IAAGC,QAAOC,SAAQV,KAAMW,KAAKC,IAAIH,EAAOC,IAKxCG,CAAgBpB,GACvBqB,GAAed,EAAOE,GAAUG,EAAKL,KACzC,OAAO,qBACHe,MAAK,aACDN,MAAOf,EAAkBW,EAAKI,MAAQK,GACtCJ,OAAQhB,EAAkBW,EAAKK,OAASI,GACxCE,mBAAoBtB,GAAmBW,EAAKE,EAAIO,GAAcT,EAAKG,EAAIM,GACvEG,gBAAgB,OAAD,OAASC,mBAAT,qBAA4CjB,EAA5C,KACfkB,eAAgBzB,EAAiB,WAAjB,cACTZ,EAASsC,SAASnB,GAAMf,KAAI,SAAAE,GAAK,OAAIA,EAAQ0B,OAEpDO,MAAO,OACPnB,OAAQR,GACHS,GAAgB,GAAKD,GAAUG,EAAKL,KAAOK,EAAKK,QAAUI,EAAc,GACxEX,GAAgB,GAAKD,GAAUG,EAAKL,KAAOK,EAAKI,OAASK,EAAc,IAEzEV,KC3BA,SAASkB,EAAaC,GAEjC,IAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAQ,IAAIC,gBAAgBL,EAASM,QAY3C,OAFIP,GAAqBK,EAAMG,OAAO,cAE/B,CACHR,EAAkB,YAAQK,EAAMI,YAAehD,OAAOiD,YAAYL,EAAM3C,WAX1D,SAACiD,GACf,cAA2BlD,OAAOC,QAAQiD,GAA1C,eAAqD,CAAC,IAAD,sBAAzC/C,EAAyC,KAApCC,EAAoC,UACnC+C,IAAV/C,EAAqBwC,EAAMG,OAAO5C,GACjCyC,EAAMQ,IAAIjD,EAAKC,GAExBsC,EAAQW,KAAR,YAAkBT,EAAMI,eCZzB,IAEMM,EAAiB,SAACC,GAC3B,MAAO,CACHC,OAAQ,SAAAC,GAAQ,kCACTA,GADS,IAEZC,QAAS,MAEbC,QAAS,SAAAF,GAAQ,kCACVA,GADU,IAEbG,YAAa,UAEjBC,UAAW,SAAAJ,GAAQ,kCACZA,GADY,IAEfvC,OAAQ,IACLqC,MAKFO,EAAuB,SAAAC,GAAK,kCAClCA,GADkC,IAErCC,aAAc,EACdC,OAAO,2BACAF,EAAME,QADP,IAEFC,QAAS,WACTC,UAAW,YACXC,UAAW,YClBXC,EAAWC,IAAXD,OACFE,EAAa,SAAAxD,GAAK,OACtB,mCACE,eAACsD,EAAD,2BAAYtD,GAAZ,cACA,cAACD,EAAD,CACEE,KDduB,GCevBC,KAAMF,EAAMyD,KAAKhE,QACjBC,WAAYM,EAAMyD,KAAK/D,WACvBS,OAAQ,EACRC,cAAe,KAEdJ,EAAMyD,KAAKnE,aAeH,SAASoE,IAAa,IAAD,EAEeC,mBAAS,IAFxB,mBAE3BC,EAF2B,KAEVC,EAFU,OAGEF,oBAAS,GAHX,mBAG3BG,EAH2B,KAGfC,EAHe,KAI5BC,EAAgBzC,IAAe,GAgBrC,OAAO,cAAC,IAAD,CACLlC,MAAO,kBAAM,MACb4E,QAASL,EACTM,cAjBwB,SAAAC,GACpBA,EAASC,QACXP,EAlBmB,SAAAQ,GAEvB,IAFiC,IAAD,EACV,CAAC,GJVdvF,EAAkBwF,OAAOC,aIU7BC,EAD2B,KAClBC,EADkB,KAEzBD,EAAQJ,OApBc,GAoBmB,CAC9C,IAAIM,EAAaD,EAAKE,OAAOtF,MAC7B,QAAmB+C,IAAfsC,EAA0B,MACrBA,EAAWlF,aAAaoF,SAASP,EAAMQ,gBAAgBL,EAAQlC,KAAKoC,GAE/E,OAAOF,EAWmBM,CAAiBX,IACvCJ,GAAc,KAEdF,EAAsB,IACtBE,GAAc,KAYhBgB,SARmB,SAAAC,GACnBhB,EAAc,CAACiB,WAAYD,EAAE3F,SAQ7BkE,WAAY,CAAED,OAAQE,EAAY0B,kBAAmB,kBAAM,MAAMC,mBAAoB,kBAAM,OAC3FrB,WAAYA,EACZsB,YAAY,2BACZC,iBAAkB,iBAAM,wBACxBC,aAAcC,YAAa,CAAEC,UAAW,SAAA/C,GAAM,OAAIA,EAAOgB,KAAKjE,cAAciG,YAAY,IACxFC,OAAQnD,EAAe,CAACoD,SAAU,EAAGC,UAAW,KAChDC,cAAe,IACf7C,MAAOD,I,YCnEE+C,EAA4B,CACrCC,KAAM,CAAE1G,MAAO,OAAQC,MAAO,mCAAoC0G,QAAS,GAC3EC,KAAM,CAAE5G,MAAO,OAAQC,MAAO,uCAAwC0G,QAAS,KAC/EE,QAAS,CAAE7G,MAAO,UAAWC,MAAO,0CAA2C0G,QAAS,KAE/EG,EAAmCL,EAA0BC,KAC7DK,EAAkB,CAC3BC,KAAM,CAAEhH,MAAO,OAAQC,MAAO,UAC9BgH,QAAS,CAAEjH,MAAO,UAAWC,MAAO,WACpCiH,SAAU,CAAElH,MAAO,WAAYC,MAAO,YACtCkH,SAAU,CAAEnH,MAAO,WAAYC,MAAO,YACtCmH,KAAM,CAAEpH,MAAO,OAAQC,MAAO,SAErBoH,EAAyBN,EAAgBC,KACzCM,EAAsB,GACtBC,EAAqB,CAC9BC,IAAK,CAAExH,MAAO,MAAOC,MAAO,OAC5BwH,WAAY,CAAEzH,MAAO,aAAcC,MAAO,cAC1CyH,kBAAmB,CAAE1H,MAAO,oBAAqBC,MAAO,uBAE/C0H,EAA4BJ,EAAmBC,IAC/CI,EAAsB,CAC/BC,KAAM,OACNC,QAAS,UACTC,WAAY,yBACZC,WAAY,yBACZC,QAAS,UACTC,WAAY,aACZC,QAAS,WC3BE,SAASC,EAAoBpD,GACxC,OAAOzD,KAAKC,IAAID,KAAK8G,IAAIC,SAAStD,IDHJ,ECGkC,MAAO,KCD5D,SAASuD,EAAiBvD,GACrC,OAAO+B,EAAgB/B,IAAUqC,ECDtB,SAASmB,EAAoBxD,GACxC,OAAOuC,EAAmBvC,IAAU2C,ECDzB,SAASc,EAAezD,GACnC,IAAI0D,EAASJ,SAAStD,GACtB,OAAOzD,KAAKC,IAAID,KAAK8G,IAAIM,MAAMD,GAAUpB,EAAsBoB,EAAQ,KAAM,GCFlE,SAASN,EAAoBpD,GACxC,OAAOzD,KAAKC,IAAID,KAAK8G,IAAIC,SAAStD,IL4BA,EK5BkC,IAAK,GCD9D,SAAS4D,EAAsB5D,GAC1C,OAAOyB,EAA0BzB,IAAU8B,ECDhC,SAAS+B,EAAyB7D,GAC7C,OAAOzD,KAAKC,IAAID,KAAK8G,IAAIC,SAAStD,IP6BJ,EO7BkC,KAAM,GCC1E,IAAM8D,EAAS,SAAA9I,GACX,IAAM+I,EAAWxH,KAAK8G,IAAIrI,EAAQ,EAAIA,EAAQ,EAAG,KAC3CgJ,EAAWzH,KAAK8G,IAAIrI,EAAQ,GAAKA,EAAQ,EAAG,KAClD,MAAM,OAAN,OAAc,IAAI+I,EAAlB,aAA+B,IAAIC,EAAnC,aAAgD,IAAIA,EAASD,EAA7D,MAGW,SAASE,EAActI,GAElC,IAAMuI,EAAYhH,IAAe,GAQjC,OAAO,cAAC,IAAD,CACHiH,GANY,WACZ,IAAIC,EAAS,2BAAOF,GAAP,IAAkBtD,WAAYjF,EAAMiF,aACjD,MAAO,KAAOhG,OAAOyJ,KAAKD,GAAWtJ,KAAI,SAAAC,GAAG,OAAIA,EAAM,IAAMqJ,EAAUrJ,MAAMU,KAAK,KAI7E6I,GADD,SAGH,qBAAK3H,MAAO,CAAE4H,gBAAiB5I,EAAM6I,QAAUV,EAAOnI,EAAM6I,QAASlI,OAV5D,IAUT,SACI,cAACZ,EAAD,CACIE,KAZC,GAaDC,KAAMF,EAAM8I,KAAKrJ,QACjBC,WAAYM,EAAM8I,KAAKpJ,WACvBS,OAAQ,QCfxB,IAAMsD,EAAO1E,EAASC,MAChB+J,EAAM,SAAAC,GAAK,OAAIpI,KAAKqI,MAAMD,IAC1BE,EAAe,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,OAASO,EAAEP,OAAS,EAAIM,EAAEN,SAAWO,EAAEP,OAAS,GAAK,GAEhFQ,EAAa,SAAArJ,GACf,OAAO,gCACH,cAACsI,EAAD,CACIQ,KAAM9I,EAAM8I,KACZ7D,WAAYjF,EAAMiF,WAClB4D,OAAQ7I,EAAMsJ,mBAChB,6BAAKtJ,EAAMuJ,QAAU,IAAMvJ,EAAM6I,QAAU7I,EAAMwJ,SAAW,UAGhEC,EAAa,SAAAzJ,GACf,OAAOA,EAAMhB,MAAMoF,OAAS,qCACxB,oBAAIsF,UAAU,OAAd,SAAsB1J,EAAM2J,SAAY,gCAAQ3J,EAAM4J,cACtD,qBAAKF,UAAU,OAAO1I,MAAO,CAAE6I,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,QAA1G,SACKhK,EAAMhB,MAAMiL,KAAKf,GAAc/J,KAC5B,SAAA+K,GAAG,OAAI,cAAC,EAAD,CAAiCjF,WAAYiF,EAAIjF,WAAY6D,KAAMoB,EAAIpB,KAAMD,OAAQqB,EAAIrB,OAAQW,QAASxJ,EAAMwJ,SAA/FU,EAAIjF,oBAExB,8BAGdkF,GAAgB,SAACrB,EAAMxC,EAAS8D,EAAYC,EAAaC,EAAgBC,EAAiBC,EAAQC,EAAUC,EAAgBC,GAAqB,IAAD,IAE5IC,EAAiB,SAAC9B,EAAMrH,GAAP,yBAAoBqH,EAAKE,aAAzB,iBAAoB,EAAY6B,gBAAhC,aAAoB,EAAuBpJ,IAE5DqJ,EAAuB,SAAChC,EAAMrH,GAAP,aAAoB,UAAAmJ,EAAe9B,EAAMrH,UAArB,eAAgCsJ,aAAc,GAEzFC,EAAe,SAAAlC,GAAI,kBAA4B1G,KAAxB,UAAA0G,EAAKE,aAAL,eAAYiC,UAUnCC,EAAiB,SAAApC,GACnB,GATgB,SAAAA,GAChB,IAAMqC,EAAcP,EAAe9B,EAAMxC,GACzC,OAAO0E,EAAalC,IAASA,EAAKE,MAAMoC,oBAAsBT,IAC3B,UAA9B7B,EAAKE,MAAMqC,gBACXF,GAAqC,UAArBA,EAAYG,MAK7BC,CAAYzC,GAAO,OAAOlI,KAAKC,IAAIkI,EACnCA,EACID,EAAKE,MAAMiC,QAAUH,EAAqBhC,EAAMxC,KAC/C,EAAiB,KAAb8D,IACV,IAGDoB,EAAkB,SAAA1C,GACpB,GAAIkC,EAAalC,GAAO,OAAOlI,KAAKC,IAAIkI,EACpCA,EACwE,GAApEA,EAAID,EAAKE,MAAMiC,QAAUH,EAAqBhC,EAAMuB,IAAqBK,IACxE,EAAqB,KAAjBJ,IACV,IAGDmB,EAAuB,SAAC3C,EAAM4C,GAAP,OAAwBzM,OAAOC,QAAQ4J,EAAK6C,WAAa,IAAIC,QACtF,SAACC,EAAD,0BAAOC,EAAP,KAAWC,EAAX,YAAoBF,GAAQX,EAAezH,EAAKqI,KAASE,KAAYD,IAAK,IACzEL,GAAgB,IAEfO,EAA0B,SAACnD,EAAMoD,GAAP,OAAuBjN,OAAOC,QAAQ4J,EAAKqD,aAAe,IAAIP,QAC1F,SAACC,EAAD,0BAAOC,EAAP,KAAWC,EAAX,YAAoBF,GAAQL,EAAgB/H,EAAKqI,KAAS,GAAKC,IAAK,IACnEG,GAAeF,MAEdI,EAA2B,SAACtD,EAAM4C,GAAP,OAAwBzM,OAAOC,QAAQ4J,EAAK6C,WAAa,IAAIC,QAC1F,SAACC,EAAD,0BAAOC,EAAP,KAAWC,EAAX,YAAoBF,GAAQL,EAAgB/H,EAAKqI,KAAS,GAAKC,IAAK,IACnEL,GAAgB,IAEfW,EAA8B,SAACvD,EAAM4C,GAAP,OAAwBzM,OAAOC,QAAQ4J,EAAKqD,aAAe,IAAIP,QAC/F,SAACC,EAAD,0BAAOC,EAAP,KAAWC,EAAX,YAAoBF,GAAQL,EAAgB/H,EAAKqI,KAAS,GAAKC,IAAK,IACnEL,GAAgB,IAEfY,EAAyB,SAAAxD,GAC3B,QAAoB1G,IAAhB0G,EAAK0B,OAAsB,OAAO1B,EAAKyD,eAAiB,EAC5D,IAAMC,GAAmBvN,OAAOC,QAAQ4J,EAAK0B,QAAQoB,QACjD,SAACC,EAAD,0BAAOY,EAAP,KAAcC,EAAd,YACIb,EAAMrB,EAAOiC,GAASC,IAAO,GACjCzN,OAAOyJ,KAAKI,EAAK0B,QAAQpG,OAAS,KAAO,IACvCuI,EAAIH,EAAkB,GAAKA,EAAkBA,EAAoC,EAAlBA,EACrE,OAAO1D,EAAKyD,eAAkB3L,KAAKgM,IAAI,KAAMnC,EAAS3D,YAAelG,KAAKC,IAAID,KAAK8G,IAAIiF,EAAG,GAAI,MAG5FE,EAA4B,SAAA/D,GAAI,OAAIA,EAAKgE,iBAAoBlM,KAAKgM,IAAI,KAAMnC,EAASsC,gBAE3F,QAAa3K,IAAT0G,EAAoB,CAkBpB,IAlBqB,IACdkE,EAAwC,GAAjCC,EAAqC,GAA/BC,EAAmC,GAAzBC,EAA6B,GAAxBC,EAA4B,GAEzDC,EAAa,GAEbC,EAAwB,SAAAC,GAC1B,IAAK,IAAMC,KAAgBD,EAAa,CACpC,IAAIE,EAAahK,EAAK+J,GAClBtC,EAAeuC,KACXD,KAAgBH,EAChBA,EAAWG,GAAc3E,QAAU,EAEnCwE,EAAWG,GAAgB,CAAE1E,KAAM2E,EAAYxI,WAAYuI,EAAc3E,OAAQ,MAMjG,MAAiC5J,OAAOC,QAAQuE,GAAhD,eAAuD,CAAC,IAAD,sBAA3CwB,EAA2C,KAA/B6D,EAA+B,KAE/CoD,EAAchB,EAAepC,GAC7B4C,EAAeF,EAAgB1C,GAC/B4E,EAAchC,EAAeQ,EAE7BwB,EAAc,GACdV,EAAM1K,KAAK,CAAEwG,OAAM7D,aAAY4D,OAAQjI,KAAK+M,MAAM,IAAOD,EAAcxB,GAAe,KAG1F,IAAI0B,EAAa9E,EAAK6C,UAAY/K,KAAK+M,MAAM,IACzClC,EAAqB3C,EAAM4C,GAAgBY,EAAuBxD,IAClE,IAAM,GAEoB,QAA1ByB,EAAgBlL,QAAoByJ,EAAK+E,kBAAoB,IAAItN,MAAM,KAAKqE,SAAS2F,EAAgBlL,UACjGuO,EAAa,GACbX,EAAK3K,KAAK,CAAEwG,OAAM7D,aAAY4D,OAAQ+E,IACtCN,EAAsBxE,EAAK6C,YAEpBiC,KAAgB5B,MACvB4B,EAAa9E,EAAK6C,UAAY/K,KAAK+M,MAAM,IACrCvB,EAAyBtD,EAAM4C,GAAgBY,EAAuBxD,IACtE,IAAM,GACO,IACboE,EAAS5K,KAAK,CAAEwG,OAAM7D,aAAY4D,OAAQ+E,IAC1CN,EAAsBxE,EAAK6C,aAKvC,IAAImC,EAAYhF,EAAKqD,YAAcvL,KAAK+M,MAAM,IAC1C1B,EAAwBnD,EAAMoD,GAAeW,EAA0B/D,IACvE,IAAM,EAENgF,EAAY,EACZX,EAAI7K,KAAK,CAAEwG,OAAM7D,aAAY4D,OAAQiF,IAE9BA,KAAe9B,MACtB8B,EAAYhF,EAAKqD,YAAcvL,KAAK+M,MAAM,IACtCtB,EAA4BvD,EAAM4C,GAAgBmB,EAA0B/D,IAC5E,IAAM,GACM,GACZsE,EAAQ9K,KAAK,CAAEwG,OAAM7D,aAAY4D,OAAQiF,IAIrD,MAAO,CACHC,gBAAiB,qCACb,cAAC,EAAD,CACI/O,MAAOgO,EACPxD,QAAQ,IACRG,OAAO,6BACPC,YAAY,gCAChB,cAAC,EAAD,CACI5K,MAAOC,OAAO+O,OAAOX,GACrB1D,OAAO,4BACPC,YAAY,qDAChB,cAAC,EAAD,CACI5K,MAAOiO,EACPzD,QAAQ,KACRG,OAAO,2CACPC,YAAY,kCAChB,cAAC,EAAD,CACI5K,MAAOkO,EACP1D,QAAQ,KACRG,OAAO,4BACPC,YAAY,2EAChB,cAAC,EAAD,CACI5K,MAAOmO,EACP3D,QAAQ,KACRG,OAAO,iDACPC,YAAY,kCAChB,cAAC,EAAD,CACI5K,MAAOoO,EACP5D,QAAQ,KACRG,OAAO,+BACPC,YAAY,wEAK5B,IAAMsC,EAAchB,EAAepC,GAC7B4C,EAAeF,EAAgB1C,GA4BrC,MAAO,CACHoD,cAAaR,eACbuC,cAAgBrN,KAAK+M,MAAM,IAAMrB,EAAuBxD,IAAS,UAAQ1G,EACzE8L,iBAAkBpF,EAAKqF,mBAAqB,EAC5CC,gBAAkBxN,KAAK+M,MAAM,IAAMd,EAA0B/D,IAAS,UAAQ1G,EAC9EiM,qBAAsBvF,EAAKwF,sBAAwB,WAAQlM,EAC3DmM,OAAM,UAAE3D,EAAe9B,EAAMxC,UAAvB,aAAE,EAA+BkI,QACvCC,mBAAiCrM,IAAjBsJ,QAA8CtJ,IAAhB8J,OAC1C9J,EAAYsJ,EAAeQ,EAC/BwC,kBAAmBjD,EAAqB3C,EAAM4C,GAC9CiD,qBAAsB1C,EAAwBnD,EAAMoD,GACpD0C,sBAAuBxC,EAAyBtD,EAAM4C,GACtDmD,yBAA0BxC,EAA4BvD,EAAM4C,GAC5DoD,kBAAmBhE,EAAqBhC,EAAMxC,GAC9CyI,sBAAuBjE,EAAqBhC,EAAMuB,GAClD2E,OAxCO/P,OAAOiD,YACVjD,OAAOC,QAAQ4J,EAAKmG,SAAW,IAAI9P,KAC/B,mCAAE+P,EAAF,KAAYC,EAAZ,WACC,CAACD,EAAU,CACRC,OAAQA,EACR7F,iBAAkB8C,EACd3I,EAAKyL,GAAW1D,EAAgB/H,EAAKyL,KAAcC,EAAS,QAmC5EC,aA5BOnQ,OAAOiD,YACVjD,OAAOC,QAAQ4J,EAAKuG,eAAiB,IAAIlQ,KACrC,mCAAEmQ,EAAF,KAAkBH,EAAlB,WACC,CAACG,EAAgB,CACdH,OAAQA,EACR7F,iBAAkB+C,EACd5I,EAAK6L,GAAiB9D,EAAgB/H,EAAK6L,KAAoBH,EAAS,QAuBxF/D,oBAAoB,UAAAtC,EAAKE,aAAL,eAAYoC,0BAAsBhJ,IAIxDmN,GAAa,SAAAvP,GACf,GAAIA,EAAMwP,UAAYxD,IAAU,OAAO,iFACvC,IAAMyD,EAAazP,EAAMwP,QAAU,EACnC,OAAO,iCAAOC,EAAa,SAAW,OAA/B,KAAwC,mBAAGzO,MAAO,CACrD0O,MAAOD,EAAa,QAAU,OADa,SAE3C7O,KAAK+M,MAAoD,KAA7C8B,EAAazP,EAAMwP,QAAUxP,EAAMwP,SAAiB,MAF7D,IAEsE,uBAAM9F,UAAU,aAAhB,cACvE9I,KAAK+M,MAAM3N,EAAMwP,OAAOxP,EAAM2P,KAAK,KAAK,IAD+B,OACtB3P,EAAM4P,gBAI3DC,GAAiB,SAAA7P,GACnB,OAAOf,OAAOyJ,KAAK1I,EAAM8P,UAAY,IAAI1L,OACrC,sBAAKsF,UAAU,OAAf,UACI,6BAAK1J,EAAM+P,WACX,qBAAK/O,MAAO,CAAE6I,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,QAAzF,SACK/K,OAAOC,QAAQc,EAAM8P,UAAU3Q,KAC5B,mCAAE8F,EAAF,KAAc5F,EAAd,YACI,cAAC,EAAD,CAEIyJ,KAAMrF,EAAKwB,GACXA,WAAYA,EACZ4D,OAAQ7I,EAAMgQ,WAAa3Q,EAAM8P,OAAS9P,EAC1CiK,iBAAkBtJ,EAAMgQ,YAAc3Q,EAAMiK,iBAC5CC,OAAO,MALFtE,QAQpBjF,EAAM4P,YACD,8BC5QlB,IAAMK,GAAY,SAAAjQ,GACd,OAAOA,EAAMX,QAAUW,EAAMkQ,aACzB,+BACI,6BAAKlQ,EAAM4P,WACX,6BAAK5P,EAAMX,WACP,8BAGV8Q,GAAY,SAAAnQ,GAAU,IAAD,EAEvB,OAAO,eAACoQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,UACH,gCACI,6BACI,oBAAIC,QAAQ,IAAZ,SACI,qBAAKzP,MAAO,CACR0P,OAAQ,sBACRzN,aAAc,OACd4G,QAAS,eACTlH,QAAS,qBAJb,SAKI3C,EAAM2Q,WAAWC,cAIjC,kCACI,cAAC,GAAD,CAAWvR,MAAOW,EAAM2Q,WAAWlC,cAAnC,4BACA,cAAC,GAAD,CAAWpP,MAAOW,EAAM2Q,WAAWzE,YAAnC,0BACA,cAAC,GAAD,CAAW7M,MAAOW,EAAM2Q,WAAWjF,aAAnC,2BACA,cAAC,GAAD,CAAWrM,MAAOW,EAAM2Q,WAAWpC,OAAnC,8CACA,cAAC,GAAD,CAAWlP,MAAOW,EAAM2Q,WAAW7B,kBAAmBoB,aAAc,EAApE,kCACA,cAAC,GAAD,CAAW7Q,MAAOW,EAAM2Q,WAAW5B,sBAAuBmB,aAAc,EAAxE,oCACA,cAAC,GAAD,CAAW7Q,MAAOW,EAAM2Q,WAAW1C,cAAnC,8BACA,cAAC,GAAD,CAAW5O,MAAOW,EAAM2Q,WAAWE,gBAAnC,gCACA,cAAC,GAAD,CAAWxR,MAAOW,EAAM2Q,WAAWzC,iBAAkBgC,aAAc,EAAnE,+BACA,cAAC,GAAD,CAAW7Q,MAAOW,EAAM2Q,WAAWvC,gBAAnC,iCACA,cAAC,GAAD,CAAW/O,MAAOW,EAAM2Q,WAAWtC,qBAAnC,sCACA,cAAC,GAAD,CAAWhP,OAAO,UAAAW,EAAM2Q,WAAWnG,cAAjB,eAAyBpG,QAASpE,EAAM2Q,WAAWnG,YAASpI,EAA9E,gCACA,cAAC,GAAD,CAAW/C,MAAOW,EAAM2Q,WAAWvF,mBAAnC,6CAKG,SAAS0F,KAEpB,IAEMC,EDkOK,SAAuB9L,GAAa,IAAD,EAExCsD,EAAYhH,IAAe,GAC3BuH,EAAOrF,EAAKwB,GAGZqB,EAAUsB,EAAgBW,EAAUjC,SAASjH,MAC7C+K,EAAa3C,EAAmBc,EAAU6B,YAC1CC,EAAczC,EAAgBW,EAAU8B,aAAahL,MACrDiL,EAAiB7C,EAAmBc,EAAU+B,gBAC9CC,EAAkB1C,EAAmBU,EAAUzB,YAC/C0D,EAAS,CACXtD,KAAMY,EAAcS,EAAUrB,MAC9BC,QAASW,EAAcS,EAAUpB,SACjCC,WAAYU,EAAcS,EAAUnB,YACpCC,WAAYS,EAAcS,EAAUlB,YACpCC,QAASQ,EAAcS,EAAUjB,UAE/BmD,EAAW,CACb3D,WAAYkK,EAAiBzI,EAAU0I,SACvClE,cAAeiE,EAAiBzI,EAAU2I,SAExCxG,EAAiBzC,EAAqBM,EAAU4I,SAASnL,QACzD2E,EAAkBzC,EAAwBK,EAAU6I,YAEpDC,EAAWlH,GAAcrB,EAAMxC,EAAS8D,EAAYC,EAAaC,EAAgBC,EAAiBC,EAAQC,EAAUC,EAAgBC,GAE1I,YAAavI,IAAT0G,EAA2B,aAC3BwI,QAAQ,GACLD,GAEA,yBACHE,YAAazI,EAAKvJ,aAClBsR,gBAAe,UAAE/H,EAAK+E,wBAAP,aAAE,EAAuBtN,MAAM,KAAKpB,KAAI,SAAAqS,GAAI,aAAI,UAAA5K,EAAmB4K,UAAnB,eAA0BlS,QAASkS,KAAM1R,KAAK,MAC7G0K,OAAQvL,OAAOC,QAAQ4J,EAAK0B,QAAU,IAAIrL,KACtC,WAASsS,GAAT,uBAAEC,EAAF,KAAKC,EAAL,YAAe,qBAAa3Q,MAAO,CAAC4Q,aAAc,GAAnC,mBAA2C3K,EAAoByK,IAAMA,EAArE,aAA2EC,IAAjEF,OAE1BJ,GANP,IAOIQ,iBAAkB,eAAC,GAAD,CAAgB/B,SAAUhH,EAAK6C,UAAWoE,SAAS,kBAAnD,UACd,eAAC,GAAD,CAAYP,OAAQ6B,EAAS3C,kBAAmBiB,KAAM0B,EAASpD,cAA/D,UAA8E,uBAC1E,uBAAOvE,UAAU,aAAjB,oEACS,uBACb,eAAC,GAAD,CAAY8F,OAAQ6B,EAASzC,sBAAuBe,KAAM0B,EAASpD,cAAnE,UAAkF,uBAC9E,uBAAOvE,UAAU,aAAjB,4DAGRoI,mBAAoB,eAAC,GAAD,CAAgBhC,SAAUhH,EAAKqD,YAAa4D,SAAS,mBAArD,UAChB,eAAC,GAAD,CAAYP,OAAQ6B,EAAS1C,qBAAsBgB,KAAM0B,EAASjD,gBAAlE,UAAmF,uBAC/E,uBAAO1E,UAAU,aAAjB,oEACS,uBACb,eAAC,GAAD,CAAY8F,OAAQ6B,EAASxC,yBAA0Bc,KAAM0B,EAASjD,gBAAtE,UAAuF,uBACnF,uBAAO1E,UAAU,aAAjB,qDAGRqI,YAAa,cAAC,GAAD,CAAgBjC,SAAUuB,EAASrC,OAAQe,SAAS,UAAUC,YAAU,IACrFgC,kBAAmB,cAAC,GAAD,CAAgBlC,SAAUuB,EAASjC,aAAcW,SAAS,gBAAgBC,YAAU,IACvGiC,kBAAmB,eAAC,GAAD,CAAgBnC,SAAUhH,EAAKoJ,cAAenC,SAAS,gBAAvD,UACf,uBAAOrG,UAAU,aAAjB,qDAA6E,uBAC7E,uBAAOA,UAAU,aAAjB,kDAEJkH,MAAO,cAAC7Q,EAAD,CACHE,KAAM,IACNC,KAAM4I,EAAKrJ,QACXC,WAAYoJ,EAAKpJ,WACjBS,OAAQ,MClSUgS,CAFR5Q,IAAe,GACJ0D,YAE7B,OAAI8L,EAAkBO,OAAeP,EAAkBhD,gBAEhD,qCACH,cAACqE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UAAK,6BAAKtB,EAAkBQ,kBAEhC,eAACa,EAAA,EAAD,CAAK1I,UAAU,OAAf,UACI,cAAC2I,EAAA,EAAD,CAAKC,GAAI,EAAG5I,UAAU,OAAtB,SAA6B,cAAC,GAAD,CAAWiH,WAAYI,MACpD,eAACsB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACKvB,EAAkBc,iBAClBd,EAAkBe,mBAClBf,EAAkBgB,YAClBhB,EAAkBiB,kBAClBjB,EAAkBkB,2B,aCzDpB,SAASM,GAAcvS,GAAQ,IAAD,EAERuB,IAFQ,mBAEpCgH,EAFoC,KAEzBvE,EAFyB,KAIrCwO,EAAexS,EAAMwS,cAAgB,UAM3C,OAAO,cAAC,IAAD,CACLnT,MAAOuI,EAAgBW,EAAUiK,IACjC9M,OAAQnD,EAAe,CAACoD,SAAU,EAAG8M,SAAU,IAAKC,UAAW,MAC/D1P,MAAOD,EACPkB,QAAShF,OAAO+O,OAAO5H,GACvBP,cAAe,IACf8M,cAAc,EACd5N,SAXmB,SAAAC,GACnBhB,EAAc,gBAAGwO,EAAexN,EAAE3F,QAAUqH,EAAuBrH,WAAQ+C,EAAY4C,EAAE3F,WCT9E,SAASuT,GAAgB5S,GAAQ,IAAD,EAEVuB,IAFU,mBAEtCgH,EAFsC,KAE3BvE,EAF2B,KAGvC6O,EAAWC,mBAEXN,EAAexS,EAAMwS,cAAgB,aAW3C,OAAO,qBAAKxR,MAAO,CACjBb,OAAQ,GACRsS,SAAU,IACV9M,SAAU,EACV+M,UAAW,KAJN,SAMN,uBACGK,KAAK,SACL/R,MAAO,CACLN,MAAO,OACPsS,YAAa,GACbC,WAAY,EACZC,cAAe,GAEjBC,QAvBqB,SAAAnO,GACvBA,EAAEoO,OAAO/T,MAAQoI,EAAmBzC,EAAEoO,OAAO/T,OAC7C2E,EAAc,gBAAGwO,EAAkC,MAAnBxN,EAAEoO,OAAO/T,WAAgB+C,EAAY4C,EAAEoO,OAAO/T,SAsB5E+F,YAAY,aACZ/F,MAAOoI,EAAmBc,EAAUiK,KAAkB,GACtDa,KAAM,EACNC,IAAKT,EACLU,QAvBY,WACdV,EAASW,QAAQC,YCbN,SAASC,KAEpB,IAAMC,EAAsBpS,GAAa,GAAM,GAE/C,OAAO,cAACqS,EAAA,EAAOC,MAAR,CAAcnK,UAAU,OAAxB,SACH,cAAC,IAAD,CACIlB,GAAImL,EACJ3S,MAAO,CAAE8S,eAAgB,OAAQpE,MAAO,SAF5C,8B,+BCaFqE,GAAiB,WAAO,IAAD,EAEUxS,IAFV,mBAElBgH,EAFkB,KAEPvE,EAFO,KAazB,OAAO,cAACgQ,GAAA,EAAD,CACHhT,MAAO,CAAE2B,QAAS,UAAWxC,OAAQ,EAAG8C,aAAc,GACtDuN,QAAQ,OACRyD,QAZgB,WAChBjQ,EAAc,CACVsC,QAASiC,EAAU8B,YACnBA,YAAa9B,EAAUjC,QACvB8D,WAAY7B,EAAU+B,eACtBA,eAAgB/B,EAAU6B,cAI3B,4BASL8J,GAAkB,WAAO,IAAD,EAES3S,IAFT,mBAEnBgH,EAFmB,KAERvE,EAFQ,KAW1B,OAAO,cAACgQ,GAAA,EAAD,CACHhT,MAAO,CAAE2B,QAAS,UAAWxC,OAAQ,EAAG8C,aAAc,GACtDuN,QAAQ,OACRyD,QAVgB,WAChBjQ,EAAc,CACVqG,YAAa9B,EAAUjC,QACvBgE,eAAgB/B,EAAU6B,cAI3B,+BAUL+J,GAAyB,SAAAnU,GAAU,IAAD,EAEGuB,IAFH,mBAEzBgH,EAFyB,KAEdvE,EAFc,KAQhC,OAAO,cAAC,IAAD,CACH3E,MAAO4I,EAAqBM,EAAU4I,SACtCzL,OAAQnD,EAAe,CAAEoD,SAAU,EAAG8M,SAAU,IAAKC,UAAW,MAChE1P,MAAOD,EACPkB,QAAShF,OAAO+O,OAAOlI,GACvB6M,cAAc,EACd5N,SAViB,SAAAC,GACjBhB,EAAc,CAAEmN,QAASnM,EAAE3F,QAAU8G,EAAiC9G,WAAQ+C,EAAY4C,EAAE3F,YAYlG+U,GAAc,SAAApU,GAAU,IAAD,EAEUuB,IAFV,mBAElBgH,EAFkB,KAEPvE,EAFO,OAGYL,mBAASmE,EAAcS,EAAUvI,EAAMyM,SAHnD,mBAGlB4H,EAHkB,KAGHC,EAHG,KAInBzB,EAAWC,mBAEXN,EAAexS,EAAMyM,MAe3B,OAAO,qBAAKzL,MAAO,CACfb,OAAQ,GACRsS,SAAU,IACV9M,SAAU,EACV+M,UAAW,KAJR,SAOH,uBACIK,KAAK,SACL/R,MAAO,CACHN,MAAO,OACPsS,YAAa,GACbC,WAAY,EACZC,cAAe,GAEnBG,KAAM,GACNF,QA7BY,SAAAnO,GACZ2C,SAAS0M,KAAmB1N,GAA2C,OAAnB3B,EAAEoO,OAAO/T,OAAqC,QAAnB2F,EAAEoO,OAAO/T,QACxF2F,EAAEoO,OAAO/T,MAAQsH,EAAsBgB,SAAS3C,EAAEoO,OAAO/T,QAE7D2F,EAAEoO,OAAO/T,MAAQyI,EAAc9C,EAAEoO,OAAO/T,OACxCiV,EAAYtP,EAAEoO,OAAO/T,OACrB2E,EAAc,gBAAGhE,EAAMyM,MAAQ9E,SAAS3C,EAAEoO,OAAO/T,SAAWsH,OAAsBvE,EAAY4C,EAAEoO,OAAO/T,SAwBnG+F,YAAa6B,EAAoBjH,EAAMyM,QAAUzM,EAAMyM,MACvDpN,MAAOyI,EAAcS,EAAUiK,MAAmB7L,EAAsB,GAAK4B,EAAUiK,GACvFc,IAAKT,EACLU,QAxBQ,WACZV,EAASW,QAAQC,aA2BnBc,GAAiB,SAAAvU,GAAU,IAAD,EAEOuB,IAFP,mBAErBgH,EAFqB,KAEVvE,EAFU,KAGtB6O,EAAWC,mBAWjB,OAAO,qBAAK9R,MAAO,CACfb,OAAQ,GACRsS,SAAU,IACV9M,SAAU,EACV+M,UAAW,KAJR,SAOH,uBACIK,KAAK,SACL/R,MAAO,CACHN,MAAO,OACPsS,YAAa,GACbC,WAAY,EACZC,cAAe,GAEnBC,QAxBe,SAAAnO,GACnBA,EAAEoO,OAAO/T,MAAQ2R,EAAiBhM,EAAEoO,OAAO/T,OAC3C2E,EAAc,gBAAGhE,EAAMwU,SAA8B,MAAnBxP,EAAEoO,OAAO/T,WAAgB+C,EAAY4C,EAAEoO,OAAO/T,SAuB5E+F,YAAapF,EAAMV,MACnBD,Md/H0B,Ic+HnB2R,EAAiBzI,EAAUvI,EAAMwU,WAAwC,GAAKjM,EAAUvI,EAAMwU,UACrGlB,IAAKT,EACLU,QAvBQ,WACZV,EAASW,QAAQC,aA0BnBgB,GAAmB,WAAO,IAAD,EAEQlT,IAFR,mBAEpBgH,EAFoB,KAETvE,EAFS,KAQ3B,OAAO,cAAC,IAAD,CACH3E,MAAOwI,EAAmBU,EAAUzB,YACpCpB,OAAQnD,EAAe,CAAEoD,SAAU,EAAG8M,SAAU,IAAKC,UAAW,MAChE1P,MAAOD,EACPkB,QAAShF,OAAO+O,OAAOpH,GACvB+L,cAAc,EACd5N,SAViB,SAAAC,GACjBhB,EAAc,CAAE8C,WAAY9B,EAAE3F,QAAU2H,EAA0B3H,WAAQ+C,EAAY4C,EAAE3F,YAY1FqV,GAAwB,WAAO,IAAD,EAEGnT,IAFH,mBAEzBgH,EAFyB,KAEdvE,EAFc,KAG1B6O,EAAWC,mBAWjB,OAAO,qBAAK9R,MAAO,CACfb,OAAQ,GACRsS,SAAU,IACV9M,SAAU,EACV+M,UAAW,KAJR,SAOH,uBACIK,KAAK,SACLM,KAAM,EACNrS,MAAO,CACHN,MAAO,OACPsS,YAAa,GACbC,WAAY,EACZC,cAAe,GAEnBC,QAzBa,SAAAnO,GACjBA,EAAEoO,OAAO/T,MAAQ6I,EAAwBlD,EAAEoO,OAAO/T,OAClD2E,EAAc,CAAEoN,Wd5JU,Ic4JEpM,EAAEoO,OAAO/T,WAA+B+C,EAAY4C,EAAEoO,OAAO/T,SAwBrF+F,YAAa,eACb/F,MdrLsB,IcqLf6I,EAAwBK,EAAU6I,YAAqC,GAAKlJ,EAAwBK,EAAU6I,YACrHkC,IAAKT,EACLU,QAxBQ,WACZV,EAASW,QAAQC,aA4BV,SAASkB,GAAkB3U,GAEtC,OAAO,cAAC4U,GAAA,EAAD,UACH,eAACC,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,OAAN,CAAa9T,MAAO,CAAE2B,QAAS,GAA/B,UACI,cAACiS,GAAA,EAAUG,OAAX,CACIC,GAAIhB,KACJxD,QAAQ,OACRyE,SAAS,qBACTjU,MAAO,CAAE2B,QAAS,UAAWM,aAAc,EAAG9C,OAAQ,GAJ1D,uCAOA,cAAC,GAAD,IACA,cAAC,GAAD,OAEJ,cAACyU,GAAA,EAAUM,SAAX,CAAoBD,SAAS,qBAA7B,SACI,eAACJ,GAAA,EAAKM,KAAN,WACI,sDACA,cAAC,GAAD,IACA,oDACA,cAAC,GAAD,IACA,uGACA,cAAC,GAAD,IACA,oDAAuBxO,EAAvB,OACA,cAAC,GAAD,CAAa8F,MAAM,SACnB,cAAC,GAAD,CAAaA,MAAM,YACnB,cAAC,GAAD,CAAaA,MAAM,eACnB,cAAC,GAAD,CAAaA,MAAM,eACnB,cAAC,GAAD,CAAaA,MAAM,YACnB,2DACA,cAAC,GAAD,CAAgBnN,MAAM,oCAAoCkV,SAAS,YACnE,8DACA,cAAC,GAAD,CAAgBlV,MAAM,oCAAoCkV,SAAS,qB,MCtPxE,SAASY,KAEtB,OACE,eAAC,IAAD,CAAQC,SAAUlU,mBAAlB,UACE,eAACyS,EAAA,EAAD,CAAQ0B,GAAG,OAAO9E,QAAQ,OAAO+E,OAAO,KAAKC,iBAAe,EAAC9L,UAAU,OAAvE,UACE,cAACgK,GAAD,IACA,cAACE,EAAA,EAAOmB,OAAR,CAAeU,gBAAc,mBAAmB/L,UAAU,SAC1D,eAACkK,EAAA,EAAOsB,SAAR,CAAiBpJ,GAAG,mBAApB,UACE,cAACpI,EAAD,IACA,sBAAK1C,MAAO,CAAE6I,QAAS,OAAQ6I,UAAW,IAAK/M,SAAU,EAAG+P,cAAe,UAA3E,UACE,8BAAK,mBAAG1U,MAAO,CAAE0O,MAAO,SAAnB,yBAGL,sBAAK1O,MAAO,CAAE6I,QAAS,OAAQlE,SAAU,GAAzC,UACE,cAAC4M,GAAD,IACA,cAACK,GAAD,UAEJ,sBAAK5R,MAAO,CAAE6I,QAAS,OAAQ6I,UAAW,IAAK/M,SAAU,EAAG+P,cAAe,UAA3E,UACE,8BAAK,mBAAG1U,MAAO,CAAE0O,MAAO,SAAnB,2BAGL,sBAAK1O,MAAO,CAAE6I,QAAS,OAAQlE,SAAU,GAAzC,UACE,cAAC4M,GAAD,CAAeC,aAAa,gBAC5B,cAACI,GAAD,CAAiBJ,aAAa,+BAItC,cAACmC,GAAD,IACA,eAACgB,EAAA,EAAD,CAAWjM,UAAU,gBAArB,UACE,cAAC0I,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAOuD,KAAK,IAAIhG,SAAU,cAACkB,GAAD,UAG9B,cAACsB,EAAA,EAAD,CAAK1I,UAAU,SAAf,SACE,eAAC2I,EAAA,EAAD,CAAK3I,UAAU,kBAAf,UAAiC,uBAAjC,4GACwD,mBAAGmM,KAAK,wDAAR,wBADxD,gBACmJ,uBADnJ,gEAE+D,mBAAGA,KAAK,iEAAR,4BAF/D,eClCVC,IAASC,OACL,qBAAKrM,UAAU,MAAf,SAAqB,cAAC,GAAD,MACvBsM,SAASC,eAAe,W","file":"static/js/main.aa656855.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData.items)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","import gameData from \"../parsed_data.json\"\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, offsetMargin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...gameData.textures[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                (offsetMargin || 0) + margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                (offsetMargin || 0) + margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (customProvided) => {\r\n    return {\r\n        option: provided => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n        }),\r\n        control: provided => ({\r\n            ...provided,\r\n            borderColor: \"gray\",\r\n        }),\r\n        container: provided => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...customProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <Option {...props}>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n      offsetMargin={-18}\r\n    />\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexGrow: 1, marginTop: 34})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export const DEFAULT_REPUTATION = 0\r\nexport const STORE_BALANCE_MULTIPLIERS = {\r\n    full: { value: 'full', label: 'Initial store multiplier (*100%)', numeric: 1. },\r\n    half: { value: 'half', label: 'Below half of initial balance (*75%)', numeric: .75 },\r\n    quarter: { value: 'quarter', label: 'Below quarter of initial balance (*20%)', numeric: .2 },\r\n}\r\nexport const DEFAULT_STORE_BALANCE_MULTIPLIER = STORE_BALANCE_MULTIPLIERS.full\r\nexport const OUTPOST_OPTIONS = {\r\n    city: { value: 'city', label: 'Colony' },\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n}\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.city\r\nexport const DEFAULT_SKILL_LEVEL = 20\r\nexport const FABRICATOR_OPTIONS = {\r\n    all: { value: 'all', label: 'All' },\r\n    fabricator: { value: 'fabricator', label: 'Fabricator' },\r\n    medicalfabricator: { value: 'medicalfabricator', label: 'Medical Fabricator' },\r\n}\r\nexport const DEFAULT_FABRICATOR_OPTION = FABRICATOR_OPTIONS.all\r\nexport const ENGLISH_SKILL_NAMES = {\r\n    helm: \"Helm\",\r\n    weapons: \"Weapons\",\r\n    mechanical: \"Mechanical Engineering\",\r\n    electrical: \"Electrical Engineering\",\r\n    medical: \"Medical\",\r\n    initiative: \"Initiative\",\r\n    courage: \"Courage\",\r\n}\r\nexport const DEFAULT_UPGRADE_LEVELS = 0\r\nexport const DEFAULT_DIFFICULTY = 0\r\n","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import { FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION } from '../globals'\r\n\r\nexport default function validateFabricator (input) {\r\n    return FABRICATOR_OPTIONS[input] || DEFAULT_FABRICATOR_OPTION\r\n}\r\n","import { DEFAULT_SKILL_LEVEL } from '../globals'\r\n\r\nexport default function validateSkill (input) {\r\n    let parsed = parseInt(input)\r\n    return Math.max(Math.min(isNaN(parsed) ? DEFAULT_SKILL_LEVEL : parsed, 200), 0)\r\n}\r\n","import { DEFAULT_UPGRADE_LEVELS } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_UPGRADE_LEVELS, 10), 0)\r\n}\r\n","import { STORE_BALANCE_MULTIPLIERS, DEFAULT_STORE_BALANCE_MULTIPLIER } from '../globals'\r\n\r\nexport default function validateStoreBalance (input) {\r\n    return STORE_BALANCE_MULTIPLIERS[input] || DEFAULT_STORE_BALANCE_MULTIPLIER\r\n}\r\n","import { DEFAULT_DIFFICULTY } from '../globals'\r\n\r\nexport default function validateDifficultyLevel (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_DIFFICULTY, 100), 0)\r\n}\r\n","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst getRGB = value => {\r\n    const positive = Math.min(value > 0 ? value : 0, 200)\r\n    const negative = Math.min(value < 0 ? -value : 0, 200)\r\n    return `rgb(${255-positive}, ${255-negative}, ${255-negative-positive})`\r\n}\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const size = 60 || props.size\r\n\r\n    const getLink = () => {\r\n        let newParams = {...getParams, identifier: props.identifier}\r\n        return '/?' + Object.keys(newParams).map(key => key + '=' + newParams[key]).join('&');\r\n    }\r\n\r\n    return <Link\r\n        to={getLink()}\r\n    >\r\n        <div style={{ backgroundColor: props.rating && getRGB(props.rating), height: size }}>\r\n            <TextureLoader\r\n                size={size}\r\n                file={props.item.texture}\r\n                sourcerect={props.item.sourcerect}\r\n                margin={0}\r\n            />\r\n        </div>\r\n    </Link>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport gameData from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport ClickableItem from '../Components/ClickableItem'\r\nimport { ENGLISH_SKILL_NAMES, FABRICATOR_OPTIONS } from '../globals'\r\n\r\nconst data = gameData.items\r\nconst rnd = price => Math.floor(price)\r\nconst compareItems = (a, b) => a.rating < b.rating ? 1 : a.rating === b.rating ? 0 : -1\r\n\r\nconst InlineItem = props => {\r\n    return <div>\r\n        <ClickableItem\r\n            item={props.item}\r\n            identifier={props.identifier}\r\n            rating={props.additionalRating}\r\n        /><b>{(props.prefix || \"\") + props.rating + (props.postfix || \"\")}</b></div>\r\n}\r\n\r\nconst RatedItems = props => {\r\n    return props.items.length ? <>\r\n        <h5 className=\"mb-0\">{props.header}</h5><small>{props.explanation}</small>\r\n        <div className=\"py-4\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {props.items.sort(compareItems).map(\r\n                obj => <InlineItem key={obj.identifier} identifier={obj.identifier} item={obj.item} rating={obj.rating} postfix={props.postfix} />\r\n            )}\r\n        </div></> : <></>\r\n}\r\n\r\nconst calculateItem = (item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty) => {\r\n\r\n    const getOutpostData = (item, location) => item.price?.modified?.[location]\r\n\r\n    const getOutpostMultiplier = (item, location) => getOutpostData(item, location)?.multiplier || 1\r\n\r\n    const hasPriceData = item => item.price?.default !== undefined\r\n\r\n    const isSoldThere = item => {\r\n        const outpostData = getOutpostData(item, outpost)\r\n        return hasPriceData(item) && item.price.minleveldifficulty <= leveldifficulty && (\r\n            (item.price.soldeverywhere !== \"false\") ||\r\n            (outpostData && (outpostData.sold !== \"false\"))\r\n        )\r\n    }\r\n\r\n    const getBuyingPrice = item => {\r\n        if (isSoldThere(item)) return Math.max(rnd(\r\n            rnd(\r\n                item.price.default * getOutpostMultiplier(item, outpost)\r\n            ) * (1 - reputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getSellingPrice = item => {\r\n        if (hasPriceData(item)) return Math.max(rnd(\r\n            rnd(\r\n                rnd(item.price.default * getOutpostMultiplier(item, destoutpost)) * .8 * sellmultiplier\r\n            ) * (1 + destreputation * .001)\r\n        ), 1)\r\n    }\r\n\r\n    const getFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getBuyingPrice(data[id])) || Infinity) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getDeconstructionProfit = (item, buyingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (buyingprice || Infinity)\r\n\r\n    const getSellFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getSellDeconstructionProfit = (item, sellingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (sellingprice || 0)\r\n\r\n    const getRealFabricationTime = item => {\r\n        if (item.skills === undefined) return item.fabricate_time / 2\r\n        const degreeOfSuccess = (Object.entries(item.skills).reduce(\r\n            (sum, [skill, level]) =>\r\n                sum + skills[skill] - level, 0\r\n        ) / Object.keys(item.skills).length + 100) / 200\r\n        const t = degreeOfSuccess < .5 ? degreeOfSuccess * degreeOfSuccess : degreeOfSuccess * 2\r\n        return item.fabricate_time / (Math.pow(1.05, upgrades.fabricator)) / Math.max(Math.min(t, 2), .01)\r\n    }\r\n\r\n    const getRealDeconstructionTime = item => item.deconstruct_time / (Math.pow(1.05, upgrades.deconstructor))\r\n\r\n    if (item === undefined) {\r\n        const [trade, fabr, sellFabr, dec, sellDec] = [[], [], [], [], []]\r\n\r\n        const usefulMats = {}\r\n\r\n        const updateUsefulMaterials = ingredients => {\r\n            for (const ingredientId in ingredients) {\r\n                let ingredient = data[ingredientId]\r\n                if (getBuyingPrice(ingredient)) {\r\n                    if (ingredientId in usefulMats) {\r\n                        usefulMats[ingredientId].rating += 1\r\n                    } else {\r\n                        usefulMats[ingredientId] = { item: ingredient, identifier: ingredientId, rating: 1 }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [identifier, item] of Object.entries(data)) {\r\n\r\n            let buyingprice = getBuyingPrice(item)\r\n            let sellingprice = getSellingPrice(item)\r\n            let tradeProfit = sellingprice - buyingprice\r\n\r\n            if (tradeProfit > 0) {\r\n                trade.push({ item, identifier, rating: Math.round(1000 * tradeProfit / buyingprice) / 10 })\r\n            }\r\n\r\n            let fabrProfit = item.fabricate ? Math.round(100 *\r\n                getFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (fabricatortypes.value === \"all\" || (item.fabricator_types || \"\").split(\",\").includes(fabricatortypes.value)) {\r\n                if (fabrProfit > 0) {\r\n                    fabr.push({ item, identifier, rating: fabrProfit })\r\n                    updateUsefulMaterials(item.fabricate)\r\n\r\n                } else if (fabrProfit === -Infinity) {\r\n                    fabrProfit = item.fabricate ? Math.round(100 *\r\n                        getSellFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n                    ) / 100 : 0\r\n                    if (fabrProfit > 0) {\r\n                        sellFabr.push({ item, identifier, rating: fabrProfit })\r\n                        updateUsefulMaterials(item.fabricate)\r\n                    }\r\n                }\r\n            }\r\n\r\n            let decProfit = item.deconstruct ? Math.round(100 *\r\n                getDeconstructionProfit(item, buyingprice) / getRealDeconstructionTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (decProfit > 0) {\r\n                dec.push({ item, identifier, rating: decProfit })\r\n\r\n            } else if (decProfit === -Infinity) {\r\n                decProfit = item.deconstruct ? Math.round(100 *\r\n                    getSellDeconstructionProfit(item, sellingprice) / getRealDeconstructionTime(item)\r\n                ) / 100 : 0\r\n                if (decProfit > 0) {\r\n                    sellDec.push({ item, identifier, rating: decProfit })\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            homepageResults: <>\r\n                <RatedItems\r\n                    items={trade}\r\n                    postfix=\"%\"\r\n                    header=\"Trading investment returns\"\r\n                    explanation=\"(with no crafting involved)\" />\r\n                <RatedItems\r\n                    items={Object.values(usefulMats)}\r\n                    header=\"Useful crafting materials\"\r\n                    explanation=\"(involved in N profitable recipes and sold here)\" />\r\n                <RatedItems\r\n                    items={fabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Fabrication profits per fabrication time\"\r\n                    explanation=\"(departure sells ingredients)\" />\r\n                <RatedItems\r\n                    items={sellFabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Other fabrication profits\"\r\n                    explanation=\"(you have to acquire the ingredients through means other than trading)\" />\r\n                <RatedItems\r\n                    items={dec}\r\n                    postfix=\"/s\"\r\n                    header=\"Deconstruction profits per deconstruction time\"\r\n                    explanation=\"(departure sells those items)\" />\r\n                <RatedItems\r\n                    items={sellDec}\r\n                    postfix=\"/s\"\r\n                    header=\"Other deconstruction profits\"\r\n                    explanation=\"(you have to acquire the item through means other than trading)\" />\r\n            </>\r\n        }\r\n    }\r\n\r\n    const buyingprice = getBuyingPrice(item)\r\n    const sellingprice = getSellingPrice(item)\r\n\r\n    const getColorCodedUsedIn = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.used_in || {}).map(\r\n                ([usedInId, amount]) =>\r\n                ([usedInId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellFabricationProfit(\r\n                        data[usedInId], getSellingPrice(data[usedInId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const getColorCodedScrappedFrom = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.scrapped_from || {}).map(\r\n                ([scrappedFromId, amount]) =>\r\n                ([scrappedFromId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellDeconstructionProfit(\r\n                        data[scrappedFromId], getSellingPrice(data[scrappedFromId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    return {\r\n        buyingprice, sellingprice,\r\n        fabricateTime: (Math.round(100 * getRealFabricationTime(item)) / 100) || undefined,\r\n        fabricationBatch: item.fabrication_batch || 1.,\r\n        deconstructTime: (Math.round(100 * getRealDeconstructionTime(item)) / 100) || undefined,\r\n        randomDeconstruction: item.random_deconstruction ? \"yes\" : undefined,\r\n        minAmt: getOutpostData(item, outpost)?.min_amt,\r\n        tradingProfit: (sellingprice === undefined || buyingprice === undefined) ?\r\n            undefined : sellingprice - buyingprice,\r\n        fabricationProfit: getFabricationProfit(item, sellingprice),\r\n        deconstructionProfit: getDeconstructionProfit(item, buyingprice),\r\n        sellFabricationProfit: getSellFabricationProfit(item, sellingprice),\r\n        sellDeconstructionProfit: getSellDeconstructionProfit(item, sellingprice),\r\n        outpostmultiplier: getOutpostMultiplier(item, outpost),\r\n        destoutpostmultiplier: getOutpostMultiplier(item, destoutpost),\r\n        usedIn: getColorCodedUsedIn(),\r\n        scrappedFrom: getColorCodedScrappedFrom(),\r\n        minleveldifficulty: item.price?.minleveldifficulty || undefined,\r\n    }\r\n}\r\n\r\nconst ProfitText = props => {\r\n    if (props.profit === -Infinity) return <small>Source item(s) cannot be bought at departure</small>\r\n    const profitable = props.profit >= 0\r\n    return <span>{profitable ? \"Profit\" : \"Loss\"}: <b style={{\r\n        color: profitable ? \"green\" : \"red\"\r\n    }}>{Math.round((profitable ? props.profit : -props.profit) * 100) / 100}</b> <span className=\"text-muted\">\r\n        ({Math.round(props.profit/props.time*100)/100}/s) {props.children}\r\n    </span></span>\r\n}\r\n\r\nconst BlockWithItems = props => {\r\n    return Object.keys(props.itemsObj || {}).length ? (\r\n        <div className=\"mt-2\">\r\n            <h5>{props.mainText}</h5>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n                {Object.entries(props.itemsObj).map(\r\n                    ([identifier, value]) =>\r\n                        <InlineItem\r\n                            key={identifier}\r\n                            item={data[identifier]}\r\n                            identifier={identifier}\r\n                            rating={props.colorCoded ? value.amount : value}\r\n                            additionalRating={props.colorCoded && value.additionalRating}\r\n                            prefix=\"x \" />\r\n                )}\r\n            </div>\r\n            {props.children}\r\n        </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const destoutpost = validateOutpost(getParams.destoutpost).value\r\n    const destreputation = validateReputation(getParams.destreputation)\r\n    const fabricatortypes = validateFabricator(getParams.fabricator)\r\n    const skills = {\r\n        helm: validateSkill(getParams.helm),\r\n        weapons: validateSkill(getParams.weapons),\r\n        mechanical: validateSkill(getParams.mechanical),\r\n        electrical: validateSkill(getParams.electrical),\r\n        medical: validateSkill(getParams.medical),\r\n    }\r\n    const upgrades = {\r\n        fabricator: validateUpgrades(getParams.fabrlvl),\r\n        deconstructor: validateUpgrades(getParams.declvl),\r\n    }\r\n    const sellmultiplier = validateStoreBalance(getParams.balance).numeric\r\n    const leveldifficulty = validateDifficultyLevel(getParams.difficulty)\r\n\r\n    const calcData = calculateItem(item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty)\r\n\r\n    if (item === undefined) return {\r\n        noItem: true,\r\n        ...calcData,\r\n    }\r\n    return {\r\n        displayName: item.display_name,\r\n        fabricatorTypes: item.fabricator_types?.split(\",\").map(name => FABRICATOR_OPTIONS[name]?.label || name).join(\", \"),\r\n        skills: Object.entries(item.skills || {}).map(\r\n            ([k, v], i) => <div key={i} style={{marginBottom: 5}}>{`${ENGLISH_SKILL_NAMES[k] || k}: ${v}`}</div>\r\n        ),\r\n        ...calcData,\r\n        fabricationBlock: <BlockWithItems itemsObj={item.fabricate} mainText=\"Fabricated from\">\r\n            <ProfitText profit={calcData.fabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellFabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you find the ingredients en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        deconstuctionBlock: <BlockWithItems itemsObj={item.deconstruct} mainText=\"Deconstructed to\">\r\n            <ProfitText profit={calcData.deconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellDeconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you find the item en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        usedinBlock: <BlockWithItems itemsObj={calcData.usedIn} mainText=\"Used in\" colorCoded />,\r\n        scrappedfromBlock: <BlockWithItems itemsObj={calcData.scrappedFrom} mainText=\"Scrapped from\" colorCoded />,\r\n        refilledWithBlock: <BlockWithItems itemsObj={item.refilled_with} mainText=\"Refilled with\">\r\n            <small className=\"text-muted\">(deconstruction may not yield resources</small><br />\r\n            <small className=\"text-muted\">if an item is partially depleted)</small>\r\n        </BlockWithItems>,\r\n        image: <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />,\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst TableData = props => {\r\n    return props.value !== props.missingValue ?\r\n        <tr>\r\n            <td>{props.children}</td>\r\n            <td>{props.value}</td>\r\n        </tr> : <></>\r\n}\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n            <tr>\r\n                <th colSpan=\"2\">\r\n                    <div style={{\r\n                        border: \"1.5px solid #454d55\",\r\n                        borderRadius: \"10px\",\r\n                        display: \"inline-block\",\r\n                        padding: \"9px 8px 10px 10px\",\r\n                    }}>{props.calculator.image}</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <TableData value={props.calculator.tradingProfit}>Trading margin</TableData>\r\n            <TableData value={props.calculator.buyingprice}>Buying price</TableData>\r\n            <TableData value={props.calculator.sellingprice}>Selling price</TableData>\r\n            <TableData value={props.calculator.minAmt}>Minimal amount sold at departure</TableData>\r\n            <TableData value={props.calculator.outpostmultiplier} missingValue={1}>Departure multiplier</TableData>\r\n            <TableData value={props.calculator.destoutpostmultiplier} missingValue={1}>Destination multiplier</TableData>\r\n            <TableData value={props.calculator.fabricateTime}>Fabrication time</TableData>\r\n            <TableData value={props.calculator.fabricatorTypes}>Fabricator type(s)</TableData>\r\n            <TableData value={props.calculator.fabricationBatch} missingValue={1.}>Fabrication batch</TableData>\r\n            <TableData value={props.calculator.deconstructTime}>Deconstruction time</TableData>\r\n            <TableData value={props.calculator.randomDeconstruction}>Deconstruction is random</TableData>\r\n            <TableData value={props.calculator.skills?.length ? props.calculator.skills : undefined }>Fabrication skills</TableData>\r\n            <TableData value={props.calculator.minleveldifficulty}>Minimum difficulty level</TableData>\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.noItem) return calculatorResults.homepageResults\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n                {calculatorResults.refilledWithBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"outpost\"\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ [getParamName]: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams[getParamName])}\r\n    styles={generateStyles({flexGrow: 1, minWidth: 120, flexBasis: 120})}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport { useRef } from \"react\"\r\n\r\nexport default function ReputationInput(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n  const inputRef = useRef()\r\n\r\n  const getParamName = props.getParamName || \"reputation\"\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ [getParamName]: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  const onWheel = () => {\r\n    inputRef.current.blur()\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    minWidth: 120,\r\n    flexGrow: 1,\r\n    flexBasis: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams[getParamName]) || \"\"}\r\n      step={5}\r\n      ref={inputRef}\r\n      onWheel={onWheel}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand className=\"mt-3\">\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { useState } from 'react'\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport {\r\n    DEFAULT_SKILL_LEVEL,\r\n    FABRICATOR_OPTIONS,\r\n    DEFAULT_FABRICATOR_OPTION,\r\n    ENGLISH_SKILL_NAMES,\r\n    DEFAULT_UPGRADE_LEVELS,\r\n    STORE_BALANCE_MULTIPLIERS,\r\n    DEFAULT_STORE_BALANCE_MULTIPLIER,\r\n    DEFAULT_DIFFICULTY,\r\n} from '../globals'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { useRef } from \"react\"\r\n\r\nconst OutpostSwapper = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            outpost: getParams.destoutpost,\r\n            destoutpost: getParams.outpost,\r\n            reputation: getParams.destreputation,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Swap outposts\r\n    </Button>\r\n}\r\n\r\nconst OutpostRepeater = () => {\r\n    \r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            destoutpost: getParams.outpost,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Same destination\r\n    </Button>\r\n\r\n}\r\n\r\nconst SellingPriceMultPicker = props => {\r\n\r\n        const [getParams, pushGetParams] = useGetParams()\r\n    \r\n        const handleChange = e => {\r\n            pushGetParams({ balance: e.value === DEFAULT_STORE_BALANCE_MULTIPLIER.value ? undefined : e.value })\r\n        }\r\n    \r\n        return <Select\r\n            value={validateStoreBalance(getParams.balance)}\r\n            styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n            theme={customThemeOverrides}\r\n            options={Object.values(STORE_BALANCE_MULTIPLIERS)}\r\n            isSearchable={false}\r\n            onChange={handleChange} />\r\n    }\r\n\r\nconst SkillPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const [previousValue, changeValue] = useState(validateSkill(getParams[props.skill]))\r\n    const inputRef = useRef()\r\n\r\n    const getParamName = props.skill\r\n\r\n    const updateSkill = e => {\r\n        if (parseInt(previousValue) === DEFAULT_SKILL_LEVEL && (e.target.value === \"10\" || e.target.value === \"-10\")) {\r\n            e.target.value = DEFAULT_SKILL_LEVEL + parseInt(e.target.value)\r\n        }\r\n        e.target.value = validateSkill(e.target.value)\r\n        changeValue(e.target.value)\r\n        pushGetParams({ [props.skill]: parseInt(e.target.value) === DEFAULT_SKILL_LEVEL ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            step={10}\r\n            onInput={updateSkill}\r\n            placeholder={ENGLISH_SKILL_NAMES[props.skill] || props.skill}\r\n            value={validateSkill(getParams[getParamName]) === DEFAULT_SKILL_LEVEL ? \"\" : getParams[getParamName]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst UpgradesPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const updateUpgrades = e => {\r\n        e.target.value = validateUpgrades(e.target.value)\r\n        pushGetParams({ [props.getparam]: e.target.value === \"0\" ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={updateUpgrades}\r\n            placeholder={props.label}\r\n            value={validateUpgrades(getParams[props.getparam]) === DEFAULT_UPGRADE_LEVELS ? \"\" : getParams[props.getparam]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst FabricatorPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleChange = e => {\r\n        pushGetParams({ fabricator: e.value === DEFAULT_FABRICATOR_OPTION.value ? undefined : e.value })\r\n    }\r\n\r\n    return <Select\r\n        value={validateFabricator(getParams.fabricator)}\r\n        styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n        theme={customThemeOverrides}\r\n        options={Object.values(FABRICATOR_OPTIONS)}\r\n        isSearchable={false}\r\n        onChange={handleChange} />\r\n}\r\n\r\nconst LevelDifficultyPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const handleChange = e => {\r\n        e.target.value = validateDifficultyLevel(e.target.value)\r\n        pushGetParams({ difficulty: e.target.value === DEFAULT_DIFFICULTY ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            step={5}\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={handleChange}\r\n            placeholder={'Difficulty %'}\r\n            value={validateDifficultyLevel(getParams.difficulty) === DEFAULT_DIFFICULTY ? \"\" : validateDifficultyLevel(getParams.difficulty)}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\n\r\nexport default function AdditionalFilters(props) {\r\n\r\n    return <Accordion>\r\n        <Card>\r\n            <Card.Header style={{ padding: 5 }}>\r\n                <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"dark\"\r\n                    eventKey=\"additional-filters\"\r\n                    style={{ padding: \"1px 5px\", borderRadius: 0, margin: 5 }}>\r\n                    Toggle additional options\r\n                </Accordion.Toggle>\r\n                <OutpostSwapper />\r\n                <OutpostRepeater />\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"additional-filters\">\r\n                <Card.Body>\r\n                    <b>Sell price multiplier</b>\r\n                    <SellingPriceMultPicker />\r\n                    <b>Allowed fabricators</b>\r\n                    <FabricatorPicker />\r\n                    <b>Location difficulty level (certain items are not sold at lower levels)</b>\r\n                    <LevelDifficultyPicker />\r\n                    <b>Skills (default is {DEFAULT_SKILL_LEVEL})</b>\r\n                    <SkillPicker skill=\"helm\" />\r\n                    <SkillPicker skill=\"weapons\" />\r\n                    <SkillPicker skill=\"mechanical\" />\r\n                    <SkillPicker skill=\"electrical\" />\r\n                    <SkillPicker skill=\"medical\" />\r\n                    <b>Fabrication speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"fabrlvl\" />\r\n                    <b>Deconstruction speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"declvl\" />\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    </Accordion>\r\n}","import { Container, Row, Col, Navbar } from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo, AdditionalFilters } from './BarotraumaCalc'\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" defaultExpanded className=\"pb-4\" >\r\n        <BrandNavLogo />\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mt-3\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <SearchBar />\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Departure\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect />\r\n              <ReputationInput />\r\n            </div></div>\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Destination\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect getParamName=\"destoutpost\" />\r\n              <ReputationInput getParamName=\"destreputation\" />\r\n            </div></div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <AdditionalFilters />\r\n      <Container className=\"pt-4 bg-white\">\r\n        <Row>\r\n          <Col>\r\n            <Route path=\"/\" children={<PageContents />}></Route>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer\">\r\n          <Col className=\"text-muted py-4\"><hr />I do not claim any rights to images and data used.\r\n            This is simply a convenience tool for the game called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.14.6.0).<br />\r\n            If you have found a bug or have a suggestion for me, you can <a href=\"https://github.com/lifearoundfreaks/barotrauma-calc/issues/new\">start an issue</a>.</Col>\r\n        </Row>\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <div className=\"App\"><App/></div>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}