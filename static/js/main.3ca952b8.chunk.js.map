{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","store.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/Components/DefaultPage.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","App.js","index.js"],"names":["rawItems","initialState","createStore","state","action","type","aggregatedOptions","gameData","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","TEXTURE_DIMENTIONS","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","customProvided","option","provided","padding","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexBasis","flexGrow","maxMenuHeight","DefaultPage","OUTPOST_OPTIONS","outpost","city","research","military","mine","DEFAULT_OUTPOST_OPTION","validateReputation","min","parseInt","validateOutpost","ClickableItem","onClick","cursor","item","round","price","floor","ItemWithAmount","amount","FabricationBlock","fabricationObj","fabricate","keys","className","display","alignItems","justifyContent","flexWrap","DeconstuctionBlock","deconstructObj","deconstruct","UsedInBlock","usedinObj","used_in","ScrappedFromBlock","scrappedFromObj","scrapped_from","InfoTable","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","buyingprice","sellingprice","outpostmultiplier","PageContents","calculatorResults","getParams","missing","reputation","outpostData","modified","hasPriceData","default","isSoldThere","soldeverywhere","sold","outpostMultiplier","multiplier","displayName","reputationMultiplier","getBuyingPrice","getSellingPrice","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","getImage","useCalculator","Row","Col","md","OutpostSelect","minWidth","values","isSearchable","ReputationInput","paddingLeft","paddingTop","paddingBottom","onInput","target","BrandNavLogo","returnHomeGetParams","Navbar","Brand","to","textDecoration","color","App","basename","bg","expand","defaultExpanded","Toggle","aria-controls","Collapse","id","Container","path","children","href","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.3ca952b8.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","import { createStore } from 'redux'\r\n\r\nexport const actionTypes = {}\r\n\r\nconst initialState = {}\r\n\r\nconst rootReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n          return state\r\n      }\r\n}\r\n\r\nexport default createStore(rootReducer)\r\n","const TEXTURE_DIMENTIONS = {\r\n    \"AlienArtifact1.png\": [512, 512],\r\n    \"AlienMaterials.png\": [512, 512],\r\n    \"AlienPowerCell.png\": [128, 128],\r\n    \"alientools.png\": [128, 128],\r\n    \"button.png\": [128, 128],\r\n    \"containers.png\": [1024, 1024],\r\n    \"CreatureLoot.png\": [512, 256],\r\n    \"GrowablePlants_Temp.png\": [1024, 1024],\r\n    \"InventoryIconAtlas.png\": [1024, 1024],\r\n    \"InventoryIconAtlas2.png\": [512, 512],\r\n    \"LootablePlants.png\": [256, 512],\r\n    \"Medicines.png\": [512, 512],\r\n    \"pets.png\": [512, 512],\r\n    \"weapons_new.png\": [512, 512],\r\n    \"OutfitIcons.png\": [512, 512],\r\n    \"MiscJobGear\": [1024, 1024],\r\n    \"headgears.png\": [512, 512],\r\n}\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...TEXTURE_DIMENTIONS[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (customProvided) => {\r\n    return {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n        }),\r\n        container: (provided, state) => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...customProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n    />\r\n    <Option {...props}>\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for game items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexBasis: 0, flexGrow: 1})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export default function DefaultPage() {\r\n    return <>\r\n        <h4>Home page with some useful info will be here</h4>\r\n    </>\r\n}\r\n","export const DEFAULT_REPUTATION = 0\r\nexport const OUTPOST_OPTIONS = {\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    city: { value: 'city', label: 'Colony' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n}\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.outpost","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const pushGetParams = useGetParams()[1]\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({ identifier: props.identifier })\r\n    }\r\n\r\n    return <div\r\n        onClick={handleClick}\r\n        style={{ cursor: 'pointer' }}\r\n    >\r\n        <TextureLoader\r\n            size={60}\r\n            file={props.item.texture}\r\n            sourcerect={props.item.sourcerect}\r\n            margin={0}\r\n        />\r\n    </div>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport data from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport ClickableItem from '../Components/ClickableItem'\r\n\r\nconst round = price => Math.max(Math.floor(price), 1)\r\n\r\nconst ItemWithAmount = props => {\r\n    return <div>\r\n        <b>x {props.amount}</b>\r\n        <ClickableItem\r\n            item={data[props.identifier]}\r\n            identifier={props.identifier}\r\n        /></div>\r\n}\r\n\r\nconst FabricationBlock = props => {\r\n    const fabricationObj = props.item.fabricate || {}\r\n    return Object.keys(fabricationObj).length ? (<div className=\"mt-2\">\r\n        <h5>Fabricated from:</h5>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {Object.entries(fabricationObj).map(\r\n                ([identifier, amount]) => <ItemWithAmount key={identifier} identifier={identifier} amount={amount} />\r\n            )}\r\n        </div>\r\n    </div>) : <></>\r\n}\r\n\r\nconst DeconstuctionBlock = props => {\r\n    const deconstructObj = props.item.deconstruct || {}\r\n    return Object.keys(deconstructObj).length ? (<div className=\"mt-2\">\r\n    <h5>Deconstucted to:</h5>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {Object.entries(deconstructObj).map(\r\n                ([identifier, amount]) => <ItemWithAmount key={identifier} identifier={identifier} amount={amount} />\r\n            )}\r\n        </div>\r\n    </div>) : <></>\r\n}\r\n\r\nconst UsedInBlock = props => {\r\n    const usedinObj = props.item.used_in || {}\r\n    return Object.keys(usedinObj).length ? (<div className=\"mt-2\">\r\n    <h5>Used in:</h5>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {Object.entries(usedinObj).map(\r\n                ([identifier, amount]) => <ItemWithAmount key={identifier} identifier={identifier} amount={amount} />\r\n            )}\r\n        </div>\r\n    </div>) : <></>\r\n}\r\n\r\nconst ScrappedFromBlock = props => {\r\n    const scrappedFromObj = props.item.scrapped_from || {}\r\n    return Object.keys(scrappedFromObj).length ? (<div className=\"mt-2\">\r\n    <h5>Scrapped from:</h5>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {Object.entries(scrappedFromObj).map(\r\n                ([identifier, amount]) => <ItemWithAmount key={identifier} identifier={identifier} amount={amount} />\r\n            )}\r\n        </div>\r\n    </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n    if (item === undefined) return { missing: true }\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const outpostData = item.price?.modified?.[outpost]\r\n    const hasPriceData = item.price?.default !== undefined\r\n    const isSoldThere = (\r\n        hasPriceData && (\r\n            (item.price.soldeverywhere !== \"false\") ||\r\n            (outpostData && (outpostData.sold !== \"false\"))\r\n        )\r\n    )\r\n    const outpostMultiplier = outpostData?.multiplier || 1\r\n\r\n    const getImage = item => {\r\n        return <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />\r\n    }\r\n\r\n    const getBuyingPrice = () => {\r\n        const reputationMultiplier = 1 - reputation * .001\r\n        if (isSoldThere) return round(\r\n            item.price.default * outpostMultiplier * reputationMultiplier)\r\n    }\r\n\r\n    const getSellingPrice = () => {\r\n        const reputationMultiplier = .8 + reputation * .0008\r\n        if (hasPriceData) return round(\r\n            item.price.default * outpostMultiplier * reputationMultiplier)\r\n    }\r\n\r\n    return {\r\n        displayName: item.display_name,\r\n        buyingprice: getBuyingPrice(item),\r\n        sellingprice: getSellingPrice(item),\r\n        outpostmultiplier: outpostMultiplier,\r\n        // They are almost identical, maybe factor it out as one component?\r\n        fabricationBlock: <FabricationBlock item={item} />,\r\n        deconstuctionBlock: <DeconstuctionBlock item={item} />,\r\n        usedinBlock: <UsedInBlock item={item} />,\r\n        scrappedfromBlock: <ScrappedFromBlock item={item} />,\r\n        image: getImage(item),\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport DefaultPage from './DefaultPage'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n            <tr>\r\n                <th colSpan=\"2\">\r\n                    <div style={{\r\n                        border: \"1.5px solid #454d55\",\r\n                        borderRadius: \"10px\",\r\n                        display: \"inline-block\",\r\n                        padding: \"9px 8px 10px 10px\",\r\n                    }}>{props.calculator.image}</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>Buying price</td>\r\n                <td>{props.calculator.buyingprice}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Selling price</td>\r\n                <td>{props.calculator.sellingprice}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Local multiplier</td>\r\n                <td>{props.calculator.outpostmultiplier}</td>\r\n            </tr>\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.missing) return <DefaultPage />\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect() {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ outpost: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams.outpost)}\r\n    styles={generateStyles({ minWidth: 120 })}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\n\r\nexport default function ReputationInput() {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ reputation: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    flexBasis: 0,\r\n    minWidth: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams.reputation) || \"\"}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand>\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { Container, Row, Col, Navbar } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo } from './BarotraumaCalc'\nimport './App.css';\n\nexport default function App() {\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" defaultExpanded >\n        <BrandNavLogo />\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"my-1\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <SearchBar />\n        <ReputationInput />\n        <OutpostSelect />\n        </Navbar.Collapse>\n      </Navbar>\n      <Container className=\"pt-4 bg-white\">\n        <Row>\n          <Col>\n            <Route path=\"/\" children={<PageContents />}></Route>\n          </Col>\n        </Row>\n        <Row className=\"footer\">\n          <Col className=\"text-muted py-4\">I do not claim any rights to images and data used.\n            This is simply a convenience tool for the game\n            called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.11.0.10).</Col>\n        </Row>\n      </Container>\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport initialState from './store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={initialState}>\n    <div className=\"App\"><App/></div>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}