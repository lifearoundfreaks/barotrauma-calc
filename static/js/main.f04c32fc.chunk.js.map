{"version":3,"sources":["BarotraumaCalc/Utils/dataHandler.js","BarotraumaCalc/Components/TextureLoader.js","BarotraumaCalc/Hooks/useGetParams.js","BarotraumaCalc/Utils/selectTheme.js","BarotraumaCalc/Components/SearchBar.js","BarotraumaCalc/globals.js","BarotraumaCalc/Utils/validateReputation.js","BarotraumaCalc/Utils/validateOutpost.js","BarotraumaCalc/Utils/validateFabricator.js","BarotraumaCalc/Utils/validateSkill.js","BarotraumaCalc/Utils/validateUpgrades.js","BarotraumaCalc/Utils/validateStoreBalance.js","BarotraumaCalc/Utils/validateDifficultyLevel.js","BarotraumaCalc/Utils/getRGB.js","BarotraumaCalc/Components/ClickableItem.js","BarotraumaCalc/Hooks/useCalculator.js","BarotraumaCalc/Components/PageContents.js","BarotraumaCalc/Components/OutpostSelect.js","BarotraumaCalc/Components/ReputationInput.js","BarotraumaCalc/Components/BrandNavLogo.js","BarotraumaCalc/Components/AdditionalFilters.js","App.js","index.js"],"names":["rawItems","aggregatedOptions","gameData","items","Object","entries","map","key","value","label","display_name","searchstring","texture","sourcerect","convertToPxString","dimentions","parseFloat","join","TextureLoader","props","size","file","margin","offsetMargin","arbitrary","rect","split","X","Y","width","height","Math","max","sourcerectToObj","scaleFactor","style","backgroundPosition","backgroundImage","process","backgroundSize","textures","float","useGetParams","returnHomeLocation","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","toString","fromEntries","newValues","undefined","set","push","generateStyles","containerProvided","optionProvided","option","provided","padding","control","borderColor","container","customThemeOverrides","theme","borderRadius","colors","primary","primary25","primary50","Option","components","iconOption","data","SearchBar","useState","filteredOptions","updateFIlteredOptions","menuIsOpen","setMenuIsOpen","pushGetParams","options","onInputChange","newInput","length","input","Symbol","iterator","results","iter","nextOption","next","includes","toLowerCase","getSearchResults","onChange","e","identifier","DropdownIndicator","IndicatorSeparator","placeholder","noOptionsMessage","filterOption","createFilter","stringify","ignoreCase","styles","flexGrow","marginTop","maxMenuHeight","STORE_BALANCE_MULTIPLIERS","full","numeric","half","quarter","DEFAULT_STORE_BALANCE_MULTIPLIER","OUTPOST_OPTIONS","city","outpost","research","military","mine","base","lowest","highest","LOCATIONAL_OUTPOST_OPTIONS","DEFAULT_OUTPOST_OPTION","BASE_MULTIPLIER_OPTION","LOWEST_MULTIPLIER_OPTION","HIGHEST_MULTIPLIER_OPTION","DEFAULT_SKILL_LEVEL","FABRICATOR_OPTIONS","all","fabricator","medicalfabricator","DEFAULT_FABRICATOR_OPTION","ENGLISH_SKILL_NAMES","helm","weapons","mechanical","electrical","medical","initiative","courage","validateReputation","min","parseInt","validateOutpost","validateFabricator","validateSkill","parsed","isNaN","validateStoreBalance","validateDifficultyLevel","getRGB","positive","negative","ClickableItem","getParams","to","newParams","keys","getLink","backgroundColor","rating","item","rnd","price","floor","compareItems","a","b","InlineItem","additionalRating","prefix","postfix","RatedItems","className","header","explanation","display","alignItems","justifyContent","flexWrap","sort","obj","calculateItem","reputation","destoutpost","destreputation","fabricatortypes","skills","upgrades","sellmultiplier","leveldifficulty","getOutpostData","modified","getOutpostMultiplier","price_data","min_multiplier","max_multiplier","multiplier","hasPriceData","default","getBuyingPrice","soldsomewhere","outpostData","minleveldifficulty","soldeverywhere","sold","isSoldThere","getSellingPrice","getFabricationProfit","sellingprice","fabricate","reduce","sum","id","amt","Infinity","getDeconstructionProfit","buyingprice","deconstruct","getSellFabricationProfit","getSellDeconstructionProfit","getRealFabricationTime","fabricate_time","degreeOfSuccess","skill","level","t","pow","getRealDeconstructionTime","deconstruct_time","deconstructor","trade","fabr","sellFabr","dec","sellDec","usefulMats","updateUsefulMaterials","ingredients","ingredientId","ingredient","tradeProfit","round","fabrProfit","fabricator_types","decProfit","homepageResults","values","baseprice","pricesData","result","outpostType","fabricateTime","fabricationBatch","fabrication_batch","deconstructTime","randomDeconstruction","random_deconstruction","minAmt","min_amt","tradingProfit","fabricationProfit","deconstructionProfit","sellFabricationProfit","sellDeconstructionProfit","outpostmultiplier","destoutpostmultiplier","usedIn","used_in","usedInId","amount","scrappedFrom","scrapped_from","scrappedFromId","ProfitText","profit","profitable","color","time","children","BlockWithItems","itemsObj","mainText","colorCoded","TableData","missingValue","minWidth","PriceTableData","prices","baseprices","buycolor","sellcolor","InfoTable","overflowWrap","Table","striped","bordered","hover","variant","colSpan","border","calculator","image","Tabs","defaultActiveKey","fill","Tab","eventKey","title","fabricatorTypes","entry","PageContents","calculatorResults","validateUpgrades","fabrlvl","declvl","balance","difficulty","calcData","noItem","displayName","name","i","k","v","marginBottom","fabricationBlock","deconstuctionBlock","usedinBlock","scrappedfromBlock","refilledWithBlock","refilled_with","useCalculator","Row","Col","md","OutpostSelect","getParamName","flexBasis","isSearchable","ReputationInput","inputRef","useRef","type","paddingLeft","paddingTop","paddingBottom","onInput","target","step","ref","onWheel","current","blur","BrandNavLogo","returnHomeGetParams","Navbar","Brand","textDecoration","OutpostSwapper","Button","onClick","OutpostRepeater","SellingPriceMultPicker","SkillPicker","previousValue","changeValue","position","top","left","UpgradesPicker","getparam","FabricatorPicker","LevelDifficultyPicker","AdditionalFilters","ShowOptionsToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","Accordion","Card","Header","Collapse","Body","App","basename","bg","expand","defaultExpanded","Toggle","aria-controls","flexDirection","Container","path","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f04c32fc.chunk.js","sourcesContent":["import gameData from \"../parsed_data.json\"\r\n  \r\nconst getAggregatedOptions = (rawItems) => {\r\n    return Object.entries(rawItems).map(([key, value]) => {\r\n        return {\r\n            value: key,\r\n            label: value.display_name,\r\n            searchstring: value.searchstring,\r\n            texture: value.texture,\r\n            sourcerect: value.sourcerect,\r\n        }\r\n    })\r\n}\r\n\r\nconst aggregatedOptions = getAggregatedOptions(gameData.items)\r\n\r\nexport const getOptionsIterator = () => {\r\n    return aggregatedOptions[Symbol.iterator]()\r\n}\r\n","import gameData from \"../parsed_data.json\"\r\n\r\nconst convertToPxString = (...dimentions) => dimentions.map(\r\n    value => parseFloat(value) ? `${value}px` : value\r\n).join(\" \")\r\n\r\nconst sourcerectToObj = dimentions => {\r\n    let [X, Y, width, height] = dimentions.split(\",\").map(parseFloat)\r\n    return {X, Y, width, height, size: Math.max(width, height)}\r\n}\r\n\r\nexport default function TextureLoader(props) {\r\n    let {size, file, sourcerect, margin, offsetMargin, ...arbitrary} = props\r\n    let rect = sourcerectToObj(sourcerect)\r\n    let scaleFactor = (size - margin) / rect.size\r\n    return <div\r\n        style={{\r\n            width: convertToPxString(rect.width * scaleFactor),\r\n            height: convertToPxString(rect.height * scaleFactor),\r\n            backgroundPosition: convertToPxString(-rect.X * scaleFactor, -rect.Y * scaleFactor),\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/tilesets/${file})`,\r\n            backgroundSize: convertToPxString(\r\n                ...gameData.textures[file].map(value => value * scaleFactor)\r\n            ),\r\n            float: \"left\",\r\n            margin: convertToPxString(\r\n                (offsetMargin || 0) + margin + (rect.size - rect.height) * scaleFactor / 2,\r\n                (offsetMargin || 0) + margin + (rect.size - rect.width) * scaleFactor / 2\r\n            ),\r\n            ...arbitrary,\r\n        }}\r\n    />\r\n}","import { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function useGetParams(returnHomeLocation) {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(location.search);\r\n\r\n    const useEffect = (newValues) => {\r\n        for (const [key, value] of Object.entries(newValues)){\r\n            if (value === undefined) query.delete(key)\r\n            else query.set(key, value)\r\n        }\r\n        history.push(`/?${query.toString()}`)\r\n    }\r\n\r\n    if (returnHomeLocation) {query.delete('identifier')}\r\n\r\n    return [\r\n        returnHomeLocation ? `/?${query.toString()}` : Object.fromEntries(query.entries()),\r\n        useEffect\r\n    ]\r\n}","\r\nexport const OPTION_HEIGHT = 56\r\n\r\nexport const generateStyles = (containerProvided, optionProvided) => {\r\n    return {\r\n        option: provided => ({\r\n            ...provided,\r\n            padding: (OPTION_HEIGHT - 18) / 2,\r\n            ...optionProvided,\r\n        }),\r\n        control: provided => ({\r\n            ...provided,\r\n            borderColor: \"gray\",\r\n        }),\r\n        container: provided => ({\r\n            ...provided,\r\n            margin: 10,\r\n            ...containerProvided,\r\n        })\r\n    }\r\n}\r\n\r\nexport const customThemeOverrides = theme => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary: 'darkgray',\r\n        primary25: 'lightgray',\r\n        primary50: 'gray',\r\n    },\r\n})\r\n","\r\nimport React, { useState } from 'react'\r\nimport Select, { components, createFilter } from 'react-select'\r\nimport { getOptionsIterator } from '../Utils/dataHandler'\r\nimport TextureLoader from './TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { generateStyles, customThemeOverrides, OPTION_HEIGHT } from '../Utils/selectTheme'\r\n\r\nconst MAX_SEARCH_SUGGESTIONS = 5\r\n\r\nconst { Option } = components;\r\nconst iconOption = props => (\r\n  <>\r\n    <Option {...props}>\r\n    <TextureLoader\r\n      size={OPTION_HEIGHT}\r\n      file={props.data.texture}\r\n      sourcerect={props.data.sourcerect}\r\n      margin={5}\r\n      offsetMargin={-18}\r\n    />\r\n      {props.data.label}\r\n    </Option>\r\n  </>\r\n)\r\n\r\nconst getSearchResults = input => {\r\n  let [results, iter] = [[], getOptionsIterator()];\r\n  while (results.length < MAX_SEARCH_SUGGESTIONS) {\r\n    let nextOption = iter.next().value\r\n    if (nextOption === undefined) break\r\n    else if (nextOption.searchstring.includes(input.toLowerCase())) results.push(nextOption)\r\n  }\r\n  return results\r\n}\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [filteredOptions, updateFIlteredOptions] = useState([])\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const pushGetParams = useGetParams()[1]\r\n\r\n  const handleInputChange = newInput => {\r\n    if (newInput.length) {\r\n      updateFIlteredOptions(getSearchResults(newInput))\r\n      setMenuIsOpen(true)\r\n    } else {\r\n      updateFIlteredOptions([])\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({identifier: e.value})\r\n  }\r\n\r\n  return <Select\r\n    value={() => null}\r\n    options={filteredOptions}\r\n    onInputChange={handleInputChange}\r\n    onChange={handleChange}\r\n    components={{ Option: iconOption, DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n    menuIsOpen={menuIsOpen}\r\n    placeholder=\"Search for items by name\"\r\n    noOptionsMessage={() => \"No items were found.\"}\r\n    filterOption={createFilter({ stringify: option => option.data.searchstring, ignoreCase: true })}\r\n    styles={generateStyles({flexGrow: 1, marginTop: 34})}\r\n    maxMenuHeight={400}\r\n    theme={customThemeOverrides}\r\n  />\r\n}","export const DEFAULT_REPUTATION = 0\r\nexport const STORE_BALANCE_MULTIPLIERS = {\r\n    full: { value: 'full', label: 'Initial store multiplier (*100%)', numeric: 1. },\r\n    half: { value: 'half', label: 'Below half of initial balance (*75%)', numeric: .75 },\r\n    quarter: { value: 'quarter', label: 'Below quarter of initial balance (*20%)', numeric: .2 },\r\n}\r\nexport const DEFAULT_STORE_BALANCE_MULTIPLIER = STORE_BALANCE_MULTIPLIERS.full\r\nexport const OUTPOST_OPTIONS = {\r\n    city: { value: 'city', label: 'Colony' },\r\n    outpost: { value: 'outpost', label: 'Outpost' },\r\n    research: { value: 'research', label: 'Research' },\r\n    military: { value: 'military', label: 'Military' },\r\n    mine: { value: 'mine', label: 'Mine' },\r\n    base: { value: 'base', label: 'Default price' },\r\n    lowest: { value: 'lowest', label: 'Lowest price' },\r\n    highest: { value: 'highest', label: 'Highest price' },\r\n}\r\nexport const LOCATIONAL_OUTPOST_OPTIONS = [\r\n    'city',\r\n    'outpost',\r\n    'research',\r\n    'military',\r\n    'mine',\r\n]\r\nexport const DEFAULT_OUTPOST_OPTION = OUTPOST_OPTIONS.city\r\nexport const BASE_MULTIPLIER_OPTION = OUTPOST_OPTIONS.base\r\nexport const LOWEST_MULTIPLIER_OPTION = OUTPOST_OPTIONS.lowest\r\nexport const HIGHEST_MULTIPLIER_OPTION = OUTPOST_OPTIONS.highest\r\nexport const DEFAULT_SKILL_LEVEL = 100\r\nexport const MAX_SKILL_LEVEL = 100\r\nexport const FABRICATOR_OPTIONS = {\r\n    all: { value: 'all', label: 'All' },\r\n    fabricator: { value: 'fabricator', label: 'Fabricator' },\r\n    medicalfabricator: { value: 'medicalfabricator', label: 'Medical Fabricator' },\r\n}\r\nexport const DEFAULT_FABRICATOR_OPTION = FABRICATOR_OPTIONS.all\r\nexport const ENGLISH_SKILL_NAMES = {\r\n    helm: \"Helm\",\r\n    weapons: \"Weapons\",\r\n    mechanical: \"Mechanical Engineering\",\r\n    electrical: \"Electrical Engineering\",\r\n    medical: \"Medical\",\r\n    initiative: \"Initiative\",\r\n    courage: \"Courage\",\r\n}\r\nexport const DEFAULT_UPGRADE_LEVELS = 0\r\nexport const DEFAULT_DIFFICULTY = 0\r\n","import { DEFAULT_REPUTATION } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_REPUTATION, 100), -100)\r\n}\r\n","import { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\n\r\nexport default function validateOutpost (input) {\r\n    return OUTPOST_OPTIONS[input] || DEFAULT_OUTPOST_OPTION\r\n}\r\n","import { FABRICATOR_OPTIONS, DEFAULT_FABRICATOR_OPTION } from '../globals'\r\n\r\nexport default function validateFabricator (input) {\r\n    return FABRICATOR_OPTIONS[input] || DEFAULT_FABRICATOR_OPTION\r\n}\r\n","import { DEFAULT_SKILL_LEVEL, MAX_SKILL_LEVEL } from '../globals'\r\n\r\nexport default function validateSkill (input) {\r\n    let parsed = parseInt(input)\r\n    return Math.max(Math.min(isNaN(parsed) ? DEFAULT_SKILL_LEVEL : parsed, MAX_SKILL_LEVEL), 0)\r\n}\r\n","import { DEFAULT_UPGRADE_LEVELS } from '../globals'\r\n\r\nexport default function validateReputation (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_UPGRADE_LEVELS, 10), 0)\r\n}\r\n","import { STORE_BALANCE_MULTIPLIERS, DEFAULT_STORE_BALANCE_MULTIPLIER } from '../globals'\r\n\r\nexport default function validateStoreBalance (input) {\r\n    return STORE_BALANCE_MULTIPLIERS[input] || DEFAULT_STORE_BALANCE_MULTIPLIER\r\n}\r\n","import { DEFAULT_DIFFICULTY } from '../globals'\r\n\r\nexport default function validateDifficultyLevel (input) {\r\n    return Math.max(Math.min(parseInt(input) || DEFAULT_DIFFICULTY, 100), 0)\r\n}\r\n","export default function getRGB (value) {\r\n    const positive = Math.min(value > 0 ? value : 0, 200)\r\n    const negative = Math.min(value < 0 ? -value : 0, 200)\r\n    return `rgb(${255-positive}, ${255-negative}, ${255-negative-positive})`\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { Link } from 'react-router-dom'\r\nimport getRGB from '../Utils/getRGB'\r\n\r\n\r\nexport default function ClickableItem(props) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const size = 60 || props.size\r\n\r\n    const getLink = () => {\r\n        let newParams = {...getParams, identifier: props.identifier}\r\n        return '/?' + Object.keys(newParams).map(key => key + '=' + newParams[key]).join('&');\r\n    }\r\n\r\n    return <Link\r\n        to={getLink()}\r\n    >\r\n        <div style={{ backgroundColor: props.rating && getRGB(props.rating), height: size }}>\r\n            <TextureLoader\r\n                size={size}\r\n                file={props.item.texture}\r\n                sourcerect={props.item.sourcerect}\r\n                margin={0}\r\n            />\r\n        </div>\r\n    </Link>\r\n}","import TextureLoader from '../Components/TextureLoader'\r\nimport useGetParams from './useGetParams'\r\nimport gameData from \"../parsed_data.json\"\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport ClickableItem from '../Components/ClickableItem'\r\nimport getRGB from '../Utils/getRGB'\r\nimport {\r\n    ENGLISH_SKILL_NAMES,\r\n    FABRICATOR_OPTIONS,\r\n    BASE_MULTIPLIER_OPTION,\r\n    LOWEST_MULTIPLIER_OPTION,\r\n    HIGHEST_MULTIPLIER_OPTION,\r\n    LOCATIONAL_OUTPOST_OPTIONS,\r\n    OUTPOST_OPTIONS,\r\n} from '../globals'\r\n\r\nconst data = gameData.items\r\nconst rnd = price => Math.floor(price)\r\nconst compareItems = (a, b) => a.rating < b.rating ? 1 : a.rating === b.rating ? 0 : -1\r\n\r\nconst InlineItem = props => {\r\n    return <div>\r\n        <ClickableItem\r\n            item={props.item}\r\n            identifier={props.identifier}\r\n            rating={props.additionalRating}\r\n        /><b>{(props.prefix || \"\") + props.rating + (props.postfix || \"\")}</b></div>\r\n}\r\n\r\nconst RatedItems = props => {\r\n    return props.items.length ? <>\r\n        <h5 className=\"mb-0\">{props.header}</h5><small>{props.explanation}</small>\r\n        <div className=\"py-4\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {props.items.sort(compareItems).map(\r\n                obj => <InlineItem key={obj.identifier} identifier={obj.identifier} item={obj.item} rating={obj.rating} postfix={props.postfix} />\r\n            )}\r\n        </div></> : <></>\r\n}\r\n\r\nconst calculateItem = (item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty) => {\r\n\r\n    const getOutpostData = (item, location) => item.price?.modified?.[location]\r\n\r\n    const getOutpostMultiplier = (item, location) => {\r\n        const price_data = item.price\r\n        if (price_data === undefined) return 1\r\n\r\n        if (location === LOWEST_MULTIPLIER_OPTION.value) return price_data.min_multiplier\r\n        else if (location === HIGHEST_MULTIPLIER_OPTION.value) return price_data.max_multiplier\r\n        else return price_data.modified?.[location]?.multiplier || 1\r\n    }\r\n\r\n    const hasPriceData = item => item.price?.default !== undefined\r\n\r\n    const isSoldThere = (item, location) => {\r\n        if (location === undefined) location = outpost\r\n        if (\r\n            location === BASE_MULTIPLIER_OPTION.value ||\r\n            location === LOWEST_MULTIPLIER_OPTION.value ||\r\n            location === HIGHEST_MULTIPLIER_OPTION.value\r\n        ) {\r\n            return item.price?.soldsomewhere === \"true\"\r\n        }\r\n        const outpostData = getOutpostData(item, location)\r\n        return hasPriceData(item) && item.price.minleveldifficulty <= leveldifficulty && (\r\n            (item.price.soldeverywhere !== \"false\") ||\r\n            (outpostData && (outpostData.sold !== \"false\"))\r\n        )\r\n    }\r\n\r\n    const getBuyingPrice = (item, location) => {\r\n        if (isSoldThere(item, location)) return Math.max(rnd(\r\n            rnd(\r\n                item.price.default * getOutpostMultiplier(item, location || outpost)\r\n            ) * (location === undefined ? (1 - reputation * .001) : 1)\r\n        ), 1)\r\n    }\r\n\r\n    const getSellingPrice = (item, location) => {\r\n        if (hasPriceData(item)) return Math.max(rnd(\r\n            rnd(\r\n                rnd(item.price.default * getOutpostMultiplier(item, location || destoutpost)) * .8\r\n            ) * (location === undefined ? sellmultiplier * (1 + destreputation * .001) : 1)\r\n        ), 1)\r\n    }\r\n\r\n    const getFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getBuyingPrice(data[id])) || Infinity) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getDeconstructionProfit = (item, buyingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (buyingprice || Infinity)\r\n\r\n    const getSellFabricationProfit = (item, sellingprice) => Object.entries(item.fabricate || {}).reduce(\r\n        (sum, [id, amt]) => sum - ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) + (sellingprice || 0)\r\n\r\n    const getSellDeconstructionProfit = (item, sellingprice) => Object.entries(item.deconstruct || {}).reduce(\r\n        (sum, [id, amt]) => sum + ((getSellingPrice(data[id])) || 0) * amt, 0\r\n    ) - (sellingprice || 0)\r\n\r\n    const getRealFabricationTime = item => {\r\n        if (item.skills === undefined) return item.fabricate_time / 2\r\n        const degreeOfSuccess = (Object.entries(item.skills).reduce(\r\n            (sum, [skill, level]) =>\r\n                sum + skills[skill] - level, 0\r\n        ) / Object.keys(item.skills).length + 100) / 200\r\n        const t = degreeOfSuccess < .5 ? degreeOfSuccess * degreeOfSuccess : degreeOfSuccess * 2\r\n        return item.fabricate_time / (Math.pow(1.05, upgrades.fabricator)) / Math.max(Math.min(t, 2), .01)\r\n    }\r\n\r\n    const getRealDeconstructionTime = item => item.deconstruct_time / (Math.pow(1.05, upgrades.deconstructor))\r\n\r\n    if (item === undefined) {\r\n        const [trade, fabr, sellFabr, dec, sellDec] = [[], [], [], [], []]\r\n\r\n        const usefulMats = {}\r\n\r\n        const updateUsefulMaterials = ingredients => {\r\n            for (const ingredientId in ingredients) {\r\n                let ingredient = data[ingredientId]\r\n                if (getBuyingPrice(ingredient)) {\r\n                    if (ingredientId in usefulMats) {\r\n                        usefulMats[ingredientId].rating += 1\r\n                    } else {\r\n                        usefulMats[ingredientId] = { item: ingredient, identifier: ingredientId, rating: 1 }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [identifier, item] of Object.entries(data)) {\r\n\r\n            let buyingprice = getBuyingPrice(item)\r\n            let sellingprice = getSellingPrice(item)\r\n            let tradeProfit = sellingprice - buyingprice\r\n\r\n            if (tradeProfit > 0) {\r\n                trade.push({ item, identifier, rating: Math.round(1000 * tradeProfit / buyingprice) / 10 })\r\n            }\r\n\r\n            let fabrProfit = item.fabricate ? Math.round(100 *\r\n                getFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (fabricatortypes.value === \"all\" || (item.fabricator_types || \"\").split(\",\").includes(fabricatortypes.value)) {\r\n                if (fabrProfit > 0) {\r\n                    fabr.push({ item, identifier, rating: fabrProfit })\r\n                    updateUsefulMaterials(item.fabricate)\r\n\r\n                } else if (fabrProfit === -Infinity) {\r\n                    fabrProfit = item.fabricate ? Math.round(100 *\r\n                        getSellFabricationProfit(item, sellingprice) / getRealFabricationTime(item)\r\n                    ) / 100 : 0\r\n                    if (fabrProfit > 0) {\r\n                        sellFabr.push({ item, identifier, rating: fabrProfit })\r\n                        updateUsefulMaterials(item.fabricate)\r\n                    }\r\n                }\r\n            }\r\n\r\n            let decProfit = item.deconstruct ? Math.round(100 *\r\n                getDeconstructionProfit(item, buyingprice) / getRealDeconstructionTime(item)\r\n            ) / 100 : 0\r\n\r\n            if (decProfit > 0) {\r\n                dec.push({ item, identifier, rating: decProfit })\r\n\r\n            } else if (decProfit === -Infinity) {\r\n                decProfit = item.deconstruct ? Math.round(100 *\r\n                    getSellDeconstructionProfit(item, sellingprice) / getRealDeconstructionTime(item)\r\n                ) / 100 : 0\r\n                if (decProfit > 0) {\r\n                    sellDec.push({ item, identifier, rating: decProfit })\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            homepageResults: <>\r\n                <RatedItems\r\n                    items={trade}\r\n                    postfix=\"%\"\r\n                    header=\"Trading investment returns\"\r\n                    explanation=\"(with no crafting involved)\" />\r\n                <RatedItems\r\n                    items={Object.values(usefulMats)}\r\n                    header=\"Useful crafting materials\"\r\n                    explanation=\"(involved in N profitable recipes and sold here)\" />\r\n                <RatedItems\r\n                    items={fabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Fabrication profits per fabrication time\"\r\n                    explanation=\"(departure sells ingredients)\" />\r\n                <RatedItems\r\n                    items={sellFabr}\r\n                    postfix=\"/s\"\r\n                    header=\"Other fabrication profits\"\r\n                    explanation=\"(you have to acquire the ingredients through means other than trading)\" />\r\n                <RatedItems\r\n                    items={dec}\r\n                    postfix=\"/s\"\r\n                    header=\"Deconstruction profits per deconstruction time\"\r\n                    explanation=\"(departure sells those items)\" />\r\n                <RatedItems\r\n                    items={sellDec}\r\n                    postfix=\"/s\"\r\n                    header=\"Other deconstruction profits\"\r\n                    explanation=\"(you have to acquire the item through means other than trading)\" />\r\n            </>\r\n        }\r\n    }\r\n\r\n    const buyingprice = getBuyingPrice(item)\r\n    const sellingprice = getSellingPrice(item)\r\n\r\n    const getColorCodedUsedIn = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.used_in || {}).map(\r\n                ([usedInId, amount]) =>\r\n                ([usedInId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellFabricationProfit(\r\n                        data[usedInId], getSellingPrice(data[usedInId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const getColorCodedScrappedFrom = () => {\r\n        return Object.fromEntries(\r\n            Object.entries(item.scrapped_from || {}).map(\r\n                ([scrappedFromId, amount]) =>\r\n                ([scrappedFromId, {\r\n                    amount: amount,\r\n                    additionalRating: getSellDeconstructionProfit(\r\n                        data[scrappedFromId], getSellingPrice(data[scrappedFromId])) * amount * 2\r\n                }])\r\n            )\r\n        )\r\n    }\r\n\r\n    const baseprice = item.price?.default\r\n    const pricesData = LOCATIONAL_OUTPOST_OPTIONS.reduce((result, outpostType) => {\r\n        result[OUTPOST_OPTIONS[outpostType]?.label] = [\r\n            getBuyingPrice(item, outpostType),\r\n            getSellingPrice(item, outpostType),\r\n            getRGB((baseprice - getBuyingPrice(item, outpostType)) / baseprice * 600),\r\n            getRGB((getSellingPrice(item, outpostType) - baseprice) / baseprice * 600),\r\n        ]\r\n        return result\r\n    }, {})\r\n\r\n    return {\r\n        buyingprice, sellingprice, pricesData,\r\n        fabricateTime: (Math.round(100 * getRealFabricationTime(item)) / 100) || undefined,\r\n        fabricationBatch: item.fabrication_batch || 1.,\r\n        deconstructTime: (Math.round(100 * getRealDeconstructionTime(item)) / 100) || undefined,\r\n        randomDeconstruction: item.random_deconstruction ? \"yes\" : undefined,\r\n        minAmt: getOutpostData(item, outpost)?.min_amt,\r\n        tradingProfit: (sellingprice === undefined || buyingprice === undefined) ?\r\n            undefined : sellingprice - buyingprice,\r\n        fabricationProfit: getFabricationProfit(item, sellingprice),\r\n        deconstructionProfit: getDeconstructionProfit(item, buyingprice),\r\n        sellFabricationProfit: getSellFabricationProfit(item, sellingprice),\r\n        sellDeconstructionProfit: getSellDeconstructionProfit(item, sellingprice),\r\n        outpostmultiplier: getOutpostMultiplier(item, outpost),\r\n        destoutpostmultiplier: getOutpostMultiplier(item, destoutpost),\r\n        usedIn: getColorCodedUsedIn(),\r\n        scrappedFrom: getColorCodedScrappedFrom(),\r\n        minleveldifficulty: item.price?.minleveldifficulty || undefined,\r\n    }\r\n}\r\n\r\nconst ProfitText = props => {\r\n    if (props.profit === -Infinity) return <small>Source item(s) cannot be bought at departure</small>\r\n    const profitable = props.profit >= 0\r\n    return <span>{profitable ? \"Profit\" : \"Loss\"}: <b style={{\r\n        color: profitable ? \"green\" : \"red\"\r\n    }}>{Math.round((profitable ? props.profit : -props.profit) * 100) / 100}</b> <span className=\"text-muted\">\r\n        ({Math.round(props.profit/props.time*100)/100}/s) {props.children}\r\n    </span></span>\r\n}\r\n\r\nconst BlockWithItems = props => {\r\n    return Object.keys(props.itemsObj || {}).length ? (\r\n        <div className=\"mt-2\">\r\n            <h5>{props.mainText}</h5>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n                {Object.entries(props.itemsObj).map(\r\n                    ([identifier, value]) =>\r\n                        <InlineItem\r\n                            key={identifier}\r\n                            item={data[identifier]}\r\n                            identifier={identifier}\r\n                            rating={props.colorCoded ? value.amount : value}\r\n                            additionalRating={props.colorCoded && value.additionalRating}\r\n                            prefix=\"x \" />\r\n                )}\r\n            </div>\r\n            {props.children}\r\n        </div>) : <></>\r\n}\r\n\r\nexport default function useCalculator(identifier) {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const item = data[identifier]\r\n\r\n\r\n    const outpost = validateOutpost(getParams.outpost).value\r\n    const reputation = validateReputation(getParams.reputation)\r\n    const destoutpost = validateOutpost(getParams.destoutpost).value\r\n    const destreputation = validateReputation(getParams.destreputation)\r\n    const fabricatortypes = validateFabricator(getParams.fabricator)\r\n    const skills = {\r\n        helm: validateSkill(getParams.helm),\r\n        weapons: validateSkill(getParams.weapons),\r\n        mechanical: validateSkill(getParams.mechanical),\r\n        electrical: validateSkill(getParams.electrical),\r\n        medical: validateSkill(getParams.medical),\r\n    }\r\n    const upgrades = {\r\n        fabricator: validateUpgrades(getParams.fabrlvl),\r\n        deconstructor: validateUpgrades(getParams.declvl),\r\n    }\r\n    const sellmultiplier = validateStoreBalance(getParams.balance).numeric\r\n    const leveldifficulty = validateDifficultyLevel(getParams.difficulty)\r\n\r\n    const calcData = calculateItem(item, outpost, reputation, destoutpost, destreputation, fabricatortypes, skills, upgrades, sellmultiplier, leveldifficulty)\r\n\r\n    if (item === undefined) return {\r\n        noItem: true,\r\n        ...calcData,\r\n    }\r\n    return {\r\n        displayName: item.display_name,\r\n        fabricatorTypes: item.fabricator_types?.split(\",\").map(name => FABRICATOR_OPTIONS[name]?.label || name).join(\", \"),\r\n        skills: Object.entries(item.skills || {}).map(\r\n            ([k, v], i) => <div key={i} style={{marginBottom: 5}}>{`${ENGLISH_SKILL_NAMES[k] || k}: ${v}`}</div>\r\n        ),\r\n        ...calcData,\r\n        fabricationBlock: <BlockWithItems itemsObj={item.fabricate} mainText=\"Fabricated from\">\r\n            <ProfitText profit={calcData.fabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellFabricationProfit} time={calcData.fabricateTime}><br />\r\n                <small className=\"text-muted\">(when you find the ingredients en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        deconstuctionBlock: <BlockWithItems itemsObj={item.deconstruct} mainText=\"Deconstructed to\">\r\n            <ProfitText profit={calcData.deconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you buy at departure and sell at destination)</small>\r\n            </ProfitText><br />\r\n            <ProfitText profit={calcData.sellDeconstructionProfit} time={calcData.deconstructTime}><br />\r\n                <small className=\"text-muted\">(when you find the item en route)</small>\r\n            </ProfitText>\r\n        </BlockWithItems>,\r\n        usedinBlock: <BlockWithItems itemsObj={calcData.usedIn} mainText=\"Used in\" colorCoded />,\r\n        scrappedfromBlock: <BlockWithItems itemsObj={calcData.scrappedFrom} mainText=\"Scrapped from\" colorCoded />,\r\n        refilledWithBlock: <BlockWithItems itemsObj={item.refilled_with} mainText=\"Refilled with\">\r\n            <small className=\"text-muted\">(deconstruction may not yield resources</small><br />\r\n            <small className=\"text-muted\">if an item is partially depleted)</small>\r\n        </BlockWithItems>,\r\n        image: <TextureLoader\r\n            size={100}\r\n            file={item.texture}\r\n            sourcerect={item.sourcerect}\r\n            margin={0}\r\n        />,\r\n    }\r\n}","import useGetParams from '../Hooks/useGetParams'\r\nimport { Row, Col, Table, Tabs, Tab } from 'react-bootstrap'\r\nimport useCalculator from '../Hooks/useCalculator'\r\n\r\nconst TableData = props => {\r\n    return props.value !== props.missingValue ?\r\n        <tr>\r\n            <td style={{minWidth: 80}}>{props.children}</td>\r\n            <td style={{minWidth: 80}}>{props.value}</td>\r\n        </tr> : <></>\r\n}\r\n\r\nconst PriceTableData = ({outpost, prices, baseprices}) => {\r\n    const [buyingprice, sellingprice, buycolor, sellcolor] = prices\r\n    return <tr>\r\n        <td style={{minWidth: 80, padding: 5}}>{outpost}</td>\r\n        <td style={{minWidth: 40, padding: 5, color: buycolor}}>{buyingprice}</td>\r\n        <td style={{minWidth: 40, padding: 5, color: sellcolor}}>{sellingprice}</td>\r\n    </tr>\r\n}\r\n\r\nconst InfoTable = props => {\r\n\r\n    return <div style={{overflowWrap: \"anywhere\"}}>\r\n        <Table striped bordered hover variant=\"dark\" style={{ margin: 0 }}>\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan=\"2\">\r\n                        <div style={{\r\n                            border: \"1.5px solid #454d55\",\r\n                            borderRadius: \"10px\",\r\n                            display: \"inline-block\",\r\n                            padding: \"9px 8px 10px 10px\",\r\n                        }}>{props.calculator.image}</div>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n        </Table>\r\n        <Tabs\r\n            defaultActiveKey=\"main-tab\"\r\n            className=\"table-dark table-striped\"\r\n            style={{ border: 0 }}\r\n            fill\r\n        >\r\n            <Tab eventKey=\"main-tab\" title=\"Main\" style={{ backgroundColor: \"black\" }}>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <tbody>\r\n                        <TableData value={props.calculator.tradingProfit}>Trading margin</TableData>\r\n                        <TableData value={props.calculator.buyingprice}>Buying price</TableData>\r\n                        <TableData value={props.calculator.sellingprice}>Selling price</TableData>\r\n                        <TableData value={props.calculator.minAmt}>Minimal amount sold at departure</TableData>\r\n                        <TableData value={props.calculator.outpostmultiplier} missingValue={1}>Departure multiplier</TableData>\r\n                        <TableData value={props.calculator.destoutpostmultiplier} missingValue={1}>Destination multiplier</TableData>\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </Tab>\r\n            <Tab eventKey=\"crafting-tab\" title=\"Crafting\">\r\n\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <tbody>\r\n                        <TableData value={props.calculator.fabricateTime}>Fabrication time</TableData>\r\n                        <TableData value={props.calculator.fabricatorTypes}>Fabricator type(s)</TableData>\r\n                        <TableData value={props.calculator.fabricationBatch} missingValue={1.}>Fabrication batch</TableData>\r\n                        <TableData value={props.calculator.deconstructTime}>Deconstruction time</TableData>\r\n                        <TableData value={props.calculator.randomDeconstruction}>Deconstruction is random</TableData>\r\n                        <TableData value={props.calculator.skills?.length ? props.calculator.skills : undefined}>Fabrication skills</TableData>\r\n                        <TableData value={props.calculator.minleveldifficulty}>Minimum difficulty level</TableData>\r\n                    </tbody>\r\n                </Table>\r\n            </Tab>\r\n\r\n            <Tab eventKey=\"prices-tab\" title=\"Prices\">\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <tbody>\r\n                        {Object.entries(props.calculator.pricesData).map(\r\n                            entry => <PriceTableData\r\n                                key={entry[0]}\r\n                                outpost={entry[0]}\r\n                                prices={entry[1]}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </Tab>\r\n        </Tabs>\r\n    </div>\r\n}\r\n\r\nexport default function PageContents() {\r\n\r\n    const getParams = useGetParams()[0]\r\n    const identifier = getParams.identifier\r\n    const calculatorResults = useCalculator(identifier)\r\n    if (calculatorResults.noItem) return calculatorResults.homepageResults\r\n\r\n    return <>\r\n        <Row>\r\n            <Col><h4>{calculatorResults.displayName}</h4></Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n            <Col md={4} className=\"mb-3\"><InfoTable calculator={calculatorResults} /></Col>\r\n            <Col md={8}>\r\n                {calculatorResults.fabricationBlock}\r\n                {calculatorResults.deconstuctionBlock}\r\n                {calculatorResults.usedinBlock}\r\n                {calculatorResults.scrappedfromBlock}\r\n                {calculatorResults.refilledWithBlock}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport { OUTPOST_OPTIONS, DEFAULT_OUTPOST_OPTION } from '../globals'\r\nimport validateOutpost from '../Utils/validateOutpost'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function OutpostSelect(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n\r\n  const getParamName = props.getParamName || \"outpost\"\r\n\r\n  const handleChange = e => {\r\n    pushGetParams({ [getParamName]: e.value === DEFAULT_OUTPOST_OPTION.value ? undefined : e.value })\r\n  }\r\n\r\n  return <Select\r\n    value={validateOutpost(getParams[getParamName])}\r\n    styles={generateStyles({flexGrow: 1, minWidth: 120, flexBasis: 120}, {padding: 8})}\r\n    theme={customThemeOverrides}\r\n    options={Object.values(OUTPOST_OPTIONS)}\r\n    maxMenuHeight={400}\r\n    isSearchable={false}\r\n    onChange={handleChange}\r\n  />\r\n}\r\n","import useGetParams from '../Hooks/useGetParams'\r\nimport validateReputation from '../Utils/validateReputation'\r\nimport { useRef } from \"react\"\r\n\r\nexport default function ReputationInput(props) {\r\n\r\n  const [getParams, pushGetParams] = useGetParams()\r\n  const inputRef = useRef()\r\n\r\n  const getParamName = props.getParamName || \"reputation\"\r\n\r\n  const updateReputation = e => {\r\n    e.target.value = validateReputation(e.target.value)\r\n    pushGetParams({ [getParamName]: e.target.value === \"0\" ? undefined : e.target.value })\r\n  }\r\n\r\n  const onWheel = () => {\r\n    inputRef.current.blur()\r\n  }\r\n\r\n  return <div style={{\r\n    margin: 10,\r\n    minWidth: 120,\r\n    flexGrow: 1,\r\n    flexBasis: 120,\r\n  }}\r\n  ><input\r\n      type=\"number\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n      }}\r\n      onInput={updateReputation}\r\n      placeholder=\"Reputation\"\r\n      value={validateReputation(getParams[getParamName]) || \"\"}\r\n      step={5}\r\n      ref={inputRef}\r\n      onWheel={onWheel}\r\n    /></div>\r\n}","import { Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport useGetParams from '../Hooks/useGetParams'\r\n\r\nexport default function BrandNavLogo() {\r\n\r\n    const returnHomeGetParams = useGetParams(true)[0]\r\n\r\n    return <Navbar.Brand className=\"mt-3\">\r\n        <Link\r\n            to={returnHomeGetParams}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n            BarotraumaCalc\r\n        </Link>\r\n    </Navbar.Brand>\r\n}\r\n","import { useState, useContext } from 'react'\r\nimport { Accordion, Card, Button, AccordionContext, useAccordionToggle } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport { generateStyles, customThemeOverrides } from '../Utils/selectTheme'\r\nimport {\r\n    DEFAULT_SKILL_LEVEL,\r\n    FABRICATOR_OPTIONS,\r\n    DEFAULT_FABRICATOR_OPTION,\r\n    ENGLISH_SKILL_NAMES,\r\n    DEFAULT_UPGRADE_LEVELS,\r\n    STORE_BALANCE_MULTIPLIERS,\r\n    DEFAULT_STORE_BALANCE_MULTIPLIER,\r\n    DEFAULT_DIFFICULTY,\r\n} from '../globals'\r\nimport validateFabricator from '../Utils/validateFabricator'\r\nimport validateSkill from '../Utils/validateSkill'\r\nimport validateUpgrades from '../Utils/validateUpgrades'\r\nimport validateStoreBalance from '../Utils/validateStoreBalance'\r\nimport validateDifficultyLevel from '../Utils/validateDifficultyLevel'\r\nimport useGetParams from '../Hooks/useGetParams'\r\nimport { useRef } from \"react\"\r\n\r\nconst OutpostSwapper = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            outpost: getParams.destoutpost,\r\n            destoutpost: getParams.outpost,\r\n            reputation: getParams.destreputation,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Swap outposts\r\n    </Button>\r\n}\r\n\r\nconst OutpostRepeater = () => {\r\n    \r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleClick = () => {\r\n        pushGetParams({\r\n            destoutpost: getParams.outpost,\r\n            destreputation: getParams.reputation,\r\n        })\r\n    }\r\n\r\n    return <Button\r\n        style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n        variant=\"dark\"\r\n        onClick={handleClick}\r\n    >\r\n        Same destination\r\n    </Button>\r\n\r\n}\r\n\r\nconst SellingPriceMultPicker = props => {\r\n\r\n        const [getParams, pushGetParams] = useGetParams()\r\n    \r\n        const handleChange = e => {\r\n            pushGetParams({ balance: e.value === DEFAULT_STORE_BALANCE_MULTIPLIER.value ? undefined : e.value })\r\n        }\r\n    \r\n        return <Select\r\n            value={validateStoreBalance(getParams.balance)}\r\n            styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n            theme={customThemeOverrides}\r\n            options={Object.values(STORE_BALANCE_MULTIPLIERS)}\r\n            isSearchable={false}\r\n            onChange={handleChange} />\r\n    }\r\n\r\nconst SkillPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const [previousValue, changeValue] = useState(validateSkill(getParams[props.skill]))\r\n    const inputRef = useRef()\r\n\r\n    const getParamName = props.skill\r\n\r\n    const updateSkill = e => {\r\n        if (parseInt(previousValue) === DEFAULT_SKILL_LEVEL && (e.target.value === \"5\" || e.target.value === \"-5\")) {\r\n            e.target.value = DEFAULT_SKILL_LEVEL + parseInt(e.target.value)\r\n        }\r\n        e.target.value = validateSkill(e.target.value)\r\n        changeValue(e.target.value)\r\n        pushGetParams({ [props.skill]: parseInt(e.target.value) === DEFAULT_SKILL_LEVEL ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        position: 'relative',\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            step={5}\r\n            onInput={updateSkill}\r\n            placeholder={ENGLISH_SKILL_NAMES[props.skill] || props.skill}\r\n            value={validateSkill(getParams[getParamName]) === DEFAULT_SKILL_LEVEL ? \"\" : getParams[getParamName]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        />\r\n        {\r\n            validateSkill(getParams[getParamName]) !== DEFAULT_SKILL_LEVEL ? <span style={{\r\n                position: \"absolute\",\r\n                top: 7,\r\n                left: 35,\r\n            }}>{ENGLISH_SKILL_NAMES[props.skill] || props.skill}</span> : <></>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst UpgradesPicker = props => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const updateUpgrades = e => {\r\n        e.target.value = validateUpgrades(e.target.value)\r\n        pushGetParams({ [props.getparam]: e.target.value === \"0\" ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={updateUpgrades}\r\n            placeholder={props.label}\r\n            value={validateUpgrades(getParams[props.getparam]) === DEFAULT_UPGRADE_LEVELS ? \"\" : getParams[props.getparam]}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\nconst FabricatorPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n\r\n    const handleChange = e => {\r\n        pushGetParams({ fabricator: e.value === DEFAULT_FABRICATOR_OPTION.value ? undefined : e.value })\r\n    }\r\n\r\n    return <Select\r\n        value={validateFabricator(getParams.fabricator)}\r\n        styles={generateStyles({ flexGrow: 1, minWidth: 120, flexBasis: 120 })}\r\n        theme={customThemeOverrides}\r\n        options={Object.values(FABRICATOR_OPTIONS)}\r\n        isSearchable={false}\r\n        onChange={handleChange} />\r\n}\r\n\r\nconst LevelDifficultyPicker = () => {\r\n\r\n    const [getParams, pushGetParams] = useGetParams()\r\n    const inputRef = useRef()\r\n\r\n    const handleChange = e => {\r\n        e.target.value = validateDifficultyLevel(e.target.value)\r\n        pushGetParams({ difficulty: e.target.value === DEFAULT_DIFFICULTY ? undefined : e.target.value })\r\n    }\r\n\r\n    const onWheel = () => {\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    return <div style={{\r\n        margin: 10,\r\n        minWidth: 120,\r\n        flexGrow: 1,\r\n        flexBasis: 120,\r\n    }}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            step={5}\r\n            style={{\r\n                width: \"100%\",\r\n                paddingLeft: 10,\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n            }}\r\n            onInput={handleChange}\r\n            placeholder={'Difficulty %'}\r\n            value={validateDifficultyLevel(getParams.difficulty) === DEFAULT_DIFFICULTY ? \"\" : validateDifficultyLevel(getParams.difficulty)}\r\n            ref={inputRef}\r\n            onWheel={onWheel}\r\n        /></div>\r\n}\r\n\r\n\r\nexport default function AdditionalFilters(props) {\r\n\r\n    function ShowOptionsToggle({ children, eventKey, callback }) {\r\n        const currentEventKey = useContext(AccordionContext);\r\n\r\n        const decoratedOnClick = useAccordionToggle(\r\n            eventKey,\r\n            () => callback && callback(eventKey),\r\n        );\r\n\r\n        const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n        return (\r\n            <Button\r\n                style={{ padding: \"1px 5px\", margin: 5, borderRadius: 0 }}\r\n                variant=\"dark\"\r\n                onClick={decoratedOnClick}\r\n            >\r\n                {isCurrentEventKey ? \"Hide options\" : \"Additional options\"}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    return <Accordion>\r\n        <Card>\r\n            <Card.Header style={{ padding: 5 }}>\r\n                <ShowOptionsToggle eventKey=\"additional-filters\" />\r\n                <OutpostSwapper />\r\n                <OutpostRepeater />\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"additional-filters\">\r\n                <Card.Body>\r\n                    <b>Sell price multiplier</b>\r\n                    <SellingPriceMultPicker />\r\n                    <b>Allowed fabricators</b>\r\n                    <FabricatorPicker />\r\n                    <b>Location difficulty level (certain items are not sold at lower levels)</b>\r\n                    <LevelDifficultyPicker />\r\n                    <b>Skills (default is {DEFAULT_SKILL_LEVEL})</b>\r\n                    <SkillPicker skill=\"helm\" />\r\n                    <SkillPicker skill=\"weapons\" />\r\n                    <SkillPicker skill=\"mechanical\" />\r\n                    <SkillPicker skill=\"electrical\" />\r\n                    <SkillPicker skill=\"medical\" />\r\n                    <b>Fabrication speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"fabrlvl\" />\r\n                    <b>Deconstruction speed upgrades</b>\r\n                    <UpgradesPicker label=\"Every level increases speed by 5%\" getparam=\"declvl\" />\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    </Accordion>\r\n}","import { Container, Row, Col, Navbar } from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { SearchBar, ReputationInput, OutpostSelect, PageContents, BrandNavLogo, AdditionalFilters } from './BarotraumaCalc'\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" defaultExpanded className=\"pb-4\" >\r\n        <BrandNavLogo />\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mt-3\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <SearchBar />\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Departure\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect />\r\n              <ReputationInput />\r\n            </div></div>\r\n          <div style={{ display: 'flex', flexBasis: 250, flexGrow: 0, flexDirection: \"column\" }}>\r\n            <div><b style={{ color: \"white\" }}>\r\n              Destination\r\n          </b></div>\r\n            <div style={{ display: 'flex', flexGrow: 1 }}>\r\n              <OutpostSelect getParamName=\"destoutpost\" />\r\n              <ReputationInput getParamName=\"destreputation\" />\r\n            </div></div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <AdditionalFilters />\r\n      <Container className=\"pt-4 bg-white\">\r\n        <Row>\r\n          <Col>\r\n            <Route path=\"/\" children={<PageContents />}></Route>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer\">\r\n          <Col className=\"text-muted py-4\"><hr />I do not claim any rights to images and data used.\r\n            This is simply a convenience tool for the game called <a href=\"https://store.steampowered.com/app/602960/Barotrauma/\">Barotrauma</a> (v0.14.6.0).<br />\r\n            If you have found a bug or have a suggestion for me, you can <a href=\"https://github.com/lifearoundfreaks/barotrauma-calc/issues/new\">start an issue</a>.</Col>\r\n        </Row>\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <div className=\"App\"><App/></div>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}